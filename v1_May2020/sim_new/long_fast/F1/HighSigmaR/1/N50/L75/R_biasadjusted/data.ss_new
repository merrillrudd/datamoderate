#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sun Apr 26 17:59:25 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-26 17:49:18
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 166.248 0.1
2 1 1 190.432 0.1
3 1 1 215.004 0.1
4 1 1 240.632 0.1
5 1 1 267.341 0.1
6 1 1 294.61 0.1
7 1 1 322.279 0.1
8 1 1 350.63 0.1
9 1 1 379.687 0.1
10 1 1 408.86 0.1
11 1 1 437.043 0.1
12 1 1 462.952 0.1
13 1 1 485.598 0.1
14 1 1 504.571 0.1
15 1 1 520.187 0.1
16 1 1 534.464 0.1
17 1 1 552.102 0.1
18 1 1 577.156 0.1
19 1 1 608.08 0.1
20 1 1 638.95 0.1
21 1 1 665.43 0.1
22 1 1 687.443 0.1
23 1 1 706.773 0.1
24 1 1 724.423 0.1
25 1 1 740.44 0.1
26 1 1 731.135 0.1
27 1 1 1692.35 0.1
28 1 1 2628.86 0.1
29 1 1 3544.64 0.1
30 1 1 4433.14 0.1
31 1 1 5271.83 0.1
32 1 1 6034.11 0.1
33 1 1 6703.26 0.1
34 1 1 7271.44 0.1
35 1 1 7729.19 0.1
36 1 1 8061.66 0.1
37 1 1 8255.74 0.1
38 1 1 8314.78 0.1
39 1 1 8272.04 0.1
40 1 1 8182.6 0.1
41 1 1 8101.13 0.1
42 1 1 8095.62 0.1
43 1 1 8249.3 0.1
44 1 1 8553.44 0.1
45 1 1 8859.8 0.1
46 1 1 9027.97 0.1
47 1 1 9028.35 0.1
48 1 1 8892.66 0.1
49 1 1 8675.41 0.1
50 1 1 8421.78 0.1
51 1 1 8124.9 0.1
52 1 1 7765.92 0.1
53 1 1 7368.42 0.1
54 1 1 6977.96 0.1
55 1 1 6626.34 0.1
56 1 1 6133.18 0.1
57 1 1 5743.19 0.1
58 1 1 5438.13 0.1
59 1 1 5209.86 0.1
60 1 1 5070.72 0.1
61 1 1 5014.7 0.1
62 1 1 4825.03 0.1
63 1 1 4675.68 0.1
64 1 1 4580.13 0.1
65 1 1 4522.86 0.1
66 1 1 4447.98 0.1
67 1 1 4324.09 0.1
68 1 1 4182.51 0.1
69 1 1 4091.13 0.1
70 1 1 4121.47 0.1
71 1 1 4278.89 0.1
72 1 1 4450.17 0.1
73 1 1 4490.32 0.1
74 1 1 4350.16 0.1
75 1 1 4081.41 0.1
76 1 1 3755.48 0.1
77 1 1 3412.45 0.1
78 1 1 3066.08 0.1
79 1 1 2723.87 0.1
80 1 1 2390.43 0.1
81 1 1 2349.31 0.1
82 1 1 2303.87 0.1
83 1 1 2273.6 0.1
84 1 1 2272.73 0.1
85 1 1 2296.41 0.1
86 1 1 2327.16 0.1
87 1 1 2352.8 0.1
88 1 1 2376.96 0.1
89 1 1 2409.55 0.1
90 1 1 2449.97 0.1
91 1 1 2484.29 0.1
92 1 1 2497.05 0.1
93 1 1 2483.53 0.1
94 1 1 2451.62 0.1
95 1 1 2411.72 0.1
96 1 1 2371.37 0.1
97 1 1 2348.98 0.1
98 1 1 2378.27 0.1
99 1 1 2470.9 0.1
100 1 1 2594.71 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 1 1 5 4 3 1 4 3 2 5 2 4 5 4 2 2 0 0 1 0 0 0
 27 1 1 0 0 50 0 0 0 0 1 0 1 0 1 1 2 3 3 1 4 2 4 1 6 4 5 4 1 4 1 0 0 0 1 0 0 0
 28 1 1 0 0 50 0 0 0 0 0 0 2 0 1 1 0 0 1 3 2 7 3 3 4 4 3 6 2 2 4 1 0 0 1 0 0 0
 29 1 1 0 0 50 0 0 0 0 0 0 0 1 1 1 1 3 4 2 4 3 3 3 2 5 2 5 2 3 3 0 2 0 0 0 0 0
 30 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 0 0 4 4 5 2 3 3 2 3 3 5 6 5 1 2 0 0 0 0 0 0
 31 1 1 0 0 50 0 0 0 1 0 0 0 0 0 3 0 4 3 3 4 8 2 3 1 4 6 0 4 1 1 0 2 0 0 0 0 0
 32 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 1 2 1 3 4 4 5 2 2 5 5 4 6 1 3 0 0 1 0 0 0 0
 33 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 1 5 3 4 3 5 4 3 7 3 2 4 2 2 0 0 0 0 0 0 0
 34 1 1 0 0 50 0 0 0 0 0 0 1 0 0 2 1 2 3 1 0 4 5 5 5 5 5 3 0 4 0 2 1 0 1 0 0 0
 35 1 1 0 0 50 1 0 0 0 0 0 0 0 0 1 2 0 6 6 7 4 1 2 1 6 4 4 1 2 1 0 0 1 0 0 0 0
 36 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 2 1 3 2 0 4 5 2 3 10 4 4 3 2 1 0 1 0 0 0 0 0
 37 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 1 3 2 4 7 4 4 4 3 3 3 2 3 2 1 1 1 0 0 0 0
 38 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 2 3 0 4 9 2 5 4 7 3 6 4 0 1 0 0 0 0 0 0
 39 1 1 0 0 50 0 0 0 0 0 0 1 0 1 2 2 2 1 1 4 4 3 5 1 6 3 4 5 4 1 0 0 0 0 0 0 0
 40 1 1 0 0 50 0 0 0 1 0 0 1 0 1 0 1 1 1 3 2 4 5 3 2 1 7 5 2 4 3 1 0 0 1 1 0 0
 41 1 1 0 0 50 0 0 0 0 1 1 0 1 1 1 0 3 0 2 5 0 4 7 6 5 3 2 4 2 1 1 0 0 0 0 0 0
 42 1 1 0 0 50 0 0 0 0 1 1 2 3 1 0 1 3 3 1 5 4 3 4 3 6 2 1 2 2 0 2 0 0 0 0 0 0
 43 1 1 0 0 50 0 0 0 0 0 0 2 1 3 3 4 3 1 3 2 6 3 0 4 2 2 2 4 3 1 0 1 0 0 0 0 0
 44 1 1 0 0 50 0 0 0 0 0 0 0 0 1 3 4 7 6 5 4 2 3 2 2 3 3 2 1 1 1 0 0 0 0 0 0 0
 45 1 1 0 0 50 0 0 0 0 0 0 0 2 1 0 2 2 6 2 3 6 3 2 5 2 3 3 2 1 5 0 0 0 0 0 0 0
 46 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 1 2 3 7 7 7 2 2 3 6 3 1 1 1 0 0 2 0 0 0 0 0
 47 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 1 1 3 2 8 4 5 6 1 8 1 4 1 2 0 1 0 0 0 0 0 0
 48 1 1 0 0 50 0 0 0 0 0 0 0 1 0 0 1 1 5 2 3 8 5 4 4 3 7 3 0 1 1 1 0 0 0 0 0 0
 49 1 1 0 0 50 0 0 0 0 0 0 1 1 2 1 2 1 5 4 4 3 7 3 4 3 3 3 1 1 1 0 0 0 0 0 0 0
 50 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 6 4 1 4 3 3 6 5 1 4 4 2 3 2 1 0 1 0 0 0 0 0
 51 1 1 0 0 50 0 0 0 0 0 0 2 2 1 0 3 3 4 4 3 4 2 6 3 5 3 2 0 2 0 1 0 0 0 0 0 0
 52 1 1 0 0 50 0 0 0 0 0 0 0 1 1 1 1 4 0 8 2 1 3 9 4 5 3 1 3 2 0 1 0 0 0 0 0 0
 53 1 1 0 0 50 0 0 0 0 0 0 0 1 4 1 2 3 1 1 1 5 3 7 4 2 7 3 3 1 1 0 0 0 0 0 0 0
 54 1 1 0 0 50 0 0 0 0 0 1 0 1 1 1 4 4 6 5 3 1 3 2 4 4 3 3 2 1 1 0 0 0 0 0 0 0
 55 1 1 0 0 50 0 0 0 0 0 0 0 0 1 2 3 2 1 7 6 6 3 1 2 3 3 2 1 2 3 1 0 1 0 0 0 0
 56 1 1 0 0 50 0 0 0 0 0 1 0 1 2 1 1 1 3 5 8 2 1 5 5 2 2 3 2 2 1 0 1 1 0 0 0 0
 57 1 1 0 0 50 0 0 0 0 1 0 0 3 3 3 1 3 3 5 1 2 5 2 6 7 2 1 2 0 0 0 0 0 0 0 0 0
 58 1 1 0 0 50 0 0 0 1 1 2 1 0 1 1 0 3 6 9 2 2 1 1 3 3 2 6 1 2 2 0 0 0 0 0 0 0
 59 1 1 0 0 50 0 0 0 0 0 0 2 3 1 4 6 2 3 0 4 1 5 3 4 3 3 3 1 1 0 0 1 0 0 0 0 0
 60 1 1 0 0 50 0 0 0 0 0 0 0 0 1 5 3 3 3 3 7 4 3 4 3 1 4 2 2 2 0 0 0 0 0 0 0 0
 61 1 1 0 0 50 0 0 0 0 0 0 0 1 2 3 1 2 6 10 7 4 3 4 1 1 1 1 1 0 1 0 1 0 0 0 0 0
 62 1 1 0 0 50 0 0 0 0 0 2 2 3 1 1 3 2 5 8 3 3 6 1 1 1 5 2 1 0 0 0 0 0 0 0 0 0
 63 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 1 0 8 4 7 6 5 8 3 2 1 1 0 1 0 0 0 0 0 0 0 0
 64 1 1 0 0 50 0 0 0 0 0 0 1 1 4 4 6 2 3 4 2 5 4 3 3 3 2 2 0 1 0 0 0 0 0 0 0 0
 65 1 1 0 0 50 0 0 0 0 0 0 1 1 1 1 2 2 3 5 5 4 5 3 4 5 1 1 1 0 1 4 0 0 0 0 0 0
 66 1 1 0 0 50 0 0 0 1 0 0 0 2 1 3 2 3 2 6 5 6 4 2 1 2 5 0 2 2 0 1 0 0 0 0 0 0
 67 1 1 0 0 50 0 0 1 0 0 0 1 1 0 0 4 2 5 3 6 3 7 4 2 2 1 3 2 1 2 0 0 0 0 0 0 0
 68 1 1 0 0 50 0 0 1 0 0 0 0 1 3 2 5 3 2 5 3 5 6 2 5 3 2 1 0 1 0 0 0 0 0 0 0 0
 69 1 1 0 0 50 0 0 0 0 0 2 3 2 0 1 4 5 5 2 3 3 8 1 1 2 3 3 1 0 0 1 0 0 0 0 0 0
 70 1 1 0 0 50 0 0 0 0 0 0 1 3 1 6 3 3 3 3 2 4 6 3 2 5 2 1 2 0 0 0 0 0 0 0 0 0
 71 1 1 0 0 50 0 0 0 0 0 0 1 1 0 5 5 5 4 5 2 3 2 5 2 3 2 2 1 1 0 0 1 0 0 0 0 0
 72 1 1 0 0 50 0 0 0 0 0 0 1 0 0 2 1 5 8 10 7 5 4 0 2 1 1 1 1 1 0 0 0 0 0 0 0 0
 73 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 3 9 2 9 3 7 4 2 1 2 3 2 1 0 0 1 0 0 0 0 0 0
 74 1 1 0 0 50 0 0 0 0 0 0 0 1 0 0 2 2 5 3 11 7 6 4 0 3 0 2 2 0 1 1 0 0 0 0 0 0
 75 1 1 0 0 50 0 0 0 0 0 0 2 0 2 0 1 0 1 5 6 3 7 9 5 3 2 1 1 2 0 0 0 0 0 0 0 0
 76 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 0 1 2 3 8 5 4 4 6 4 5 1 1 0 1 0 0 0 0 0 0 0
 77 1 1 0 0 50 0 0 0 0 0 2 0 0 0 0 2 3 2 4 4 5 5 4 10 2 2 3 1 0 1 0 0 0 0 0 0 0
 78 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 0 2 0 1 2 3 8 6 5 5 5 3 2 2 2 2 0 1 0 0 0 0
 79 1 1 0 0 50 0 0 0 0 0 0 0 0 2 2 1 2 1 3 5 4 4 3 6 2 9 4 1 0 0 1 0 0 0 0 0 0
 80 1 1 0 0 50 0 0 0 0 0 0 0 1 0 0 2 2 2 1 5 3 4 1 9 6 5 3 2 1 0 3 0 0 0 0 0 0
 81 1 1 0 0 50 0 0 0 0 0 0 1 2 0 0 2 4 2 2 4 3 2 1 5 4 8 2 3 3 1 1 0 0 0 0 0 0
 82 1 1 0 0 50 0 0 0 0 0 0 1 1 0 0 2 1 5 4 6 3 6 1 4 3 4 3 1 3 1 0 0 0 0 1 0 0
 83 1 1 0 0 50 0 0 0 0 0 0 0 1 1 4 4 0 1 1 4 2 5 4 9 4 3 3 2 1 1 0 0 0 0 0 0 0
 84 1 1 0 0 50 0 0 0 0 0 0 1 2 0 1 3 6 1 3 3 4 2 5 2 3 2 5 4 1 2 0 0 0 0 0 0 0
 85 1 1 0 0 50 0 1 0 0 0 0 0 0 1 2 1 1 5 3 2 3 7 3 4 3 2 4 2 3 1 2 0 0 0 0 0 0
 86 1 1 0 0 50 0 0 0 0 0 0 1 0 0 2 2 3 3 3 4 3 7 3 6 2 5 4 2 0 0 0 0 0 0 0 0 0
 87 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 2 2 6 3 7 6 3 5 2 3 3 4 2 1 1 0 0 0 0 0 0 0
 88 1 1 0 0 50 0 0 0 0 0 0 2 1 1 2 0 1 3 3 5 2 3 7 3 3 4 6 2 1 0 1 0 0 0 0 0 0
 89 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 1 5 3 5 3 3 2 2 4 4 2 4 2 2 3 1 0 0 0 0 0 0
 90 1 1 0 0 50 0 0 0 0 0 0 0 0 2 3 1 4 3 4 4 6 2 2 4 5 2 2 2 1 2 1 0 0 0 0 0 0
 91 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 3 6 3 4 1 5 6 4 6 3 1 1 1 1 2 1 0 0 0 0 0 0
 92 1 1 0 0 50 0 0 0 0 0 0 0 1 0 0 3 2 3 6 5 7 9 4 3 2 2 1 0 2 0 0 0 0 0 0 0 0
 93 1 1 0 0 50 0 0 0 1 0 1 2 0 0 1 1 1 2 3 4 2 4 6 5 3 3 4 2 3 0 2 0 0 0 0 0 0
 94 1 1 0 0 50 0 0 0 0 0 0 0 1 1 0 1 1 3 3 4 7 4 6 5 4 4 1 3 0 1 1 0 0 0 0 0 0
 95 1 1 0 0 50 0 0 0 0 0 0 0 1 0 3 1 3 2 1 5 2 3 3 5 4 3 4 3 4 1 1 1 0 0 0 0 0
 96 1 1 0 0 50 0 0 0 0 0 1 0 1 1 1 0 4 5 4 4 5 3 5 4 1 1 4 3 2 0 0 0 0 1 0 0 0
 97 1 1 0 0 50 0 0 0 0 0 0 1 3 1 1 0 1 4 2 8 2 1 3 6 4 7 1 0 1 1 3 0 0 0 0 0 0
 98 1 1 0 0 50 0 0 0 0 0 0 0 0 4 5 1 4 3 0 5 3 2 6 2 1 5 2 3 1 1 1 0 0 1 0 0 0
 99 1 1 0 0 50 1 0 0 0 0 0 0 0 2 5 2 5 4 0 0 2 4 5 7 5 3 2 1 1 1 0 0 0 0 0 0 0
 100 1 1 0 0 50 0 0 0 0 0 0 0 0 0 2 4 3 3 3 8 1 3 3 2 4 5 5 2 1 0 1 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 166.248 0.1
2 1 1 190.432 0.1
3 1 1 215.004 0.1
4 1 1 240.632 0.1
5 1 1 267.341 0.1
6 1 1 294.61 0.1
7 1 1 322.279 0.1
8 1 1 350.63 0.1
9 1 1 379.687 0.1
10 1 1 408.86 0.1
11 1 1 437.043 0.1
12 1 1 462.952 0.1
13 1 1 485.598 0.1
14 1 1 504.571 0.1
15 1 1 520.187 0.1
16 1 1 534.464 0.1
17 1 1 552.102 0.1
18 1 1 577.156 0.1
19 1 1 608.08 0.1
20 1 1 638.95 0.1
21 1 1 665.43 0.1
22 1 1 687.443 0.1
23 1 1 706.773 0.1
24 1 1 724.423 0.1
25 1 1 740.44 0.1
26 1 1 731.135 0.1
27 1 1 1692.35 0.1
28 1 1 2628.86 0.1
29 1 1 3544.64 0.1
30 1 1 4433.14 0.1
31 1 1 5271.83 0.1
32 1 1 6034.11 0.1
33 1 1 6703.26 0.1
34 1 1 7271.44 0.1
35 1 1 7729.19 0.1
36 1 1 8061.66 0.1
37 1 1 8255.74 0.1
38 1 1 8314.78 0.1
39 1 1 8272.04 0.1
40 1 1 8182.6 0.1
41 1 1 8101.13 0.1
42 1 1 8095.62 0.1
43 1 1 8249.3 0.1
44 1 1 8553.44 0.1
45 1 1 8859.8 0.1
46 1 1 9027.97 0.1
47 1 1 9028.35 0.1
48 1 1 8892.66 0.1
49 1 1 8675.41 0.1
50 1 1 8421.78 0.1
51 1 1 8124.9 0.1
52 1 1 7765.92 0.1
53 1 1 7368.42 0.1
54 1 1 6977.96 0.1
55 1 1 6626.34 0.1
56 1 1 6133.18 0.1
57 1 1 5743.19 0.1
58 1 1 5438.13 0.1
59 1 1 5209.86 0.1
60 1 1 5070.72 0.1
61 1 1 5014.7 0.1
62 1 1 4825.03 0.1
63 1 1 4675.68 0.1
64 1 1 4580.13 0.1
65 1 1 4522.86 0.1
66 1 1 4447.98 0.1
67 1 1 4324.09 0.1
68 1 1 4182.51 0.1
69 1 1 4091.13 0.1
70 1 1 4121.47 0.1
71 1 1 4278.89 0.1
72 1 1 4450.17 0.1
73 1 1 4490.32 0.1
74 1 1 4350.16 0.1
75 1 1 4081.41 0.1
76 1 1 3755.48 0.1
77 1 1 3412.45 0.1
78 1 1 3066.08 0.1
79 1 1 2723.87 0.1
80 1 1 2390.43 0.1
81 1 1 2349.31 0.1
82 1 1 2303.87 0.1
83 1 1 2273.6 0.1
84 1 1 2272.73 0.1
85 1 1 2296.41 0.1
86 1 1 2327.16 0.1
87 1 1 2352.8 0.1
88 1 1 2376.96 0.1
89 1 1 2409.55 0.1
90 1 1 2449.97 0.1
91 1 1 2484.29 0.1
92 1 1 2497.05 0.1
93 1 1 2483.53 0.1
94 1 1 2451.62 0.1
95 1 1 2411.72 0.1
96 1 1 2371.37 0.1
97 1 1 2348.98 0.1
98 1 1 2378.27 0.1
99 1 1 2470.9 0.1
100 1 1 2594.71 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 190303 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50  0.0138722 0.00891775 0.0270488 0.105669 0.135618 0.133641 0.22958 0.350427 0.541915 0.879431 1.35009 1.90581 2.40235 2.71871 2.88276 3.0038 3.20563 3.54013 3.91344 4.1908 4.23818 3.97323 3.40718 2.64702 1.85007 1.15729 0.645418 0.319965 0.140683 0.0547624 0.0188462 0.00771869
 27 1 1 0 0 50  0.00880473 0.00567903 0.0175539 0.0715321 0.121945 0.238286 0.460685 0.563915 0.62706 0.836362 1.18385 1.67797 2.2628 2.78404 3.10885 3.23224 3.32245 3.533 3.82352 4.06658 4.11522 3.87105 3.3324 2.59788 1.82084 1.14149 0.637647 0.316491 0.139275 0.0542476 0.0186769 0.00765197
 28 1 1 0 0 50  0.00836202 0.00500665 0.0111559 0.0453047 0.0786881 0.16599 0.379712 0.660027 1.0124 1.3001 1.43714 1.65184 2.06716 2.58757 3.04708 3.31165 3.43852 3.58526 3.77926 3.95055 3.97095 3.73401 3.22188 2.51926 1.77073 1.11273 0.622763 0.309559 0.136376 0.0531626 0.0183144 0.00750746
 29 1 1 0 0 50  0.00858931 0.00508279 0.0105699 0.0420231 0.0645478 0.11045 0.249451 0.473404 0.86443 1.40524 1.91073 2.23196 2.39197 2.58916 2.90595 3.2093 3.42471 3.6059 3.76394 3.87057 3.84327 3.59392 3.09846 2.4264 1.70936 1.07664 0.603795 0.300636 0.132623 0.0517539 0.0178435 0.00731991
 30 1 1 0 0 50  0.0162863 0.00901021 0.0111142 0.0434121 0.0649912 0.102897 0.212904 0.35604 0.615371 1.08277 1.72817 2.41374 2.90574 3.10937 3.16591 3.23468 3.37727 3.57638 3.74764 3.83191 3.7674 3.49476 3.00058 2.34765 1.65546 1.04449 0.586867 0.292717 0.129324 0.0505288 0.0174385 0.0071608
 31 1 1 0 0 50  0.00709578 0.00505146 0.0207889 0.0818158 0.10815 0.119788 0.21796 0.339898 0.530417 0.860268 1.35848 2.05615 2.82147 3.39658 3.62886 3.59515 3.54211 3.61827 3.74909 3.82021 3.73755 3.44529 2.94272 2.2957 1.61755 1.02119 0.574519 0.286996 0.126985 0.0496817 0.0171658 0.00705729
 32 1 1 0 0 50  0.00882431 0.00511268 0.00937776 0.0389379 0.0771685 0.184064 0.37386 0.483145 0.585554 0.819926 1.18329 1.7181 2.42447 3.16707 3.71285 3.90022 3.8572 3.82009 3.83719 3.84285 3.72904 3.41909 2.90699 2.25982 1.58901 1.00253 0.564235 0.282134 0.124989 0.0489629 0.0169377 0.00697294
 33 1 1 0 0 50  0.0071226 0.0044087 0.0115066 0.0455665 0.0663421 0.102947 0.241191 0.483557 0.830234 1.14011 1.34949 1.64946 2.15195 2.8035 3.44645 3.86565 4.01848 4.03889 4.00171 3.92228 3.74505 3.40139 2.87564 2.22691 1.56176 0.983835 0.553421 0.276792 0.122712 0.0481188 0.0166638 0.00686965
 34 1 1 0 0 50  0.00471408 0.00303742 0.00933827 0.0376797 0.0607364 0.110526 0.229294 0.364434 0.612275 1.06353 1.59617 2.02687 2.33688 2.69773 3.18181 3.64013 3.95089 4.11911 4.14128 4.03676 3.80128 3.4087 2.85678 2.2003 1.5378 0.966644 0.543082 0.271493 0.120378 0.047229 0.0163686 0.00675619
 35 1 1 0 0 50  0.00899653 0.00499233 0.00637688 0.0255082 0.0440653 0.0913038 0.203145 0.345148 0.56556 0.899093 1.36095 1.96643 2.55977 2.97974 3.27283 3.54327 3.8249 4.07974 4.20023 4.13885 3.88828 3.4556 2.86875 2.19343 1.52549 0.955902 0.536005 0.267661 0.118623 0.0465418 0.0161366 0.00666625
 36 1 1 0 0 50  0.00920259 0.00550004 0.0120604 0.0470773 0.0628074 0.0735633 0.148583 0.275958 0.496197 0.823208 1.24052 1.77341 2.39872 3.00599 3.45264 3.69352 3.86258 4.06782 4.22071 4.21164 3.98212 3.53378 2.9159 2.21393 1.53068 0.95505 0.533992 0.266171 0.117838 0.0462108 0.0160206 0.00662103
 37 1 1 0 0 50  0.0103631 0.00611634 0.012522 0.0497061 0.0752965 0.119512 0.227218 0.305637 0.416465 0.67552 1.08333 1.61376 2.22311 2.85388 3.41043 3.77707 3.98655 4.16011 4.28413 4.28089 4.06829 3.62001 2.9825 2.25452 1.55056 0.962865 0.536376 0.266659 0.117849 0.0461656 0.015996 0.00661002
 38 1 1 0 0 50  0.0118781 0.0069969 0.0141519 0.055997 0.0833514 0.1297 0.261359 0.400223 0.568228 0.772541 1.01083 1.40343 1.97849 2.63456 3.24915 3.70946 4.01525 4.24224 4.37299 4.3607 4.14415 3.69264 3.04339 2.29644 1.57392 0.97338 0.540142 0.267677 0.118015 0.046153 0.015974 0.00659622
 39 1 1 0 0 50  0.0227705 0.0126559 0.0163655 0.0639428 0.0947909 0.145784 0.291331 0.44604 0.655683 0.942115 1.22307 1.51156 1.8777 2.3826 2.97837 3.50825 3.90948 4.2197 4.40201 4.40832 4.19203 3.73522 3.07816 2.32078 1.58752 0.978957 0.541445 0.267465 0.117596 0.0458877 0.0158562 0.00653872
 40 1 1 0 0 50  0.0605837 0.032819 0.0313417 0.119246 0.158924 0.180855 0.329384 0.498614 0.728197 1.05249 1.39391 1.73656 2.06096 2.39251 2.79347 3.2372 3.66767 4.05388 4.30862 4.36261 4.16931 3.72081 3.06653 2.31057 1.57855 0.971543 0.53601 0.264052 0.115781 0.0450699 0.015542 0.00639666
 41 1 1 0 0 50  0.010108 0.0106234 0.0781384 0.307295 0.388927 0.35619 0.557233 0.716059 0.865566 1.16085 1.51858 1.89533 2.24384 2.53181 2.78992 3.05609 3.3751 3.74367 4.0404 4.15093 4.00478 3.59116 2.96496 2.23437 1.52535 0.937543 0.51631 0.253795 0.111022 0.0431165 0.0148364 0.00609182
 42 1 1 0 0 50  0.00864775 0.00526436 0.0131246 0.0620538 0.19208 0.632798 1.30001 1.52751 1.5006 1.64592 1.82764 2.05564 2.34131 2.59639 2.78236 2.91678 3.08565 3.34356 3.60014 3.73046 3.63579 3.28464 2.72321 2.05571 1.40365 0.862137 0.474183 0.232703 0.101601 0.0393774 0.013522 0.00553835
 43 1 1 0 0 50  0.0121355 0.00687542 0.0105937 0.0421239 0.0694914 0.156688 0.504274 1.31808 2.49527 3.22956 3.15459 2.86858 2.73858 2.72514 2.75621 2.7764 2.82362 2.95802 3.12529 3.2254 3.15757 2.87167 2.39392 1.81325 1.24 0.761799 0.418748 0.205269 0.0894927 0.0346265 0.0118694 0.00484992
 44 1 1 0 0 50  0.00705201 0.00459981 0.0147135 0.0580789 0.080489 0.106349 0.228411 0.490777 1.17263 2.49542 4.00113 4.74548 4.43204 3.71044 3.15816 2.84213 2.70391 2.71168 2.78319 2.82878 2.75766 2.51333 2.10415 1.60002 1.09708 0.674878 0.371069 0.181813 0.0791918 0.0306023 0.0104747 0.00427107
 45 1 1 0 0 50  0.00722103 0.00428102 0.00903098 0.0367072 0.0641068 0.131545 0.269798 0.39376 0.628989 1.24705 2.45288 4.09668 5.36875 5.50225 4.67788 3.66859 3.00584 2.72997 2.65286 2.62009 2.52021 2.2874 1.91652 1.46126 1.0047 0.619304 0.340891 0.167076 0.0727491 0.0280912 0.00960494 0.00390972
 46 1 1 0 0 50  0.0205537 0.0110803 0.00989328 0.0381468 0.0575229 0.0945052 0.209342 0.380328 0.641205 1.00189 1.57709 2.65166 4.17705 5.49581 5.83408 5.10747 4.03532 3.24863 2.82626 2.61447 2.43684 2.18231 1.82041 1.38782 0.95574 0.590261 0.325407 0.159636 0.0695316 0.0268434 0.00917288 0.00372924
 47 1 1 0 0 50  0.00705342 0.00552114 0.0277227 0.108616 0.136402 0.122571 0.205 0.327263 0.53737 0.899831 1.40011 2.09392 3.10471 4.3911 5.46643 5.6989 5.09319 4.19216 3.40509 2.87224 2.5075 2.17096 1.7848 1.35367 0.931379 0.57569 0.31779 0.156083 0.0680371 0.0262752 0.00897793 0.00364753
 48 1 1 0 0 50  0.0068575 0.00415045 0.00987558 0.0423631 0.0947381 0.251847 0.503969 0.594459 0.624445 0.831359 1.22127 1.80584 2.59812 3.58267 4.61668 5.30779 5.36929 4.88774 4.11744 3.35848 2.74673 2.24975 1.79 1.33668 0.914038 0.56399 0.31138 0.153059 0.0667776 0.0258057 0.00882052 0.0035832
 49 1 1 0 0 50  0.0242823 0.0129578 0.00981331 0.0377413 0.0598167 0.114557 0.298772 0.646155 1.12523 1.45727 1.55156 1.75287 2.2646 3.03052 3.9072 4.64857 5.04123 5.005 4.53752 3.82099 3.0737 2.4099 1.83693 1.33259 0.897125 0.549642 0.302671 0.148705 0.0649021 0.0250962 0.0085826 0.00348775
 50 1 1 0 0 50  0.0170832 0.0109587 0.0329542 0.128071 0.157677 0.129426 0.215106 0.388512 0.755735 1.39769 2.09746 2.52604 2.67745 2.91013 3.42122 4.03534 4.52232 4.74705 4.58467 4.0654 3.34668 2.59931 1.92365 1.35143 0.887964 0.536024 0.292904 0.143416 0.0625219 0.0241739 0.00826996 0.00336236
 51 1 1 0 0 50  0.00967114 0.00651563 0.0232399 0.0947794 0.160465 0.308283 0.580871 0.665254 0.688641 0.996135 1.63167 2.46131 3.15269 3.47176 3.58332 3.75856 4.05957 4.34451 4.38086 4.07116 3.47489 2.74122 2.01567 1.38709 0.889731 0.526454 0.283788 0.137846 0.0598463 0.0230977 0.00789737 0.00321123
 52 1 1 0 0 50  0.0133824 0.00768662 0.0132285 0.0540394 0.10009 0.229984 0.528681 0.899555 1.33305 1.6367 1.74764 2.0733 2.74729 3.4396 3.82517 3.89298 3.9054 4.01165 4.06393 3.88814 3.43166 2.77596 2.0622 1.41216 0.892288 0.518374 0.274874 0.131887 0.0568017 0.02182 0.00744235 0.00302272
 53 1 1 0 0 50  0.0157088 0.00920055 0.0179456 0.0704887 0.100567 0.146286 0.328414 0.654657 1.21996 1.94539 2.54585 2.85148 2.97367 3.21137 3.58392 3.82198 3.86493 3.85724 3.81247 3.64667 3.27629 2.71029 2.0478 1.41156 0.888414 0.510335 0.266781 0.126273 0.0537886 0.0205003 0.00695651 0.00281555
 54 1 1 0 0 50  0.0265956 0.0149357 0.0212947 0.083324 0.122015 0.181205 0.353159 0.535166 0.856803 1.49818 2.38694 3.25342 3.76086 3.85027 3.7739 3.72592 3.72652 3.73025 3.65838 3.46783 3.11948 2.60967 2.00034 1.39411 0.881013 0.504455 0.261438 0.122357 0.0515316 0.0194478 0.00654919 0.0026336
 55 1 1 0 0 50  0.0158004 0.0104896 0.0355569 0.140119 0.190257 0.229857 0.423517 0.626476 0.892807 1.31463 1.91603 2.77493 3.69739 4.28748 4.36366 4.09255 3.80659 3.65666 3.53783 3.3377 2.99763 2.51588 1.94369 1.36726 0.870121 0.499408 0.258128 0.119998 0.0500843 0.018722 0.00624968 0.00249066
 56 1 1 0 0 50  0.0572999 0.0305017 0.0221656 0.0869935 0.155771 0.329573 0.665439 0.886989 1.09969 1.47043 1.9179 2.49196 3.22289 3.96255 4.41884 4.39534 4.07442 3.75143 3.48695 3.22085 2.87193 2.4098 1.8685 1.32215 0.84666 0.488125 0.252629 0.117177 0.048649 0.0180539 0.00597842 0.00235903
 57 1 1 0 0 50  0.0298586 0.0203125 0.0739924 0.288131 0.353585 0.289249 0.499469 0.904475 1.4736 2.00662 2.33481 2.65863 3.0923 3.59048 4.02928 4.20471 4.08147 3.80538 3.46905 3.11524 2.72368 2.26615 1.7553 1.24552 0.801078 0.463842 0.240772 0.111757 0.0463127 0.0171152 0.00563447 0.00220359
 58 1 1 0 0 50  0.0135262 0.00945922 0.0375429 0.15575 0.287856 0.625346 1.20266 1.37783 1.41669 1.91615 2.64918 3.20778 3.46435 3.59113 3.72837 3.80445 3.75592 3.59568 3.31639 2.95364 2.53764 2.08016 1.59865 1.13226 0.729412 0.423632 0.220567 0.102587 0.0425298 0.015694 0.00514967 0.00200087
 59 1 1 0 0 50  0.0118152 0.00712856 0.0166004 0.0690194 0.135853 0.341586 0.835204 1.54613 2.43217 3.01611 3.09969 3.27718 3.65703 3.85994 3.78778 3.58674 3.39683 3.23515 3.01369 2.7003 2.30985 1.87324 1.42475 1.00264 0.644476 0.374535 0.195384 0.0910655 0.0378076 0.0139553 0.00457399 0.00177048
 60 1 1 0 0 50  0.045613 0.0241066 0.0151009 0.057279 0.0895694 0.163031 0.402335 0.870637 1.75687 2.98931 4.09245 4.59032 4.47311 4.19069 3.94802 3.63228 3.28135 2.99963 2.74442 2.45328 2.09903 1.696 1.28087 0.89492 0.57237 0.331888 0.173123 0.0807785 0.0335836 0.012409 0.0040681 0.00157232
 61 1 1 0 0 50  0.0182454 0.0131702 0.0559291 0.217757 0.262773 0.192105 0.292455 0.508122 0.967393 1.88012 3.2259 4.63191 5.46187 5.40979 4.77684 4.02686 3.4238 2.99603 2.64871 2.31849 1.9655 1.58145 1.18937 0.826631 0.525949 0.303785 0.158131 0.0737447 0.030674 0.0113436 0.00372154 0.00143833
 62 1 1 0 0 50  0.0170236 0.0102268 0.0233157 0.0975692 0.19589 0.467086 0.901246 0.988887 0.922423 1.2454 2.06816 3.35665 4.77527 5.68972 5.68173 4.91738 3.98032 3.25235 2.72391 2.30033 1.90804 1.51688 1.13317 0.783749 0.496436 0.285577 0.148186 0.0689731 0.0286665 0.0106016 0.00347966 0.00134551
 63 1 1 0 0 50  0.0232316 0.0132585 0.0216384 0.0856419 0.133081 0.23919 0.578568 1.14245 1.85697 2.2716 2.28219 2.58288 3.51064 4.66777 5.40211 5.30187 4.58261 3.72808 2.97851 2.3872 1.90547 1.47949 1.09033 0.74811 0.471331 0.270002 0.139621 0.0648125 0.0268887 0.00993459 0.00325981 0.00126075
 64 1 1 0 0 50  0.0133805 0.00879815 0.0289248 0.114412 0.160387 0.215701 0.43197 0.744011 1.32936 2.27602 3.20039 3.65365 3.72957 3.98249 4.5191 4.83977 4.6382 4.05042 3.29851 2.58115 1.97812 1.48164 1.06561 0.720427 0.449879 0.256239 0.131959 0.0610614 0.025271 0.00932076 0.00305513 0.00118095
 65 1 1 0 0 50  0.0386452 0.0207523 0.0175256 0.0692086 0.1224 0.25603 0.527319 0.754372 1.07366 1.69901 2.62484 3.68997 4.45332 4.6546 4.55695 4.45392 4.32779 4.02804 3.47755 2.79203 2.12087 1.54453 1.07794 0.712096 0.437948 0.247073 0.126459 0.0582701 0.0240411 0.00884647 0.00289473 0.00111744
 66 1 1 0 0 50  0.0156131 0.0113106 0.0484624 0.18945 0.236735 0.212339 0.384336 0.698622 1.16885 1.71542 2.29858 3.10123 4.05904 4.79456 5.00085 4.72949 4.31968 3.94564 3.49631 2.91414 2.26273 1.64505 1.12709 0.72725 0.438186 0.24355 0.123422 0.0564989 0.0232067 0.00851231 0.00277884 0.00107045
 67 1 1 0 0 50  0.12655 0.0654934 0.0223062 0.0834285 0.168654 0.407348 0.804806 0.958933 1.06535 1.52539 2.22695 2.96859 3.68438 4.36146 4.82535 4.83892 4.48715 4.02279 3.51421 2.95142 2.33623 1.72251 1.18025 0.75223 0.445177 0.243159 0.121518 0.0550715 0.0224642 0.00820071 0.00266807 0.00102468
 68 1 1 0 0 50  0.0201804 0.0209318 0.151815 0.59068 0.683383 0.378623 0.500493 0.973884 1.63318 2.12667 2.34935 2.72762 3.35818 3.97597 4.39439 4.50836 4.33406 3.97758 3.4879 2.92178 2.32047 1.72626 1.19122 0.758721 0.44504 0.239764 0.118093 0.0528465 0.0213457 0.00773656 0.00250417 0.000957443
 69 1 1 0 0 50  0.0173288 0.0103938 0.0239993 0.112697 0.342498 1.10307 2.16017 2.19033 1.68285 1.92848 2.65165 3.17837 3.39353 3.57773 3.8177 3.9278 3.83845 3.60419 3.22372 2.72973 2.17766 1.62598 1.12704 0.719843 0.42148 0.225466 0.109855 0.0485705 0.0193987 0.00696507 0.00223803 0.000850014
 70 1 1 0 0 50  0.00819374 0.00547023 0.0189283 0.076115 0.121876 0.258551 0.810088 2.05621 3.71171 4.40591 3.81094 3.32113 3.43286 3.58811 3.54728 3.41131 3.262 3.0856 2.80677 2.4157 1.94967 1.46595 1.02049 0.653586 0.382947 0.204345 0.0989669 0.0433739 0.0171494 0.00609654 0.00194173 0.000730895
 71 1 1 0 0 50  0.00605651 0.00370328 0.00919288 0.0377435 0.068833 0.154752 0.364787 0.749082 1.70895 3.50555 5.36517 5.966 5.19142 4.20482 3.64301 3.29285 2.99176 2.74395 2.48373 2.15831 1.76446 1.34096 0.94033 0.604904 0.355166 0.189492 0.0915301 0.0399065 0.0156638 0.00552126 0.00174322 0.000649465
 72 1 1 0 0 50  0.0105114 0.00582396 0.00730627 0.0288128 0.0459687 0.0855891 0.202922 0.413723 0.855492 1.74641 3.30828 5.30692 6.65526 6.48688 5.25974 3.99968 3.19213 2.73631 2.39812 2.06252 1.69179 1.29714 0.917732 0.594352 0.350431 0.187307 0.0904429 0.0393353 0.0153709 0.00538498 0.00168797 0.000622699
 73 1 1 0 0 50  0.0112326 0.00660984 0.0132534 0.0516122 0.0685041 0.07784 0.149836 0.266409 0.505873 1.00494 1.92875 3.43533 5.31115 6.74024 6.87098 5.75633 4.33598 3.29249 2.63136 2.16216 1.74541 1.33685 0.950863 0.619982 0.367639 0.19725 0.0954072 0.0414837 0.0161767 0.00564614 0.0017608 0.000644299
 74 1 1 0 0 50  0.00653929 0.00433485 0.0146514 0.0584093 0.0861316 0.128578 0.239643 0.315952 0.416356 0.683958 1.22474 2.20843 3.70983 5.4411 6.6774 6.73264 5.76057 4.47917 3.36198 2.54683 1.94793 1.45697 1.03024 0.673168 0.40105 0.216163 0.104901 0.045687 0.0178151 0.006208 0.00193017 0.000702174
 75 1 1 0 0 50  0.0113562 0.00635847 0.00886976 0.035846 0.0643959 0.138744 0.293822 0.435241 0.593575 0.790634 1.0464 1.57728 2.58154 4.03314 5.54625 6.44259 6.37052 5.55077 4.38094 3.25778 2.36167 1.6827 1.15728 0.748234 0.445242 0.240606 0.11716 0.0511681 0.019984 0.0069653 0.0021632 0.00078425
 76 1 1 0 0 50  0.0167381 0.00952899 0.0152108 0.0590756 0.0802939 0.100708 0.211517 0.39742 0.683195 1.00678 1.28428 1.59966 2.13275 3.06641 4.34468 5.51329 6.10283 5.96382 5.17231 4.05441 2.94994 2.0401 1.35249 0.851542 0.499959 0.269032 0.131061 0.0573612 0.0224518 0.00783693 0.00243497 0.000881686
 77 1 1 0 0 50  0.00969982 0.00644817 0.0219625 0.0868459 0.120826 0.155666 0.283235 0.394242 0.56337 0.911895 1.37203 1.82629 2.24618 2.78356 3.6002 4.57931 5.39918 5.76593 5.4794 4.63729 3.53891 2.47938 1.62052 0.994941 0.571218 0.303072 0.146692 0.0641013 0.0251096 0.00877763 0.00273069 0.000989205
 78 1 1 0 0 50  0.00862072 0.00524793 0.0127498 0.0522418 0.0940108 0.201078 0.412214 0.567148 0.722258 0.96441 1.28037 1.73593 2.28202 2.81526 3.37319 4.02264 4.71944 5.26851 5.36036 4.87617 3.9582 2.88944 1.91939 1.17275 0.662546 0.345425 0.164992 0.0715455 0.0279342 0.00975938 0.00303808 0.00110172
 79 1 1 0 0 50  0.0157635 0.00876027 0.0113296 0.0446746 0.0707169 0.129106 0.297666 0.554839 0.924854 1.29653 1.56275 1.843 2.23079 2.71809 3.24609 3.75716 4.2786 4.78417 5.03701 4.82971 4.14882 3.18206 2.18839 1.35968 0.768665 0.396948 0.187155 0.0802219 0.0310706 0.0108065 0.00335789 0.00121752
 80 1 1 0 0 50  0.0287257 0.0159577 0.0204835 0.078865 0.105294 0.121962 0.234671 0.40586 0.71526 1.21427 1.77982 2.24804 2.55696 2.82566 3.16952 3.56531 3.99064 4.42799 4.71202 4.65489 4.16928 3.34371 2.39253 1.53047 0.879292 0.455854 0.213885 0.0908457 0.0348496 0.0120271 0.00371771 0.0013437
 81 1 1 0 0 50  0.0108466 0.00803744 0.0362598 0.142955 0.189985 0.211018 0.360174 0.476014 0.622844 0.962519 1.4977 2.1639 2.77361 3.16541 3.37983 3.5565 3.81488 4.16227 4.43416 4.44921 4.09521 3.39899 2.52072 1.6651 0.980468 0.516057 0.243546 0.103286 0.0393868 0.013491 0.00414096 0.00148704
 82 1 1 0 0 50  0.0240405 0.0131326 0.0141651 0.0585233 0.12252 0.309372 0.633393 0.809618 0.921159 1.13071 1.4092 1.86461 2.49968 3.11602 3.52109 3.68733 3.79416 3.98974 4.18646 4.21651 3.94557 3.35628 2.56179 1.74259 1.05363 0.56635 0.271069 0.115762 0.0441841 0.0150839 0.00460438 0.00164111
 83 1 1 0 0 50  0.0105987 0.00744167 0.029571 0.116032 0.150912 0.166266 0.361841 0.754274 1.3205 1.78119 1.9617 2.10427 2.39886 2.84635 3.31497 3.61907 3.7647 3.88727 3.98906 3.97974 3.74312 3.23381 2.52221 1.75804 1.08932 0.598718 0.291839 0.126276 0.0485677 0.0166252 0.00506899 0.00179764
 84 1 1 0 0 50  0.0123869 0.00718315 0.0132459 0.0547871 0.106436 0.247961 0.502039 0.669321 0.933511 1.55854 2.33495 2.86392 3.0199 3.0614 3.21153 3.4202 3.60129 3.74997 3.82605 3.78032 3.54482 3.0825 2.43833 1.73167 1.09548 0.614724 0.30541 0.134293 0.0522884 0.018044 0.00552393 0.00195896
 85 1 1 0 0 50  0.0251359 0.0137972 0.0155926 0.0604301 0.0880603 0.136412 0.31607 0.625161 1.07844 1.55429 2.04697 2.72812 3.3965 3.69791 3.6538 3.52757 3.50859 3.60035 3.67113 3.62147 3.38866 2.952 2.35307 1.69267 1.08827 0.621608 0.314371 0.140543 0.0555156 0.01938 0.00598247 0.00213337
 86 1 1 0 0 50  0.0298874 0.0173109 0.0313344 0.121453 0.158033 0.164539 0.290442 0.457266 0.764299 1.32911 2.03946 2.72751 3.32853 3.81619 4.04294 3.93433 3.71644 3.61234 3.58253 3.50383 3.27365 2.85562 2.28649 1.6584 1.07876 0.624905 0.320904 0.145689 0.0583933 0.0206515 0.00644479 0.00232127
 87 1 1 0 0 50  0.017621 0.0115073 0.03699 0.146784 0.210463 0.29235 0.527301 0.65962 0.770907 1.08552 1.62598 2.38526 3.19561 3.8224 4.15407 4.16784 3.9841 3.78585 3.61957 3.44777 3.18414 2.77104 2.22409 1.6221 1.0639 0.622868 0.323823 0.148978 0.0605197 0.0216821 0.006847 0.00249752
 88 1 1 0 0 50  0.00904485 0.00608709 0.0216601 0.0888296 0.155843 0.323302 0.669466 0.950394 1.21782 1.5002 1.71935 2.09475 2.73467 3.46225 4.00775 4.19291 4.10107 3.91612 3.69161 3.43409 3.10905 2.67746 2.14351 1.56717 1.03362 0.609896 0.32013 0.148886 0.0611881 0.0221824 0.00708634 0.00262028
 89 1 1 0 0 50  0.00782515 0.0047284 0.0110775 0.0455663 0.084641 0.196985 0.467703 0.857551 1.42335 2.00732 2.37525 2.59379 2.81217 3.16456 3.61764 3.93581 4.0124 3.92447 3.7159 3.42171 3.04806 2.5882 2.05541 1.49959 0.991271 0.587929 0.310808 0.145792 0.0604933 0.0221556 0.00715224 0.00268002
 90 1 1 0 0 50  0.00896461 0.00520537 0.00962035 0.0382489 0.0598874 0.108019 0.25741 0.528658 1.03731 1.79205 2.61063 3.24556 3.52928 3.58213 3.63278 3.72999 3.81384 3.8258 3.69378 3.41821 3.0251 2.54039 1.99764 1.44896 0.956373 0.568379 0.301845 0.142486 0.0595704 0.0220025 0.00716709 0.00271833
 91 1 1 0 0 50  0.0243357 0.0131059 0.0115171 0.0441302 0.0639202 0.0939508 0.193939 0.339696 0.632064 1.20066 2.06113 3.0695 3.89416 4.27044 4.23228 4.01453 3.8504 3.7845 3.67883 3.44152 3.05677 2.55686 1.99587 1.43788 0.945166 0.561173 0.298553 0.141488 0.0594789 0.0221146 0.00725719 0.00278157
 92 1 1 0 0 50  0.011549 0.00799621 0.0306078 0.119577 0.149845 0.132581 0.214585 0.320737 0.492436 0.833653 1.42178 2.32801 3.41421 4.31925 4.72235 4.59816 4.26265 3.99529 3.78079 3.51771 3.13276 2.62345 2.04235 1.46429 0.958108 0.567239 0.301602 0.143155 0.0603806 0.0225556 0.00744441 0.00287818
 93 1 1 0 0 50  0.00702135 0.00458301 0.0148225 0.0616731 0.117258 0.264532 0.516635 0.604377 0.61729 0.786477 1.13301 1.73354 2.63431 3.68126 4.52425 4.84156 4.69756 4.38601 4.04024 3.67424 3.23849 2.70474 2.10319 1.50441 0.981122 0.579057 0.307284 0.145802 0.0615777 0.0230666 0.00764326 0.0029749
 94 1 1 0 0 50  0.0137693 0.00759641 0.00913249 0.036615 0.0652302 0.145892 0.357659 0.684496 1.10827 1.40139 1.46905 1.63972 2.14574 2.95596 3.85915 4.50981 4.73907 4.64134 4.32321 3.88648 3.37223 2.78716 2.15627 1.53822 1.00082 0.58923 0.312001 0.147839 0.0624259 0.0234093 0.0077743 0.00303996
 95 1 1 0 0 50  0.0613377 0.0322878 0.0184045 0.0677362 0.0894453 0.101708 0.209376 0.418217 0.822229 1.42876 2.02327 2.36682 2.49652 2.75023 3.30101 3.93792 4.39936 4.58511 4.45423 4.06963 3.52247 2.8841 2.21228 1.56942 1.01764 0.597666 0.315819 0.149403 0.0630235 0.0236302 0.00785422 0.00307951
 96 1 1 0 0 50  0.0127771 0.0118085 0.0757425 0.295606 0.353298 0.23863 0.308694 0.404589 0.564403 0.973357 1.6421 2.41451 2.99749 3.25773 3.39397 3.63172 3.98184 4.29237 4.3601 4.11989 3.62405 2.97329 2.26935 1.59981 1.03211 0.604019 0.318381 0.150334 0.0633302 0.0237261 0.007885 0.003095
 97 1 1 0 0 50  0.00880891 0.00555171 0.0160098 0.0726161 0.196793 0.596946 1.17888 1.24737 0.993923 1.00195 1.28731 1.85453 2.61574 3.27429 3.61636 3.70221 3.77898 3.95342 4.06585 3.95212 3.56365 2.96468 2.27142 1.59773 1.02629 0.598088 0.314207 0.148 0.0622361 0.0232872 0.00773345 0.00303547
 98 1 1 0 0 50  0.00932665 0.00545243 0.0105544 0.0425837 0.0737924 0.173133 0.519697 1.25442 2.23716 2.69204 2.36183 2.04333 2.22526 2.74886 3.28066 3.56837 3.65216 3.70746 3.73742 3.6451 3.34134 2.8272 2.18992 1.54682 0.993005 0.577045 0.302143 0.141898 0.0595312 0.0222366 0.00737557 0.00289268
 99 1 1 0 0 50  0.0213189 0.0115699 0.0113511 0.0438098 0.0644929 0.100909 0.231709 0.505208 1.16427 2.34115 3.54866 3.97235 3.54171 3.05639 3.01463 3.21736 3.39467 3.49532 3.50172 3.38974 3.11414 2.66111 2.08451 1.48442 0.956606 0.556063 0.290647 0.136154 0.0569776 0.021237 0.00703216 0.002754
 100 1 1 0 0 50  0.0130328 0.00839985 0.0257153 0.10037 0.127757 0.121701 0.207904 0.333914 0.5988 1.21885 2.33613 3.74447 4.70931 4.69121 4.04684 3.48488 3.29283 3.32687 3.35038 3.25023 2.98665 2.56067 2.01947 1.44911 0.939457 0.54789 0.286593 0.134124 0.0560244 0.0208383 0.00688682 0.00269173
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
