#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sun Apr 26 17:58:03 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-26 17:49:18
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 227.252 0.1
2 1 1 273.15 0.1
3 1 1 317.621 0.1
4 1 1 360.115 0.1
5 1 1 400.027 0.1
6 1 1 437.46 0.1
7 1 1 473.911 0.1
8 1 1 510.464 0.1
9 1 1 545.757 0.1
10 1 1 577.386 0.1
11 1 1 604.515 0.1
12 1 1 627.841 0.1
13 1 1 647.915 0.1
14 1 1 664.963 0.1
15 1 1 679.955 0.1
16 1 1 693.936 0.1
17 1 1 706.496 0.1
18 1 1 716.469 0.1
19 1 1 724.074 0.1
20 1 1 731.391 0.1
21 1 1 740.495 0.1
22 1 1 751.766 0.1
23 1 1 763.921 0.1
24 1 1 775.279 0.1
25 1 1 784.769 0.1
26 1 1 766.484 0.1
27 1 1 1747.53 0.1
28 1 1 2660.23 0.1
29 1 1 3516.97 0.1
30 1 1 4347.44 0.1
31 1 1 5151.22 0.1
32 1 1 5884.8 0.1
33 1 1 6524.05 0.1
34 1 1 7125.43 0.1
35 1 1 7773.71 0.1
36 1 1 8467.61 0.1
37 1 1 9111.43 0.1
38 1 1 9607.22 0.1
39 1 1 9906.69 0.1
40 1 1 10006 0.1
41 1 1 9954.41 0.1
42 1 1 9857.7 0.1
43 1 1 9798.7 0.1
44 1 1 9763.86 0.1
45 1 1 9704.34 0.1
46 1 1 9620.11 0.1
47 1 1 9518.51 0.1
48 1 1 9384.3 0.1
49 1 1 9244.72 0.1
50 1 1 9130.57 0.1
51 1 1 8973.94 0.1
52 1 1 8664.96 0.1
53 1 1 8177.06 0.1
54 1 1 7589.68 0.1
55 1 1 7047.27 0.1
56 1 1 6485.76 0.1
57 1 1 6185.18 0.1
58 1 1 6018.28 0.1
59 1 1 5841.19 0.1
60 1 1 5585.83 0.1
61 1 1 5268.81 0.1
62 1 1 4790.32 0.1
63 1 1 4444.78 0.1
64 1 1 4283.69 0.1
65 1 1 4274.75 0.1
66 1 1 4290.52 0.1
67 1 1 4213.11 0.1
68 1 1 4013.25 0.1
69 1 1 3727.32 0.1
70 1 1 3414.72 0.1
71 1 1 3131.46 0.1
72 1 1 2902.55 0.1
73 1 1 2711.35 0.1
74 1 1 2528.62 0.1
75 1 1 2354.12 0.1
76 1 1 2214.64 0.1
77 1 1 2116.15 0.1
78 1 1 2041.35 0.1
79 1 1 1984.13 0.1
80 1 1 1931.3 0.1
81 1 1 2096.41 0.1
82 1 1 2221.44 0.1
83 1 1 2300.59 0.1
84 1 1 2348.28 0.1
85 1 1 2374.29 0.1
86 1 1 2384.45 0.1
87 1 1 2397.63 0.1
88 1 1 2446.16 0.1
89 1 1 2547.65 0.1
90 1 1 2690.83 0.1
91 1 1 2849.08 0.1
92 1 1 2991.4 0.1
93 1 1 3088.32 0.1
94 1 1 3126.18 0.1
95 1 1 3116.01 0.1
96 1 1 3093.02 0.1
97 1 1 3120.89 0.1
98 1 1 3274.69 0.1
99 1 1 3572.63 0.1
100 1 1 3933.45 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 1 0 5 4 3 1 4 3 2 5 1 4 5 4 3 2 1 0 1 0 0 0
 27 1 1 0 0 50 0 0 0 1 1 0 1 0 0 0 1 3 2 1 4 2 4 1 6 5 5 4 2 4 2 0 0 0 1 0 0 0
 28 1 1 0 0 50 0 0 0 0 0 0 3 0 0 0 0 0 1 3 2 7 3 3 4 4 2 7 3 2 4 1 0 0 1 0 0 0
 29 1 1 0 0 50 0 0 0 0 0 0 0 1 2 2 1 1 2 1 3 3 3 4 2 6 2 5 2 4 3 1 2 0 0 0 0 0
 30 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 1 0 3 3 3 2 2 3 2 3 3 6 6 5 1 2 1 0 0 0 0 0
 31 1 1 0 0 50 0 0 0 0 0 0 0 0 2 0 4 3 3 3 7 2 2 0 4 7 0 5 1 1 2 1 2 0 1 0 0 0
 32 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 1 2 3 5 2 2 4 4 4 6 2 6 2 5 0 2 0 0 0 0 0 0
 33 1 1 0 0 50 0 0 0 0 0 0 0 1 1 0 0 4 2 4 3 5 4 2 7 3 2 5 3 3 1 0 0 0 0 0 0 0
 34 1 1 0 0 50 0 0 0 0 0 1 0 0 3 2 2 2 0 0 3 4 5 4 5 5 3 0 4 0 3 2 0 1 0 1 0 0
 35 1 1 0 0 50 0 0 0 0 0 0 0 1 2 0 8 6 6 3 0 1 1 5 3 4 1 3 2 1 2 1 0 0 0 0 0 0
 36 1 1 0 0 50 0 0 0 0 0 0 0 0 3 2 4 3 5 2 0 3 4 2 2 8 3 3 3 1 1 0 1 0 0 0 0 0
 37 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 2 6 4 6 7 3 3 2 2 2 2 1 3 2 1 0 1 0 0 0 0
 38 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 0 4 6 1 5 9 2 4 2 6 2 4 3 0 0 0 0 0 0 0 0
 39 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 1 3 4 5 3 3 7 5 3 4 1 4 1 2 2 1 0 0 0 0 0 0
 40 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 0 1 1 2 5 4 7 7 4 2 1 5 3 1 3 2 1 0 0 0 0 0
 41 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 0 2 1 2 1 6 2 5 9 0 5 7 3 2 1 0 0 0 0 0 0 0
 42 1 1 0 0 50 0 0 0 0 1 0 0 1 3 3 2 2 3 2 0 2 5 6 2 7 5 2 2 1 1 0 0 0 0 0 0 0
 43 1 1 0 0 50 0 0 0 0 0 1 0 0 0 2 2 4 5 2 3 2 4 4 2 4 3 6 2 0 2 0 1 1 0 0 0 0
 44 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 1 2 4 5 3 6 5 5 4 3 4 2 1 1 0 0 0 0 0 0 1
 45 1 1 0 0 50 0 0 0 0 0 0 2 1 0 1 1 3 1 2 6 3 2 6 3 3 4 3 2 7 0 0 0 0 0 0 0 0
 46 1 1 0 0 50 0 0 0 0 0 0 0 0 2 2 1 2 2 5 5 5 2 2 4 7 5 1 1 1 0 3 0 0 0 0 0 0
 47 1 1 0 0 50 0 0 0 0 0 1 0 0 0 1 3 2 2 4 2 6 3 3 5 1 9 1 4 1 2 0 0 0 0 0 0 0
 48 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 2 3 3 7 2 3 7 3 3 3 3 6 2 0 1 0 0 0 0 0 0
 49 1 1 0 0 50 0 0 0 0 0 0 0 1 3 3 3 2 4 2 7 5 4 2 5 1 2 2 2 2 0 0 0 0 0 0 0 0
 50 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 1 2 1 8 5 2 5 4 2 4 3 0 3 2 1 1 1 0 0 0 0 0
 51 1 1 0 0 50 0 0 0 0 0 0 1 1 0 4 4 5 3 5 4 4 3 3 4 1 3 1 3 1 0 0 0 0 0 0 0 0
 52 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 0 1 4 4 5 5 8 1 8 2 0 3 6 1 1 0 0 0 0 0 0 0
 53 1 1 0 0 50 0 0 0 0 0 0 1 2 1 1 0 2 1 5 10 4 4 5 2 1 1 3 2 3 1 1 0 0 0 0 0 0
 54 1 1 0 0 50 0 0 0 0 1 0 0 1 0 1 2 1 3 3 3 8 7 7 5 2 0 2 1 2 1 0 0 0 0 0 0 0
 55 1 1 0 0 50 0 0 0 0 1 1 1 1 1 0 2 2 1 2 3 5 4 2 9 6 5 1 0 0 1 1 1 0 0 0 0 0
 56 1 1 0 0 50 0 0 0 0 0 0 2 0 2 3 4 4 2 2 4 2 2 1 3 6 7 1 0 3 1 1 0 0 0 0 0 0
 57 1 1 0 0 50 0 0 0 0 0 1 0 0 0 2 6 7 6 2 0 6 4 4 2 3 2 2 0 0 2 1 0 0 0 0 0 0
 58 1 1 0 0 50 0 1 0 0 1 0 1 0 2 4 7 4 1 4 3 0 3 5 6 1 1 1 0 2 1 2 0 0 0 0 0 0
 59 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 4 6 4 8 10 3 2 0 2 0 3 1 2 1 1 0 1 0 0 0 0 0
 60 1 1 0 0 50 0 0 0 0 0 0 0 1 0 1 2 1 2 9 5 6 4 3 6 2 2 2 2 0 2 0 0 0 0 0 0 0
 61 1 1 0 0 50 0 0 0 0 1 0 1 1 1 1 1 3 4 1 3 7 11 7 3 1 2 1 0 0 0 1 0 0 0 0 0 0
 62 1 1 0 0 50 0 0 0 0 0 0 0 0 1 4 4 4 3 2 5 2 6 7 2 2 4 1 0 1 2 0 0 0 0 0 0 0
 63 1 1 0 0 50 0 0 0 0 1 1 2 2 0 1 2 2 1 0 7 3 6 6 5 7 2 1 0 0 0 0 0 1 0 0 0 0
 64 1 1 0 0 50 0 0 0 0 0 0 2 3 6 2 2 3 1 4 4 3 4 5 4 4 0 3 0 0 0 0 0 0 0 0 0 0
 65 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 3 3 3 5 4 2 4 2 4 6 1 1 1 1 1 4 0 0 0 0 0 0
 66 1 1 0 0 50 0 0 0 0 0 0 0 2 1 3 3 4 3 7 5 5 3 1 1 1 5 1 2 2 0 1 0 0 0 0 0 0
 67 1 1 0 0 50 0 0 1 0 0 0 0 0 0 0 4 2 6 4 7 3 7 4 2 2 1 2 2 1 2 0 0 0 0 0 0 0
 68 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 4 3 2 6 4 7 7 3 5 3 2 1 0 1 0 0 0 0 0 0 0 0
 69 1 1 0 0 50 0 0 0 0 0 0 1 0 0 0 2 3 4 3 5 5 11 2 2 3 3 3 1 0 1 1 0 0 0 0 0 0
 70 1 1 0 0 50 0 0 0 0 0 0 0 1 0 2 1 1 2 3 3 6 9 5 3 7 3 1 2 0 0 1 0 0 0 0 0 0
 71 1 1 0 0 50 0 0 0 0 0 0 1 1 1 1 2 1 2 1 5 4 5 6 6 5 3 4 1 0 0 0 0 0 0 1 0 0
 72 1 1 0 0 50 0 0 0 0 0 0 0 2 3 4 5 0 2 2 2 3 6 8 5 1 3 1 3 0 0 0 0 0 0 0 0 0
 73 1 1 0 0 50 0 0 0 0 0 0 2 0 2 0 4 4 3 2 3 5 4 4 2 6 3 3 1 2 0 0 0 0 0 0 0 0
 74 1 1 0 0 50 0 0 0 0 1 0 0 1 0 1 0 6 4 5 5 1 4 2 4 5 2 4 0 3 1 0 0 1 0 0 0 0
 75 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 0 2 6 5 5 4 3 4 5 3 4 3 0 1 2 0 0 0 0 0 0 0
 76 1 1 0 0 50 1 0 0 0 0 0 0 1 5 3 2 1 3 4 6 3 3 2 4 3 3 4 0 1 0 1 0 0 0 0 0 0
 77 1 1 0 0 50 0 0 0 1 1 0 1 1 2 2 2 9 2 3 4 3 1 2 7 2 4 1 0 1 0 1 0 0 0 0 0 0
 78 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 1 3 4 3 3 4 6 3 6 2 3 2 2 3 1 0 1 0 0 0 0 0
 79 1 1 0 0 50 0 0 0 0 0 0 0 3 3 3 1 4 1 10 7 4 1 3 2 2 2 2 1 1 0 0 0 0 0 0 0 0
 80 1 1 0 0 50 0 0 0 0 0 0 0 0 0 4 3 4 1 8 6 4 4 3 2 5 0 4 0 2 0 0 0 0 0 0 0 0
 81 1 1 0 0 50 0 0 0 1 1 0 0 1 2 1 1 5 4 4 1 4 4 7 1 3 3 2 0 1 3 0 0 1 0 0 0 0
 82 1 1 0 0 50 0 0 0 0 0 1 0 2 1 2 1 5 1 5 4 6 5 2 4 3 5 3 0 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 50 0 0 0 1 1 0 0 1 1 1 1 1 5 7 0 5 4 7 2 5 2 5 1 0 0 0 0 0 0 0 0 0
 84 1 1 0 0 50 0 0 0 0 0 0 1 0 0 0 1 3 4 1 4 7 10 2 6 4 3 1 2 0 0 1 0 0 0 0 0 0
 85 1 1 0 0 50 0 0 0 1 0 2 1 0 1 0 1 0 2 4 2 2 7 4 4 5 7 2 2 1 0 1 1 0 0 0 0 0
 86 1 1 0 0 50 0 0 0 0 1 0 0 0 1 2 1 2 4 3 4 4 3 5 4 8 2 4 0 2 0 0 0 0 0 0 0 0
 87 1 1 0 0 50 1 0 0 1 0 1 2 1 0 1 1 1 2 3 6 2 6 6 3 5 2 2 2 2 0 0 0 0 0 0 0 0
 88 1 1 0 0 50 0 0 0 0 1 1 0 0 2 5 2 2 2 1 2 4 3 5 2 3 6 2 2 2 0 1 1 1 0 0 0 0
 89 1 1 0 0 50 0 0 0 1 0 0 1 1 2 2 4 2 6 3 4 2 2 1 2 3 4 2 3 1 3 0 1 0 0 0 0 0
 90 1 1 0 0 50 0 0 0 0 0 0 1 0 3 3 1 5 4 5 4 5 1 1 3 4 2 2 2 1 1 1 1 0 0 0 0 0
 91 1 1 0 0 50 0 0 0 0 0 0 0 1 1 3 6 3 5 1 6 6 4 5 2 1 1 1 1 2 0 0 1 0 0 0 0 0
 92 1 1 0 0 50 0 0 0 0 0 0 0 0 2 2 2 5 5 7 10 4 3 2 2 2 0 2 1 0 0 0 0 0 0 1 0 0
 93 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 1 3 5 5 8 3 3 2 3 4 5 2 1 1 0 1 0 0 0 0 0
 94 1 1 0 0 50 0 0 0 0 0 0 1 0 1 1 1 3 2 7 3 4 2 8 3 1 4 3 0 2 3 1 0 0 0 0 0 0
 95 1 1 0 0 50 1 0 0 0 0 0 0 0 0 0 0 0 2 2 7 5 6 5 3 8 4 1 2 3 1 0 0 0 0 0 0 0
 96 1 1 0 0 50 0 0 0 0 1 2 2 1 2 1 2 2 0 0 4 5 5 5 5 5 3 1 1 3 0 0 0 0 0 0 0 0
 97 1 1 0 0 50 0 0 0 0 0 2 2 2 1 2 3 1 6 1 0 2 5 4 8 1 1 2 1 1 1 4 0 0 0 0 0 0
 98 1 1 0 0 50 0 0 0 0 0 0 2 4 1 6 5 0 4 2 1 4 1 0 5 2 4 2 2 2 2 0 1 0 0 0 0 0
 99 1 1 0 0 50 1 0 0 0 0 0 0 0 2 6 3 6 5 0 0 2 4 5 6 4 3 2 0 0 1 0 0 0 0 0 0 0
 100 1 1 0 0 50 0 0 0 0 0 0 0 0 0 3 5 4 3 3 9 2 3 2 1 4 4 4 1 1 0 1 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 227.252 0.1
2 1 1 273.15 0.1
3 1 1 317.621 0.1
4 1 1 360.115 0.1
5 1 1 400.027 0.1
6 1 1 437.46 0.1
7 1 1 473.911 0.1
8 1 1 510.464 0.1
9 1 1 545.757 0.1
10 1 1 577.386 0.1
11 1 1 604.515 0.1
12 1 1 627.841 0.1
13 1 1 647.915 0.1
14 1 1 664.963 0.1
15 1 1 679.955 0.1
16 1 1 693.936 0.1
17 1 1 706.496 0.1
18 1 1 716.469 0.1
19 1 1 724.074 0.1
20 1 1 731.391 0.1
21 1 1 740.495 0.1
22 1 1 751.766 0.1
23 1 1 763.921 0.1
24 1 1 775.279 0.1
25 1 1 784.769 0.1
26 1 1 766.484 0.1
27 1 1 1747.53 0.1
28 1 1 2660.23 0.1
29 1 1 3516.97 0.1
30 1 1 4347.44 0.1
31 1 1 5151.22 0.1
32 1 1 5884.8 0.1
33 1 1 6524.05 0.1
34 1 1 7125.43 0.1
35 1 1 7773.71 0.1
36 1 1 8467.61 0.1
37 1 1 9111.43 0.1
38 1 1 9607.22 0.1
39 1 1 9906.69 0.1
40 1 1 10006 0.1
41 1 1 9954.41 0.1
42 1 1 9857.7 0.1
43 1 1 9798.7 0.1
44 1 1 9763.86 0.1
45 1 1 9704.34 0.1
46 1 1 9620.11 0.1
47 1 1 9518.51 0.1
48 1 1 9384.3 0.1
49 1 1 9244.72 0.1
50 1 1 9130.57 0.1
51 1 1 8973.94 0.1
52 1 1 8664.96 0.1
53 1 1 8177.06 0.1
54 1 1 7589.68 0.1
55 1 1 7047.27 0.1
56 1 1 6485.76 0.1
57 1 1 6185.18 0.1
58 1 1 6018.28 0.1
59 1 1 5841.19 0.1
60 1 1 5585.83 0.1
61 1 1 5268.81 0.1
62 1 1 4790.32 0.1
63 1 1 4444.78 0.1
64 1 1 4283.69 0.1
65 1 1 4274.75 0.1
66 1 1 4290.52 0.1
67 1 1 4213.11 0.1
68 1 1 4013.25 0.1
69 1 1 3727.32 0.1
70 1 1 3414.72 0.1
71 1 1 3131.46 0.1
72 1 1 2902.55 0.1
73 1 1 2711.35 0.1
74 1 1 2528.62 0.1
75 1 1 2354.12 0.1
76 1 1 2214.64 0.1
77 1 1 2116.15 0.1
78 1 1 2041.35 0.1
79 1 1 1984.13 0.1
80 1 1 1931.3 0.1
81 1 1 2096.41 0.1
82 1 1 2221.44 0.1
83 1 1 2300.59 0.1
84 1 1 2348.28 0.1
85 1 1 2374.29 0.1
86 1 1 2384.45 0.1
87 1 1 2397.63 0.1
88 1 1 2446.16 0.1
89 1 1 2547.65 0.1
90 1 1 2690.83 0.1
91 1 1 2849.08 0.1
92 1 1 2991.4 0.1
93 1 1 3088.32 0.1
94 1 1 3126.18 0.1
95 1 1 3116.01 0.1
96 1 1 3093.02 0.1
97 1 1 3120.89 0.1
98 1 1 3274.69 0.1
99 1 1 3572.63 0.1
100 1 1 3933.45 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 183694 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50  0.0518628 0.025576 0.0183777 0.0644089 0.0789046 0.0786811 0.138138 0.224899 0.381901 0.666482 1.09283 1.63394 2.1666 2.56797 2.834 3.05575 3.30869 3.65905 4.06411 4.37999 4.45615 4.19652 3.60861 2.8067 1.96133 1.2255 0.682237 0.337484 0.148036 0.0574873 0.0197383 0.00806155
 27 1 1 0 0 50  0.0157858 0.0115491 0.0549172 0.200613 0.233191 0.179512 0.248912 0.300325 0.356881 0.527261 0.835386 1.30961 1.916 2.5261 2.99866 3.29227 3.48182 3.72488 4.04726 4.32476 4.39888 4.15661 3.59008 2.80425 1.9669 1.23271 0.687891 0.340899 0.149733 0.0582011 0.0199958 0.0081701
 28 1 1 0 0 50  0.0113929 0.00658765 0.0170401 0.0688896 0.148673 0.381361 0.722465 0.782034 0.686188 0.707138 0.820516 1.08396 1.55648 2.1783 2.80674 3.29171 3.57977 3.80295 4.04851 4.25701 4.29915 4.05947 3.51468 2.7549 1.93907 1.21908 0.68207 0.33873 0.149027 0.0579994 0.0199448 0.00815552
 29 1 1 0 0 50  0.00771422 0.00450311 0.0119693 0.0453505 0.0725697 0.149902 0.388536 0.82344 1.38494 1.67745 1.5518 1.40245 1.50318 1.87104 2.42452 2.99901 3.43348 3.74604 3.99341 4.15498 4.15384 3.90223 3.37603 2.65079 1.87086 1.17958 0.66173 0.329384 0.145191 0.0565932 0.0194846 0.00797624
 30 1 1 0 0 50  0.0114252 0.00594748 0.00820513 0.0306908 0.0489129 0.0945295 0.213221 0.416993 0.853165 1.58026 2.3101 2.60963 2.43216 2.21897 2.31721 2.6948 3.13896 3.53934 3.85143 4.02461 4.00531 3.74145 3.22647 2.53204 1.78932 1.13058 0.635741 0.317167 0.14009 0.0546992 0.0188595 0.00773149
 31 1 1 0 0 50  0.0911219 0.0435096 0.013587 0.0443906 0.0577283 0.0716038 0.14294 0.261539 0.500585 0.962262 1.70812 2.61598 3.26395 3.34469 3.07401 2.90606 3.01773 3.32962 3.66879 3.8825 3.88057 3.61986 3.11282 2.43841 1.72275 1.08959 0.613731 0.306786 0.135769 0.0531075 0.0183397 0.00753123
 32 1 1 0 0 50  0.0291315 0.020929 0.0961969 0.348602 0.378947 0.189105 0.184719 0.244521 0.35614 0.619535 1.10775 1.88271 2.83442 3.61068 3.87711 3.68529 3.40784 3.37084 3.55086 3.73761 3.75299 3.51077 3.01879 2.36193 1.66726 1.05451 0.594459 0.297558 0.131899 0.0516804 0.0178755 0.00735425
 33 1 1 0 0 50  0.022621 0.0128856 0.0312067 0.125264 0.263154 0.653373 1.18868 1.12847 0.72342 0.618488 0.818535 1.28801 2.04888 2.9654 3.7199 4.02125 3.88344 3.66034 3.582 3.60534 3.56718 3.33144 2.867 2.24361 1.58316 1.00103 0.564417 0.282722 0.125463 0.0492256 0.017051 0.00702806
 34 1 1 0 0 50  0.0104535 0.00662668 0.023124 0.087538 0.136121 0.266181 0.669631 1.36826 2.18724 2.41607 1.881 1.43437 1.58199 2.19303 2.97474 3.59732 3.82859 3.77068 3.62892 3.49814 3.34528 3.07412 2.63232 2.05814 1.4522 0.918177 0.517716 0.259407 0.11519 0.045237 0.0156873 0.0064767
 35 1 1 0 0 50  0.00854999 0.00479196 0.0106838 0.0413443 0.0747242 0.170222 0.385405 0.718661 1.39744 2.47459 3.41555 3.53652 2.91033 2.38731 2.47447 2.94257 3.35259 3.5375 3.52491 3.38318 3.15716 2.83441 2.39361 1.86023 1.30996 0.827843 0.466766 0.233913 0.103905 0.0408287 0.0141698 0.0058579
 36 1 1 0 0 50  0.00758042 0.00420527 0.00884949 0.033079 0.0495138 0.0878083 0.205366 0.420684 0.841129 1.56525 2.63368 3.81589 4.45796 4.18552 3.46963 3.02781 3.01894 3.19675 3.30823 3.25 3.0319 2.68395 2.23165 1.7156 1.20108 0.757127 0.426524 0.213711 0.0949449 0.0373203 0.0129588 0.00536237
 37 1 1 0 0 50  0.0091133 0.0048681 0.00816445 0.0302682 0.044093 0.0714994 0.147902 0.257893 0.487382 0.956373 1.75205 2.88923 4.12478 4.93312 4.90649 4.24581 3.55564 3.23728 3.18875 3.14646 2.96511 2.62393 2.1631 1.64561 1.14258 0.716531 0.402571 0.201476 0.0894775 0.035173 0.0122165 0.00505844
 38 1 1 0 0 50  0.0280054 0.0138496 0.010456 0.0372624 0.0506866 0.0699611 0.135491 0.216577 0.358135 0.632574 1.13263 1.98791 3.18552 4.43597 5.24249 5.25464 4.62329 3.92188 3.47301 3.2199 2.98 2.63162 2.1639 1.6363 1.12781 0.702799 0.393105 0.196216 0.0870234 0.0341894 0.0118738 0.00491804
 39 1 1 0 0 50  0.0323355 0.0174964 0.0317654 0.114565 0.134073 0.108128 0.163236 0.231787 0.333951 0.52336 0.841024 1.40235 2.31254 3.52251 4.71278 5.40392 5.33008 4.77193 4.12558 3.58741 3.15039 2.71127 2.20764 1.6607 1.13865 0.705622 0.392722 0.195281 0.0863894 0.03389 0.0117612 0.0048703
 40 1 1 0 0 50  0.011124 0.0079606 0.0365026 0.136403 0.188586 0.261705 0.445307 0.491134 0.469186 0.561875 0.764439 1.12568 1.74726 2.69076 3.85082 4.87566 5.35096 5.23832 4.74388 4.10123 3.46824 2.87135 2.2803 1.69325 1.15274 0.710629 0.393671 0.194952 0.0859598 0.033641 0.0116566 0.00482209
 41 1 1 0 0 50  0.0183521 0.0095187 0.0128479 0.0508998 0.107745 0.279755 0.582799 0.815332 1.01383 1.14373 1.1249 1.18248 1.50225 2.13132 3.04767 4.0633 4.82441 5.1362 4.98204 4.46907 3.78248 3.06096 2.36452 1.71877 1.15462 0.706088 0.389032 0.191831 0.0842806 0.0328871 0.0113696 0.00469443
 42 1 1 0 0 50  0.0139756 0.0080551 0.0202303 0.0743465 0.0969934 0.1282 0.301811 0.655689 1.20319 1.71887 1.97311 1.99416 1.93702 2.06332 2.55236 3.32419 4.09644 4.63912 4.80076 4.53506 3.94763 3.20366 2.43957 1.73849 1.14774 0.693208 0.378798 0.185736 0.0812622 0.0316035 0.0108963 0.00448703
 43 1 1 0 0 50  0.0402522 0.0199729 0.0159551 0.0581606 0.0897995 0.158421 0.307865 0.452055 0.745088 1.36447 2.16133 2.76788 2.93855 2.81724 2.76438 3.01864 3.51713 4.05515 4.39258 4.35663 3.94023 3.26497 2.49386 1.76057 1.14561 0.682292 0.368711 0.179343 0.0780179 0.0302144 0.0103833 0.00426181
 44 1 1 0 0 50  0.0133852 0.00959754 0.0440182 0.161013 0.190096 0.162697 0.27112 0.44279 0.700894 1.07858 1.63672 2.44447 3.24091 3.63133 3.57549 3.40494 3.41841 3.6776 3.98156 4.06839 3.81083 3.24672 2.51814 1.78256 1.15254 0.679069 0.36284 0.174772 0.0754525 0.0290546 0.00994217 0.00406394
 45 1 1 0 0 50  0.0242192 0.0124404 0.0153371 0.0605599 0.127268 0.320129 0.612362 0.701488 0.739691 1.00102 1.45041 2.06044 2.81516 3.5549 3.98831 3.99245 3.77668 3.67993 3.75095 3.79286 3.61264 3.15179 2.49314 1.78467 1.15657 0.678426 0.359558 0.171609 0.0734593 0.028087 0.00955726 0.00388552
 46 1 1 0 0 50  0.0448259 0.022971 0.0272523 0.0981325 0.125455 0.155034 0.352269 0.732437 1.24283 1.59263 1.71495 1.96796 2.50342 3.18129 3.78759 4.10611 4.06347 3.88073 3.7422 3.62855 3.41443 3.00318 2.41185 1.75008 1.14337 0.671968 0.355032 0.1684 0.0715497 0.0271559 0.00918022 0.00370685
 47 1 1 0 0 50  0.0306501 0.0180415 0.049273 0.180572 0.22637 0.240821 0.402302 0.56018 0.859232 1.47662 2.18923 2.65296 2.85104 3.09095 3.49857 3.88096 4.01889 3.94999 3.78365 3.56392 3.26932 2.84799 2.29529 1.68103 1.10832 0.655168 0.346704 0.164096 0.0693915 0.0261777 0.00879356 0.00352386
 48 1 1 0 0 50  0.0145248 0.00931403 0.0335755 0.127988 0.203959 0.375546 0.705493 0.874218 1.00171 1.314 1.82393 2.54087 3.21647 3.57255 3.68467 3.76552 3.82613 3.82193 3.7143 3.48786 3.1511 2.70535 2.16631 1.58882 1.05339 0.626464 0.332889 0.157763 0.0666163 0.0250409 0.00837071 0.00333064
 49 1 1 0 0 50  0.0104874 0.00609154 0.0159449 0.0620628 0.11404 0.264668 0.589288 0.983595 1.47766 1.90525 2.13984 2.4531 2.97884 3.54259 3.89093 3.94028 3.81026 3.68123 3.55459 3.34422 3.01165 2.56369 2.03599 1.48724 0.98658 0.588703 0.314067 0.149281 0.0631028 0.0236978 0.00790065 0.00312681
 50 1 1 0 0 50  0.0132819 0.00707026 0.0115986 0.0435389 0.0692327 0.13664 0.326972 0.663791 1.24973 2.01033 2.70606 3.16645 3.39292 3.58762 3.82934 3.96303 3.86945 3.66963 3.45685 3.20617 2.86998 2.43162 1.92039 1.39594 0.923697 0.551285 0.294703 0.140444 0.0594917 0.0223618 0.0074511 0.00294019
 51 1 1 0 0 50  0.019554 0.010253 0.01496 0.054672 0.0740564 0.102814 0.212203 0.393846 0.766497 1.4427 2.37917 3.35148 4.02948 4.27957 4.24822 4.12242 3.93486 3.71441 3.46402 3.16272 2.79347 2.34665 1.84281 1.33364 0.879589 0.524085 0.280165 0.133681 0.056725 0.021354 0.0071207 0.00280765
 52 1 1 0 0 50  0.0178306 0.0100167 0.0224 0.0823006 0.107846 0.132972 0.239248 0.34896 0.540095 0.950477 1.66193 2.69034 3.81053 4.63174 4.9094 4.71853 4.3031 3.9102 3.57239 3.21852 2.80749 2.33249 1.81661 1.3072 0.858793 0.510393 0.272497 0.130005 0.0552059 0.020806 0.00694558 0.00274014
 53 1 1 0 0 50  0.0928766 0.0449834 0.022265 0.0780557 0.115401 0.187876 0.353409 0.471628 0.604991 0.855643 1.26675 1.97753 3.01408 4.14158 4.95983 5.18228 4.85466 4.33489 3.83717 3.36945 2.88892 2.37043 1.82831 1.30596 0.853474 0.505429 0.269245 0.128307 0.0544702 0.0205368 0.00686086 0.00270924
 54 1 1 0 0 50  0.0535521 0.033112 0.106723 0.386654 0.43358 0.276469 0.370837 0.561616 0.811834 1.0903 1.34837 1.73689 2.39828 3.3304 4.31306 4.9651 5.03274 4.67788 4.14706 3.57058 2.99243 2.41187 1.83679 1.30008 0.843979 0.497418 0.264109 0.125596 0.0532582 0.0200716 0.00670635 0.00264991
 55 1 1 0 0 50  0.03128 0.0190925 0.0596879 0.230121 0.393379 0.787962 1.41387 1.44291 1.16565 1.25593 1.57278 1.91055 2.27616 2.79336 3.4977 4.18643 4.54728 4.50977 4.16039 3.61915 3.00275 2.37875 1.78284 1.24664 0.802243 0.469873 0.248373 0.117747 0.0498284 0.0187564 0.00626339 0.00247489
 56 1 1 0 0 50  0.0155104 0.00971052 0.0328021 0.126356 0.216451 0.467055 1.06325 1.84958 2.72234 3.07838 2.68555 2.32799 2.37566 2.62837 2.9762 3.38744 3.7189 3.85592 3.73353 3.35837 2.82141 2.22581 1.64809 1.13736 0.723932 0.420529 0.220969 0.104309 0.0440091 0.016532 0.00551345 0.00217687
 57 1 1 0 0 50  0.0176488 0.00943579 0.0160061 0.0613831 0.109345 0.249003 0.586751 1.13325 2.09801 3.36998 4.3439 4.47212 3.83825 3.16151 2.8942 2.93737 3.06364 3.16648 3.14707 2.92733 2.52285 2.01314 1.489 1.01911 0.641973 0.369395 0.192633 0.090416 0.0379887 0.0142278 0.00473501 0.00186643
 58 1 1 0 0 50  0.0343723 0.0174408 0.0186506 0.0675713 0.0926785 0.135659 0.30225 0.616941 1.24266 2.28879 3.66945 4.98171 5.54059 5.08038 4.1023 3.29324 2.88701 2.76529 2.70788 2.55354 2.24968 1.8282 1.3647 0.934286 0.585255 0.334068 0.172818 0.0805607 0.0336649 0.0125567 0.00416622 0.00163788
 59 1 1 0 0 50  0.0255746 0.0147314 0.0368662 0.134603 0.165748 0.166848 0.283326 0.431315 0.726087 1.36933 2.45402 3.91011 5.31703 6.03525 5.71663 4.67853 3.59117 2.90683 2.57206 2.3471 2.07196 1.70601 1.28939 0.888837 0.557197 0.316839 0.162898 0.0754305 0.0313288 0.0116258 0.0038418 0.00150462
 60 1 1 0 0 50  0.0204128 0.0116714 0.0284348 0.107185 0.164812 0.285432 0.525486 0.6388 0.733428 1.03584 1.63633 2.68083 4.10618 5.46527 6.14106 5.81333 4.7623 3.66568 2.88368 2.38693 2.01362 1.6424 1.24785 0.86682 0.546047 0.310746 0.159344 0.0734367 0.030333 0.0111959 0.00368216 0.00143505
 61 1 1 0 0 50  0.101661 0.0492396 0.024408 0.086026 0.131904 0.235788 0.492373 0.786894 1.13914 1.45182 1.67894 2.13263 3.03569 4.27554 5.41053 5.87758 5.44348 4.49545 3.50204 2.6996 2.10933 1.64222 1.22647 0.850731 0.537801 0.306981 0.157512 0.0724579 0.0298206 0.0109572 0.00358685 0.0013902
 62 1 1 0 0 50  0.0443672 0.0291118 0.110405 0.400746 0.449634 0.289222 0.401948 0.659552 1.07636 1.63051 2.13614 2.51974 2.895 3.51054 4.38316 5.12316 5.26916 4.80544 3.98667 3.0945 2.3213 1.7109 1.22682 0.833895 0.523863 0.299023 0.153624 0.0706882 0.0290528 0.0106456 0.00347214 0.00133872
 63 1 1 0 0 50  0.0358633 0.0202839 0.04732 0.184749 0.344107 0.764014 1.39483 1.43575 1.2091 1.43173 2.00084 2.63691 3.14201 3.50252 3.8763 4.30608 4.56472 4.47319 4.00152 3.26997 2.48354 1.78934 1.23559 0.81269 0.500358 0.283016 0.144997 0.0666939 0.0274039 0.0100302 0.00326446 0.00125362
 64 1 1 0 0 50  0.0201334 0.0121397 0.0363045 0.136797 0.208122 0.380922 0.885485 1.66156 2.57991 2.99948 2.74458 2.62605 2.95931 3.39796 3.69744 3.86345 3.92426 3.87506 3.62334 3.12254 2.46602 1.79935 1.22709 0.786621 0.47204 0.262123 0.132901 0.0608394 0.0249523 0.00912445 0.00296638 0.00113633
 65 1 1 0 0 50  0.0137501 0.00794129 0.0202443 0.0773854 0.129273 0.264541 0.575052 1.00361 1.7934 2.99166 4.05741 4.38131 4.00959 3.61618 3.54013 3.58309 3.53687 3.41595 3.20472 2.83803 2.32255 1.74257 1.20114 0.764727 0.450892 0.245479 0.122468 0.0554653 0.0226104 0.00824253 0.00267522 0.00102296
 66 1 1 0 0 50  0.0132163 0.00723441 0.014164 0.0532758 0.0834724 0.15763 0.354008 0.660281 1.20864 2.0831 3.26525 4.53184 5.27423 5.12688 4.45205 3.82834 3.43286 3.18639 2.94949 2.62381 2.18724 1.68055 1.18088 0.758004 0.445208 0.239439 0.117653 0.0525525 0.0212009 0.00767597 0.00248113 0.000945965
 67 1 1 0 0 50  0.0164016 0.00872085 0.014153 0.052245 0.074426 0.116001 0.242632 0.431991 0.790817 1.42655 2.38024 3.63157 4.91104 5.72007 5.68304 4.94796 4.03593 3.36705 2.93227 2.55594 2.13504 1.66195 1.18702 0.772119 0.456235 0.244817 0.119261 0.0526506 0.0209936 0.00752704 0.00241554 0.000915653
 68 1 1 0 0 50  0.0214593 0.0113839 0.0181505 0.0664556 0.0895288 0.120088 0.227935 0.355345 0.576285 0.995983 1.68473 2.71907 4.01669 5.25706 5.97231 5.85157 5.03795 4.07817 3.29935 2.70691 2.19882 1.70486 1.22718 0.807184 0.481402 0.259469 0.126231 0.0553844 0.0218848 0.00777022 0.00247144 0.000928651
 69 1 1 0 0 50  0.0671116 0.0331772 0.0248935 0.0885081 0.118541 0.155093 0.281679 0.395778 0.552005 0.836223 1.28844 2.02693 3.10457 4.38392 5.50294 6.01369 5.70806 4.89622 3.96417 3.12205 2.42164 1.8254 1.30235 0.858964 0.515862 0.279836 0.136592 0.0598866 0.0235593 0.00830662 0.00262075 0.000974937
 70 1 1 0 0 50  0.0197404 0.014841 0.0739056 0.270242 0.315919 0.252819 0.375254 0.509592 0.667564 0.907384 1.21109 1.68678 2.44504 3.49475 4.65461 5.53413 5.75616 5.35591 4.57082 3.64642 2.77291 2.02663 1.41212 0.921291 0.552662 0.300853 0.147463 0.0648106 0.0254881 0.00895863 0.00281145 0.00103682
 71 1 1 0 0 50  0.021648 0.0117327 0.0219378 0.0888815 0.198055 0.521603 0.995225 1.09704 1.02125 1.14505 1.37546 1.68855 2.15859 2.86261 3.78467 4.6959 5.23223 5.25278 4.79523 4.00411 3.09702 2.24627 1.53535 0.983823 0.583906 0.316752 0.15539 0.0684512 0.0269642 0.00947654 0.00296758 0.00108824
 72 1 1 0 0 50  0.0229693 0.0124475 0.0229007 0.0846721 0.120707 0.202493 0.513505 1.10968 1.89455 2.33603 2.24316 2.12116 2.2548 2.61977 3.19409 3.88691 4.45664 4.72468 4.58747 4.04748 3.25386 2.40205 1.64049 1.03946 0.608988 0.327264 0.159808 0.0703279 0.0277248 0.00975254 0.00305389 0.00111718
 73 1 1 0 0 50  0.094198 0.0458247 0.0251976 0.0882912 0.123164 0.180469 0.357199 0.605432 1.13258 2.08012 3.07807 3.53757 3.36512 3.08211 3.10077 3.41272 3.80458 4.10736 4.1593 3.85432 3.23935 2.46969 1.71536 1.09014 0.634924 0.338168 0.163851 0.0717541 0.0282261 0.00992478 0.00310838 0.00113653
 74 1 1 0 0 50  0.0275593 0.0201707 0.0959311 0.349301 0.395249 0.265496 0.361882 0.531493 0.812942 1.35279 2.22175 3.32487 4.16129 4.29802 3.93689 3.60569 3.53609 3.65179 3.72667 3.56381 3.11278 2.4591 1.75429 1.13229 0.662801 0.35219 0.169652 0.0738393 0.0289102 0.0101369 0.00317075 0.00115863
 75 1 1 0 0 50  0.0283032 0.0153421 0.0286718 0.115194 0.248079 0.632724 1.18188 1.23022 1.03769 1.18354 1.6644 2.45733 3.46358 4.30899 4.58943 4.29992 3.82411 3.5344 3.41616 3.25462 2.90456 2.36354 1.7346 1.1447 0.679523 0.363285 0.175005 0.0759064 0.0295829 0.0103294 0.00322115 0.00117452
 76 1 1 0 0 50  0.0822419 0.0405696 0.0293859 0.105014 0.149477 0.247844 0.614167 1.28857 2.13818 2.54447 2.35459 2.30127 2.77242 3.54409 4.20621 4.41369 4.12996 3.69033 3.32916 3.02836 2.67513 2.20496 1.65409 1.11633 0.675027 0.36546 0.177223 0.0769983 0.0299604 0.0104277 0.00324046 0.00117731
 77 1 1 0 0 50  0.0235957 0.0171149 0.0801487 0.292793 0.341179 0.271432 0.425825 0.705109 1.28842 2.30714 3.3303 3.74787 3.56875 3.43685 3.67185 3.98006 3.99595 3.73183 3.34707 2.93811 2.51687 2.05354 1.55145 1.06363 0.654531 0.359846 0.176485 0.0772033 0.0301255 0.0104838 0.00325157 0.00117725
 78 1 1 0 0 50  0.0234417 0.0127025 0.0236781 0.0948875 0.202455 0.514803 0.978552 1.09136 1.10336 1.53119 2.41187 3.53109 4.35033 4.47661 4.16694 3.89229 3.73278 3.56224 3.28128 2.88829 2.43401 1.95157 1.46404 1.00794 0.627243 0.349558 0.173636 0.0767285 0.0301454 0.0105291 0.00326901 0.00118195
 79 1 1 0 0 50  0.0209236 0.0115161 0.0231909 0.0858925 0.122144 0.201761 0.498433 1.04939 1.78001 2.25774 2.41806 2.8426 3.69149 4.48648 4.74319 4.44374 3.92948 3.5133 3.18357 2.81792 2.37867 1.89367 1.40817 0.965836 0.6029 0.338757 0.170055 0.0759419 0.0301056 0.0105856 0.00330042 0.00119566
 80 1 1 0 0 50  0.0274304 0.0143919 0.0211343 0.0779162 0.111761 0.174079 0.348399 0.58351 1.06992 1.94343 2.90914 3.53776 3.83291 4.17011 4.56844 4.66515 4.30745 3.77112 3.27194 2.81821 2.35811 1.87182 1.38649 0.947091 0.590397 0.33264 0.168035 0.0756647 0.0302586 0.0107242 0.00336511 0.00122553
 81 1 1 0 0 50  0.0108137 0.00715388 0.0277606 0.102807 0.135258 0.170233 0.317882 0.49258 0.777632 1.29689 2.11964 3.20239 4.16821 4.67553 4.80339 4.74821 4.4898 4.05349 3.52288 2.97 2.4298 1.90323 1.40088 0.953582 0.593231 0.334229 0.169274 0.0766052 0.0308388 0.0110095 0.00347883 0.00127628
 82 1 1 0 0 50  0.022578 0.0114019 0.0116452 0.0446266 0.0848991 0.197814 0.3984 0.545045 0.732784 1.08649 1.62891 2.45125 3.51525 4.52687 5.11746 5.16356 4.81596 4.33533 3.80086 3.21022 2.59825 2.00403 1.45705 0.98458 0.610232 0.343315 0.173958 0.0789118 0.0318982 0.0114494 0.00363986 0.00134572
 83 1 1 0 0 50  0.0234045 0.0127332 0.0239203 0.0868247 0.106885 0.113364 0.23362 0.464981 0.815367 1.18777 1.55538 2.09238 2.89694 3.88617 4.79115 5.26863 5.17046 4.72584 4.1461 3.50013 2.82532 2.16235 1.55529 1.04063 0.640562 0.359014 0.181657 0.0824423 0.0333932 0.0120267 0.00384041 0.00142939
 84 1 1 0 0 50  0.0274104 0.0146885 0.0251481 0.0927641 0.129743 0.186523 0.332885 0.428903 0.586649 0.977446 1.53045 2.11069 2.70883 3.4352 4.26939 4.95393 5.19236 4.99696 4.50552 3.83725 3.09685 2.36009 1.68574 1.11852 0.68312 0.380594 0.191879 0.086949 0.0352256 0.012707 0.00406881 0.00152195
 85 1 1 0 0 50  0.0856025 0.0422145 0.0304006 0.108138 0.147794 0.20482 0.384226 0.553036 0.745195 0.992586 1.31164 1.83705 2.5342 3.25474 3.94907 4.57113 4.94712 4.99552 4.70505 4.12288 3.37058 2.57455 1.83271 1.20874 0.733153 0.405843 0.203565 0.0919331 0.0371834 0.0134113 0.00429916 0.00161309
 86 1 1 0 0 50  0.0364821 0.0238087 0.0891511 0.324961 0.378213 0.296844 0.441621 0.621489 0.851274 1.1682 1.47911 1.82399 2.29143 2.91659 3.61366 4.22635 4.61943 4.77943 4.66315 4.22974 3.54618 2.74566 1.96251 1.292 0.779966 0.429314 0.214173 0.0962932 0.0388244 0.0139785 0.00447883 0.00168248
 87 1 1 0 0 50  0.0885098 0.0441729 0.0386602 0.146505 0.271757 0.603967 1.12458 1.23366 1.15078 1.32175 1.63044 1.97497 2.33337 2.73605 3.22987 3.75646 4.16098 4.38732 4.38535 4.09187 3.52514 2.78716 2.01734 1.33467 0.805406 0.441827 0.219415 0.0981995 0.0394372 0.0141571 0.00452759 0.00169965
 88 1 1 0 0 50  0.0364319 0.0235479 0.0860833 0.314733 0.377758 0.358825 0.691083 1.29797 2.05837 2.49244 2.40579 2.31232 2.45581 2.71312 3.01084 3.33641 3.63012 3.85313 3.92361 3.74682 3.30683 2.6729 1.9683 1.31672 0.798697 0.43844 0.217266 0.0968976 0.0387661 0.0138678 0.00442265 0.00165658
 89 1 1 0 0 50  0.0171997 0.0106595 0.0350312 0.136941 0.250972 0.55344 1.05492 1.28473 1.56763 2.34506 3.21444 3.59141 3.40303 3.1016 3.0073 3.08443 3.20695 3.34005 3.4103 3.30666 2.9779 2.45718 1.84297 1.25078 0.766093 0.422706 0.209768 0.0934484 0.0372908 0.0132986 0.00422821 0.0015787
 90 1 1 0 0 50  0.00990953 0.00586715 0.0165161 0.0638038 0.112757 0.257515 0.619814 1.17852 1.93321 2.58701 3.05955 3.65704 4.16209 4.14591 3.7156 3.28524 3.05141 2.99991 3.00033 2.91122 2.65368 2.22669 1.69922 1.17114 0.726161 0.40413 0.201557 0.0899681 0.0358919 0.0127779 0.00405279 0.00150819
 91 1 1 0 0 50  0.00913212 0.00499731 0.00977884 0.0370524 0.0607738 0.125083 0.299036 0.616037 1.23884 2.19449 3.23047 4.02956 4.48013 4.65486 4.49977 4.00406 3.41172 3.01493 2.81824 2.6634 2.42232 2.05126 1.58683 1.10949 0.696937 0.391991 0.197019 0.0883738 0.0353405 0.0125869 0.00398841 0.00148062
 92 1 1 0 0 50  0.0155185 0.00795139 0.00944448 0.034556 0.049356 0.0781762 0.170233 0.329686 0.668415 1.32118 2.34486 3.60014 4.68179 5.23609 5.21643 4.76747 4.07929 3.43627 2.97358 2.644 2.33584 1.96656 1.5305 1.08169 0.687569 0.391006 0.198347 0.0895979 0.0360021 0.0128577 0.00407837 0.00151301
 93 1 1 0 0 50  0.0240998 0.0124945 0.0165468 0.059717 0.0750871 0.0820245 0.147055 0.235185 0.407897 0.777251 1.45852 2.54273 3.89582 5.10397 5.71801 5.58584 4.91202 4.11818 3.43295 2.88682 2.43057 1.99225 1.53812 1.09044 0.698789 0.401245 0.205455 0.093566 0.0378408 0.0135781 0.00431988 0.00160513
 94 1 1 0 0 50  0.0407187 0.02099 0.0263875 0.0953406 0.122235 0.139561 0.234028 0.296937 0.37269 0.569766 0.96034 1.68315 2.814 4.19147 5.38305 5.91835 5.64832 4.9253 4.1047 3.35 2.70291 2.13431 1.61073 1.1321 0.726086 0.419343 0.216389 0.0993294 0.0404613 0.0146056 0.00466828 0.00174112
 95 1 1 0 0 50  0.157122 0.0767602 0.0462111 0.160912 0.204163 0.225938 0.377288 0.479022 0.558311 0.688525 0.870499 1.25209 1.99476 3.12618 4.43325 5.46068 5.78877 5.4658 4.75753 3.90808 3.08803 2.36122 1.73085 1.19364 0.759089 0.438079 0.22693 0.104798 0.0429733 0.0156109 0.00501731 0.00188157
 96 1 1 0 0 50  0.0376422 0.0299169 0.162049 0.591227 0.674318 0.469736 0.619937 0.764799 0.869784 1.02825 1.14774 1.30597 1.6587 2.34376 3.36586 4.45701 5.18008 5.34442 4.98762 4.26855 3.40826 2.57289 1.84251 1.24233 0.777663 0.445192 0.230192 0.106547 0.0438887 0.0160307 0.00518081 0.00195528
 97 1 1 0 0 50  0.0147831 0.00968559 0.0374702 0.156245 0.371695 1.02292 1.93437 2.02343 1.65119 1.59056 1.64451 1.68964 1.78618 2.04592 2.59027 3.36963 4.10549 4.55034 4.56296 4.13753 3.42336 2.61481 1.85966 1.23361 0.759042 0.428873 0.220084 0.101602 0.041893 0.0153511 0.00498286 0.00189212
 98 1 1 0 0 50  0.0134159 0.00730803 0.0139952 0.0547285 0.1079 0.296812 0.843792 1.89398 3.24403 3.85342 3.35551 2.67799 2.32793 2.21678 2.31948 2.65984 3.13188 3.56763 3.77314 3.61941 3.13665 2.46781 1.77551 1.17435 0.714643 0.398592 0.202348 0.0927631 0.0381276 0.0139701 0.0045439 0.00173333
 99 1 1 0 0 50  0.0264998 0.0133326 0.0128963 0.0467922 0.0669064 0.111018 0.280393 0.688595 1.6325 3.19072 4.72056 5.20498 4.46967 3.40749 2.73912 2.5357 2.62876 2.87174 3.07849 3.06787 2.77505 2.26396 1.6686 1.11554 0.678607 0.375779 0.18894 0.0858551 0.0350636 0.0128022 0.00416004 0.00158976
 100 1 1 0 0 50  0.0207212 0.0116308 0.0258617 0.0940535 0.114098 0.109189 0.188936 0.326034 0.669399 1.49879 2.97543 4.76812 5.92659 5.74619 4.60456 3.45137 2.80605 2.64339 2.69062 2.68898 2.49708 2.10333 1.59432 1.08686 0.667622 0.370166 0.185299 0.0836116 0.0339043 0.012308 0.00398462 0.0015204
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
