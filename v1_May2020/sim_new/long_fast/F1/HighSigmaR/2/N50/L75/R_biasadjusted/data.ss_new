#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sun Apr 26 17:59:47 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-26 17:49:18
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 227.252 0.1
2 1 1 273.15 0.1
3 1 1 317.621 0.1
4 1 1 360.115 0.1
5 1 1 400.027 0.1
6 1 1 437.46 0.1
7 1 1 473.911 0.1
8 1 1 510.464 0.1
9 1 1 545.757 0.1
10 1 1 577.386 0.1
11 1 1 604.515 0.1
12 1 1 627.841 0.1
13 1 1 647.915 0.1
14 1 1 664.963 0.1
15 1 1 679.955 0.1
16 1 1 693.936 0.1
17 1 1 706.496 0.1
18 1 1 716.469 0.1
19 1 1 724.074 0.1
20 1 1 731.391 0.1
21 1 1 740.495 0.1
22 1 1 751.766 0.1
23 1 1 763.921 0.1
24 1 1 775.279 0.1
25 1 1 784.769 0.1
26 1 1 766.484 0.1
27 1 1 1747.53 0.1
28 1 1 2660.23 0.1
29 1 1 3516.97 0.1
30 1 1 4347.44 0.1
31 1 1 5151.22 0.1
32 1 1 5884.8 0.1
33 1 1 6524.05 0.1
34 1 1 7125.43 0.1
35 1 1 7773.71 0.1
36 1 1 8467.61 0.1
37 1 1 9111.43 0.1
38 1 1 9607.22 0.1
39 1 1 9906.69 0.1
40 1 1 10006 0.1
41 1 1 9954.41 0.1
42 1 1 9857.7 0.1
43 1 1 9798.7 0.1
44 1 1 9763.86 0.1
45 1 1 9704.34 0.1
46 1 1 9620.11 0.1
47 1 1 9518.51 0.1
48 1 1 9384.3 0.1
49 1 1 9244.72 0.1
50 1 1 9130.57 0.1
51 1 1 8973.94 0.1
52 1 1 8664.96 0.1
53 1 1 8177.06 0.1
54 1 1 7589.68 0.1
55 1 1 7047.27 0.1
56 1 1 6485.76 0.1
57 1 1 6185.18 0.1
58 1 1 6018.28 0.1
59 1 1 5841.19 0.1
60 1 1 5585.83 0.1
61 1 1 5268.81 0.1
62 1 1 4790.32 0.1
63 1 1 4444.78 0.1
64 1 1 4283.69 0.1
65 1 1 4274.75 0.1
66 1 1 4290.52 0.1
67 1 1 4213.11 0.1
68 1 1 4013.25 0.1
69 1 1 3727.32 0.1
70 1 1 3414.72 0.1
71 1 1 3131.46 0.1
72 1 1 2902.55 0.1
73 1 1 2711.35 0.1
74 1 1 2528.62 0.1
75 1 1 2354.12 0.1
76 1 1 2214.64 0.1
77 1 1 2116.15 0.1
78 1 1 2041.35 0.1
79 1 1 1984.13 0.1
80 1 1 1931.3 0.1
81 1 1 2096.41 0.1
82 1 1 2221.44 0.1
83 1 1 2300.59 0.1
84 1 1 2348.28 0.1
85 1 1 2374.29 0.1
86 1 1 2384.45 0.1
87 1 1 2397.63 0.1
88 1 1 2446.16 0.1
89 1 1 2547.65 0.1
90 1 1 2690.83 0.1
91 1 1 2849.08 0.1
92 1 1 2991.4 0.1
93 1 1 3088.32 0.1
94 1 1 3126.18 0.1
95 1 1 3116.01 0.1
96 1 1 3093.02 0.1
97 1 1 3120.89 0.1
98 1 1 3274.69 0.1
99 1 1 3572.63 0.1
100 1 1 3933.45 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 1 0 5 4 3 1 4 3 2 5 1 4 5 4 3 2 1 0 1 0 0 0
 27 1 1 0 0 50 0 0 0 1 1 0 1 0 0 0 1 3 2 1 4 2 4 1 6 5 5 4 2 4 2 0 0 0 1 0 0 0
 28 1 1 0 0 50 0 0 0 0 0 0 3 0 0 0 0 0 1 3 2 7 3 3 4 4 2 7 3 2 4 1 0 0 1 0 0 0
 29 1 1 0 0 50 0 0 0 0 0 0 0 1 2 2 1 1 2 1 3 3 3 4 2 6 2 5 2 4 3 1 2 0 0 0 0 0
 30 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 1 0 3 3 3 2 2 3 2 3 3 6 6 5 1 2 1 0 0 0 0 0
 31 1 1 0 0 50 0 0 0 0 0 0 0 0 2 0 4 3 3 3 7 2 2 0 4 7 0 5 1 1 2 1 2 0 1 0 0 0
 32 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 1 2 3 5 2 2 4 4 4 6 2 6 2 5 0 2 0 0 0 0 0 0
 33 1 1 0 0 50 0 0 0 0 0 0 0 1 1 0 0 4 2 4 3 5 4 2 7 3 2 5 3 3 1 0 0 0 0 0 0 0
 34 1 1 0 0 50 0 0 0 0 0 1 0 0 3 2 2 2 0 0 3 4 5 4 5 5 3 0 4 0 3 2 0 1 0 1 0 0
 35 1 1 0 0 50 0 0 0 0 0 0 0 1 2 0 8 6 6 3 0 1 1 5 3 4 1 3 2 1 2 1 0 0 0 0 0 0
 36 1 1 0 0 50 0 0 0 0 0 0 0 0 3 2 4 3 5 2 0 3 4 2 2 8 3 3 3 1 1 0 1 0 0 0 0 0
 37 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 2 6 4 6 7 3 3 2 2 2 2 1 3 2 1 0 1 0 0 0 0
 38 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 0 4 6 1 5 9 2 4 2 6 2 4 3 0 0 0 0 0 0 0 0
 39 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 1 3 4 5 3 3 7 5 3 4 1 4 1 2 2 1 0 0 0 0 0 0
 40 1 1 0 0 50 0 0 0 0 1 0 0 0 0 0 0 1 1 2 5 4 7 7 4 2 1 5 3 1 3 2 1 0 0 0 0 0
 41 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 0 2 1 2 1 6 2 5 9 0 5 7 3 2 1 0 0 0 0 0 0 0
 42 1 1 0 0 50 0 0 0 0 1 0 0 1 3 3 2 2 3 2 0 2 5 6 2 7 5 2 2 1 1 0 0 0 0 0 0 0
 43 1 1 0 0 50 0 0 0 0 0 1 0 0 0 2 2 4 5 2 3 2 4 4 2 4 3 6 2 0 2 0 1 1 0 0 0 0
 44 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 1 2 4 5 3 6 5 5 4 3 4 2 1 1 0 0 0 0 0 0 1
 45 1 1 0 0 50 0 0 0 0 0 0 2 1 0 1 1 3 1 2 6 3 2 6 3 3 4 3 2 7 0 0 0 0 0 0 0 0
 46 1 1 0 0 50 0 0 0 0 0 0 0 0 2 2 1 2 2 5 5 5 2 2 4 7 5 1 1 1 0 3 0 0 0 0 0 0
 47 1 1 0 0 50 0 0 0 0 0 1 0 0 0 1 3 2 2 4 2 6 3 3 5 1 9 1 4 1 2 0 0 0 0 0 0 0
 48 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 2 3 3 7 2 3 7 3 3 3 3 6 2 0 1 0 0 0 0 0 0
 49 1 1 0 0 50 0 0 0 0 0 0 0 1 3 3 3 2 4 2 7 5 4 2 5 1 2 2 2 2 0 0 0 0 0 0 0 0
 50 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 1 2 1 8 5 2 5 4 2 4 3 0 3 2 1 1 1 0 0 0 0 0
 51 1 1 0 0 50 0 0 0 0 0 0 1 1 0 4 4 5 3 5 4 4 3 3 4 1 3 1 3 1 0 0 0 0 0 0 0 0
 52 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 0 1 4 4 5 5 8 1 8 2 0 3 6 1 1 0 0 0 0 0 0 0
 53 1 1 0 0 50 0 0 0 0 0 0 1 2 1 1 0 2 1 5 10 4 4 5 2 1 1 3 2 3 1 1 0 0 0 0 0 0
 54 1 1 0 0 50 0 0 0 0 1 0 0 1 0 1 2 1 3 3 3 8 7 7 5 2 0 2 1 2 1 0 0 0 0 0 0 0
 55 1 1 0 0 50 0 0 0 0 1 1 1 1 1 0 2 2 1 2 3 5 4 2 9 6 5 1 0 0 1 1 1 0 0 0 0 0
 56 1 1 0 0 50 0 0 0 0 0 0 2 0 2 3 4 4 2 2 4 2 2 1 3 6 7 1 0 3 1 1 0 0 0 0 0 0
 57 1 1 0 0 50 0 0 0 0 0 1 0 0 0 2 6 7 6 2 0 6 4 4 2 3 2 2 0 0 2 1 0 0 0 0 0 0
 58 1 1 0 0 50 0 1 0 0 1 0 1 0 2 4 7 4 1 4 3 0 3 5 6 1 1 1 0 2 1 2 0 0 0 0 0 0
 59 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 4 6 4 8 10 3 2 0 2 0 3 1 2 1 1 0 1 0 0 0 0 0
 60 1 1 0 0 50 0 0 0 0 0 0 0 1 0 1 2 1 2 9 5 6 4 3 6 2 2 2 2 0 2 0 0 0 0 0 0 0
 61 1 1 0 0 50 0 0 0 0 1 0 1 1 1 1 1 3 4 1 3 7 11 7 3 1 2 1 0 0 0 1 0 0 0 0 0 0
 62 1 1 0 0 50 0 0 0 0 0 0 0 0 1 4 4 4 3 2 5 2 6 7 2 2 4 1 0 1 2 0 0 0 0 0 0 0
 63 1 1 0 0 50 0 0 0 0 1 1 2 2 0 1 2 2 1 0 7 3 6 6 5 7 2 1 0 0 0 0 0 1 0 0 0 0
 64 1 1 0 0 50 0 0 0 0 0 0 2 3 6 2 2 3 1 4 4 3 4 5 4 4 0 3 0 0 0 0 0 0 0 0 0 0
 65 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 3 3 3 5 4 2 4 2 4 6 1 1 1 1 1 4 0 0 0 0 0 0
 66 1 1 0 0 50 0 0 0 0 0 0 0 2 1 3 3 4 3 7 5 5 3 1 1 1 5 1 2 2 0 1 0 0 0 0 0 0
 67 1 1 0 0 50 0 0 1 0 0 0 0 0 0 0 4 2 6 4 7 3 7 4 2 2 1 2 2 1 2 0 0 0 0 0 0 0
 68 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 4 3 2 6 4 7 7 3 5 3 2 1 0 1 0 0 0 0 0 0 0 0
 69 1 1 0 0 50 0 0 0 0 0 0 1 0 0 0 2 3 4 3 5 5 11 2 2 3 3 3 1 0 1 1 0 0 0 0 0 0
 70 1 1 0 0 50 0 0 0 0 0 0 0 1 0 2 1 1 2 3 3 6 9 5 3 7 3 1 2 0 0 1 0 0 0 0 0 0
 71 1 1 0 0 50 0 0 0 0 0 0 1 1 1 1 2 1 2 1 5 4 5 6 6 5 3 4 1 0 0 0 0 0 0 1 0 0
 72 1 1 0 0 50 0 0 0 0 0 0 0 2 3 4 5 0 2 2 2 3 6 8 5 1 3 1 3 0 0 0 0 0 0 0 0 0
 73 1 1 0 0 50 0 0 0 0 0 0 2 0 2 0 4 4 3 2 3 5 4 4 2 6 3 3 1 2 0 0 0 0 0 0 0 0
 74 1 1 0 0 50 0 0 0 0 1 0 0 1 0 1 0 6 4 5 5 1 4 2 4 5 2 4 0 3 1 0 0 1 0 0 0 0
 75 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 0 2 6 5 5 4 3 4 5 3 4 3 0 1 2 0 0 0 0 0 0 0
 76 1 1 0 0 50 1 0 0 0 0 0 0 1 5 3 2 1 3 4 6 3 3 2 4 3 3 4 0 1 0 1 0 0 0 0 0 0
 77 1 1 0 0 50 0 0 0 1 1 0 1 1 2 2 2 9 2 3 4 3 1 2 7 2 4 1 0 1 0 1 0 0 0 0 0 0
 78 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 1 3 4 3 3 4 6 3 6 2 3 2 2 3 1 0 1 0 0 0 0 0
 79 1 1 0 0 50 0 0 0 0 0 0 0 3 3 3 1 4 1 10 7 4 1 3 2 2 2 2 1 1 0 0 0 0 0 0 0 0
 80 1 1 0 0 50 0 0 0 0 0 0 0 0 0 4 3 4 1 8 6 4 4 3 2 5 0 4 0 2 0 0 0 0 0 0 0 0
 81 1 1 0 0 50 0 0 0 1 1 0 0 1 2 1 1 5 4 4 1 4 4 7 1 3 3 2 0 1 3 0 0 1 0 0 0 0
 82 1 1 0 0 50 0 0 0 0 0 1 0 2 1 2 1 5 1 5 4 6 5 2 4 3 5 3 0 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 50 0 0 0 1 1 0 0 1 1 1 1 1 5 7 0 5 4 7 2 5 2 5 1 0 0 0 0 0 0 0 0 0
 84 1 1 0 0 50 0 0 0 0 0 0 1 0 0 0 1 3 4 1 4 7 10 2 6 4 3 1 2 0 0 1 0 0 0 0 0 0
 85 1 1 0 0 50 0 0 0 1 0 2 1 0 1 0 1 0 2 4 2 2 7 4 4 5 7 2 2 1 0 1 1 0 0 0 0 0
 86 1 1 0 0 50 0 0 0 0 1 0 0 0 1 2 1 2 4 3 4 4 3 5 4 8 2 4 0 2 0 0 0 0 0 0 0 0
 87 1 1 0 0 50 1 0 0 1 0 1 2 1 0 1 1 1 2 3 6 2 6 6 3 5 2 2 2 2 0 0 0 0 0 0 0 0
 88 1 1 0 0 50 0 0 0 0 1 1 0 0 2 5 2 2 2 1 2 4 3 5 2 3 6 2 2 2 0 1 1 1 0 0 0 0
 89 1 1 0 0 50 0 0 0 1 0 0 1 1 2 2 4 2 6 3 4 2 2 1 2 3 4 2 3 1 3 0 1 0 0 0 0 0
 90 1 1 0 0 50 0 0 0 0 0 0 1 0 3 3 1 5 4 5 4 5 1 1 3 4 2 2 2 1 1 1 1 0 0 0 0 0
 91 1 1 0 0 50 0 0 0 0 0 0 0 1 1 3 6 3 5 1 6 6 4 5 2 1 1 1 1 2 0 0 1 0 0 0 0 0
 92 1 1 0 0 50 0 0 0 0 0 0 0 0 2 2 2 5 5 7 10 4 3 2 2 2 0 2 1 0 0 0 0 0 0 1 0 0
 93 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 2 1 3 5 5 8 3 3 2 3 4 5 2 1 1 0 1 0 0 0 0 0
 94 1 1 0 0 50 0 0 0 0 0 0 1 0 1 1 1 3 2 7 3 4 2 8 3 1 4 3 0 2 3 1 0 0 0 0 0 0
 95 1 1 0 0 50 1 0 0 0 0 0 0 0 0 0 0 0 2 2 7 5 6 5 3 8 4 1 2 3 1 0 0 0 0 0 0 0
 96 1 1 0 0 50 0 0 0 0 1 2 2 1 2 1 2 2 0 0 4 5 5 5 5 5 3 1 1 3 0 0 0 0 0 0 0 0
 97 1 1 0 0 50 0 0 0 0 0 2 2 2 1 2 3 1 6 1 0 2 5 4 8 1 1 2 1 1 1 4 0 0 0 0 0 0
 98 1 1 0 0 50 0 0 0 0 0 0 2 4 1 6 5 0 4 2 1 4 1 0 5 2 4 2 2 2 2 0 1 0 0 0 0 0
 99 1 1 0 0 50 1 0 0 0 0 0 0 0 2 6 3 6 5 0 0 2 4 5 6 4 3 2 0 0 1 0 0 0 0 0 0 0
 100 1 1 0 0 50 0 0 0 0 0 0 0 0 0 3 5 4 3 3 9 2 3 2 1 4 4 4 1 1 0 1 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
60 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 227.252 0.1
2 1 1 273.15 0.1
3 1 1 317.621 0.1
4 1 1 360.115 0.1
5 1 1 400.027 0.1
6 1 1 437.46 0.1
7 1 1 473.911 0.1
8 1 1 510.464 0.1
9 1 1 545.757 0.1
10 1 1 577.386 0.1
11 1 1 604.515 0.1
12 1 1 627.841 0.1
13 1 1 647.915 0.1
14 1 1 664.963 0.1
15 1 1 679.955 0.1
16 1 1 693.936 0.1
17 1 1 706.496 0.1
18 1 1 716.469 0.1
19 1 1 724.074 0.1
20 1 1 731.391 0.1
21 1 1 740.495 0.1
22 1 1 751.766 0.1
23 1 1 763.921 0.1
24 1 1 775.279 0.1
25 1 1 784.769 0.1
26 1 1 766.484 0.1
27 1 1 1747.53 0.1
28 1 1 2660.23 0.1
29 1 1 3516.97 0.1
30 1 1 4347.44 0.1
31 1 1 5151.22 0.1
32 1 1 5884.8 0.1
33 1 1 6524.05 0.1
34 1 1 7125.43 0.1
35 1 1 7773.71 0.1
36 1 1 8467.61 0.1
37 1 1 9111.43 0.1
38 1 1 9607.22 0.1
39 1 1 9906.69 0.1
40 1 1 10006 0.1
41 1 1 9954.41 0.1
42 1 1 9857.7 0.1
43 1 1 9798.7 0.1
44 1 1 9763.86 0.1
45 1 1 9704.34 0.1
46 1 1 9620.11 0.1
47 1 1 9518.51 0.1
48 1 1 9384.3 0.1
49 1 1 9244.72 0.1
50 1 1 9130.57 0.1
51 1 1 8973.94 0.1
52 1 1 8664.96 0.1
53 1 1 8177.06 0.1
54 1 1 7589.68 0.1
55 1 1 7047.27 0.1
56 1 1 6485.76 0.1
57 1 1 6185.18 0.1
58 1 1 6018.28 0.1
59 1 1 5841.19 0.1
60 1 1 5585.83 0.1
61 1 1 5268.81 0.1
62 1 1 4790.32 0.1
63 1 1 4444.78 0.1
64 1 1 4283.69 0.1
65 1 1 4274.75 0.1
66 1 1 4290.52 0.1
67 1 1 4213.11 0.1
68 1 1 4013.25 0.1
69 1 1 3727.32 0.1
70 1 1 3414.72 0.1
71 1 1 3131.46 0.1
72 1 1 2902.55 0.1
73 1 1 2711.35 0.1
74 1 1 2528.62 0.1
75 1 1 2354.12 0.1
76 1 1 2214.64 0.1
77 1 1 2116.15 0.1
78 1 1 2041.35 0.1
79 1 1 1984.13 0.1
80 1 1 1931.3 0.1
81 1 1 2096.41 0.1
82 1 1 2221.44 0.1
83 1 1 2300.59 0.1
84 1 1 2348.28 0.1
85 1 1 2374.29 0.1
86 1 1 2384.45 0.1
87 1 1 2397.63 0.1
88 1 1 2446.16 0.1
89 1 1 2547.65 0.1
90 1 1 2690.83 0.1
91 1 1 2849.08 0.1
92 1 1 2991.4 0.1
93 1 1 3088.32 0.1
94 1 1 3126.18 0.1
95 1 1 3116.01 0.1
96 1 1 3093.02 0.1
97 1 1 3120.89 0.1
98 1 1 3274.69 0.1
99 1 1 3572.63 0.1
100 1 1 3933.45 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 184171 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50  0.0514526 0.0253976 0.0178287 0.0625052 0.0766659 0.0764738 0.134539 0.220023 0.375708 0.658987 1.08494 1.6253 2.15407 2.54723 2.80346 3.01817 3.27108 3.63297 4.05456 4.38951 4.48315 4.2351 3.65044 2.84413 1.98981 1.24416 0.692836 0.342717 0.150285 0.0583285 0.0200119 0.00816258
 27 1 1 0 0 50  0.0150467 0.0112061 0.0548335 0.200651 0.232891 0.176718 0.24295 0.29312 0.348886 0.517526 0.824145 1.29743 1.90257 2.50903 2.97444 3.25974 3.4462 3.69844 4.0359 4.33188 4.42371 4.19386 3.63167 2.84232 1.99644 1.25243 0.699302 0.346641 0.152251 0.0591642 0.020317 0.00829365
 28 1 1 0 0 50  0.0109404 0.00633467 0.0163652 0.0665925 0.146645 0.382147 0.724733 0.7806 0.677243 0.69296 0.804631 1.06736 1.53908 2.15948 2.7845 3.26376 3.5484 3.7787 4.03699 4.26239 4.32165 4.09468 3.55502 2.79257 1.96883 1.23927 0.693939 0.344797 0.151731 0.0590513 0.0203022 0.00829684
 29 1 1 0 0 50  0.00732898 0.00429916 0.0115644 0.0438954 0.0703214 0.146024 0.382983 0.82165 1.38845 1.67762 1.54066 1.38183 1.47932 1.84716 2.40019 2.97234 3.40537 3.72476 3.98314 4.1595 4.17401 3.93465 3.41396 2.68685 1.8998 1.19951 0.673605 0.335537 0.147971 0.0576895 0.0198625 0.00812876
 30 1 1 0 0 50  0.0107144 0.00559933 0.00784298 0.0294209 0.047144 0.0917964 0.207751 0.408768 0.844108 1.57522 2.31 2.60515 2.41524 2.19242 2.28797 2.66596 3.11189 3.5204 3.8432 4.0298 4.02459 3.77201 3.2624 2.56653 1.81732 1.15008 0.647496 0.323327 0.142904 0.0558219 0.0192511 0.00789214
 31 1 1 0 0 50  0.0910076 0.0435056 0.0129258 0.042002 0.0548672 0.0687898 0.138192 0.254399 0.490121 0.948494 1.69488 2.60695 3.25595 3.32952 3.04883 2.87582 2.98952 3.31154 3.66267 3.88974 3.90104 3.65067 3.14845 2.47254 1.75054 1.10907 0.625566 0.31304 0.138651 0.054268 0.0187483 0.00770109
 32 1 1 0 0 50  0.0278053 0.0203643 0.0966983 0.351057 0.38119 0.186162 0.176675 0.234731 0.345163 0.605285 1.08997 1.86359 2.81714 3.595 3.85825 3.66021 3.38119 3.35337 3.54596 3.74676 3.77536 3.54294 3.05519 2.39644 1.6953 1.0742 0.606471 0.303943 0.134861 0.0528815 0.0183015 0.00753325
 33 1 1 0 0 50  0.0223163 0.0126725 0.0300197 0.121289 0.260547 0.658894 1.20076 1.13414 0.713851 0.599226 0.79638 1.26433 2.02416 2.94133 3.69668 3.99685 3.85906 3.64462 3.57764 3.6144 3.58921 3.36298 2.90248 2.27712 1.61034 1.02014 0.576115 0.288969 0.128377 0.0504143 0.0174754 0.00720795
 34 1 1 0 0 50  0.010077 0.00644469 0.0229345 0.0868744 0.134182 0.260298 0.661868 1.3716 2.20612 2.43181 1.87494 1.40933 1.55035 2.16151 2.94468 3.56832 3.80231 3.75457 3.62401 3.50548 3.36446 3.10219 2.66423 2.08844 1.47687 0.935583 0.528411 0.265143 0.11788 0.0463405 0.0160835 0.00664603
 35 1 1 0 0 50  0.00827162 0.00464522 0.010362 0.0402435 0.0734864 0.169072 0.382238 0.710651 1.38765 2.47595 3.43197 3.54882 2.90015 2.35805 2.4392 2.90864 3.32326 3.51934 3.51854 3.38872 3.17359 2.85892 2.42173 1.88709 1.33191 0.843384 0.476346 0.23907 0.106333 0.041829 0.0145307 0.00601319
 36 1 1 0 0 50  0.00732871 0.00407677 0.00861314 0.0322533 0.0483357 0.0859257 0.202141 0.416865 0.835538 1.55576 2.62482 3.81634 4.46448 4.18211 3.44821 2.99555 2.98748 3.17644 3.30049 3.25452 3.04708 2.70668 2.25764 1.74038 1.22133 0.771469 0.435375 0.218484 0.0971964 0.0382504 0.0132954 0.00550791
 37 1 1 0 0 50  0.0087732 0.00470126 0.00794324 0.0295084 0.0430716 0.0699928 0.144997 0.25349 0.481331 0.948756 1.74291 2.87913 4.11694 4.92814 4.89726 4.22567 3.52914 3.21739 3.18009 3.15038 2.98008 2.64645 2.18866 1.66981 1.16225 0.730428 0.411137 0.206093 0.0916572 0.0360745 0.0125433 0.00520018
 38 1 1 0 0 50  0.0278331 0.0137753 0.0101469 0.0361806 0.0493549 0.068435 0.132812 0.212611 0.35229 0.624197 1.12218 1.97629 3.17359 4.42417 5.22974 5.23767 4.60267 3.90684 3.46626 3.22412 2.99512 2.65454 2.18991 1.66081 1.14764 0.71675 0.401683 0.200835 0.0892028 0.0350911 0.012201 0.00506022
 39 1 1 0 0 50  0.0321424 0.0174375 0.0317691 0.114749 0.134049 0.106474 0.159535 0.226995 0.327953 0.515056 0.82995 1.38877 2.29757 3.50721 4.69671 5.38513 5.31017 4.76038 4.1225 3.59381 3.16645 2.73474 2.23419 1.68571 1.15885 0.719805 0.401424 0.199959 0.0885953 0.0348026 0.0120924 0.00501446
 40 1 1 0 0 50  0.0107262 0.00778083 0.0364993 0.136672 0.189283 0.262987 0.447076 0.49034 0.463158 0.551727 0.75182 1.11062 1.72982 2.67189 3.83114 4.85429 5.32962 5.22702 4.74266 4.1097 3.48552 2.89519 2.30686 1.71822 1.17292 0.724803 0.402364 0.199623 0.0881615 0.0345519 0.0119873 0.0049662
 41 1 1 0 0 50  0.0181206 0.00940041 0.0124737 0.0496478 0.106744 0.280799 0.586353 0.820474 1.01851 1.14373 1.11611 1.16586 1.48148 2.10869 3.02398 4.03835 4.80019 5.12241 4.97949 4.47714 3.79946 3.08406 2.38997 1.74261 1.17391 0.719664 0.397375 0.19632 0.0863984 0.0337638 0.0116883 0.00483344
 42 1 1 0 0 50  0.0134886 0.00782808 0.0200737 0.0738889 0.0961693 0.126164 0.29894 0.656099 1.20982 1.72879 1.97965 1.99089 1.92165 2.03923 2.52466 3.29546 4.06913 4.62188 4.79506 4.54067 3.96266 3.2249 2.46311 1.76053 1.16557 0.705779 0.38654 0.189911 0.0832351 0.0324215 0.0111939 0.00461704
 43 1 1 0 0 50  0.040354 0.0200292 0.0155134 0.0566232 0.0881727 0.157496 0.306461 0.448946 0.741129 1.36455 2.16861 2.77687 2.9393 2.80435 2.73999 2.98854 3.4876 4.0353 4.38429 4.35996 3.95336 3.28454 2.51579 1.78111 1.16219 0.693957 0.375892 0.183216 0.0798499 0.0309745 0.0106602 0.00438286
 44 1 1 0 0 50  0.0129141 0.00941198 0.0443688 0.162548 0.191385 0.160825 0.266569 0.438463 0.697511 1.07435 1.63263 2.44432 3.24407 3.63007 3.56265 3.38076 3.39019 3.6569 3.97179 4.07037 3.82291 3.26545 2.53929 1.80231 1.1684 0.690161 0.369639 0.178429 0.0771795 0.0297707 0.0102028 0.00417793
 45 1 1 0 0 50  0.0236878 0.0121832 0.0149002 0.0591703 0.126684 0.323493 0.619014 0.704351 0.73447 0.992102 1.44231 2.05356 2.80948 3.54988 3.97976 3.97554 3.75354 3.66127 3.74092 3.79365 3.62352 3.16956 2.51352 1.80376 1.17184 0.689058 0.366041 0.175082 0.0750941 0.0287634 0.00980318 0.00399296
 46 1 1 0 0 50  0.0448178 0.0229801 0.0268195 0.0966672 0.123572 0.152638 0.350181 0.73639 1.2544 1.60179 1.71221 1.95614 2.48994 3.16881 3.77452 4.08935 4.04327 3.86508 3.73332 3.62863 3.42369 3.01923 2.43079 1.76805 1.15781 0.682018 0.361144 0.171663 0.0730811 0.0277879 0.00940957 0.00380691
 47 1 1 0 0 50  0.0302431 0.0178969 0.0495254 0.181777 0.227412 0.239153 0.397865 0.554767 0.856156 1.48128 2.20154 2.66156 2.84629 3.07545 3.47925 3.86017 3.99785 3.93548 3.7761 3.5642 3.27751 2.86235 2.31252 1.69761 1.12176 0.664548 0.352409 0.167136 0.0708146 0.0267635 0.00900562 0.00361616
 48 1 1 0 0 50  0.0142353 0.00916949 0.0333155 0.127336 0.204108 0.378601 0.711245 0.87675 0.996822 1.30558 1.81925 2.54397 3.22246 3.57095 3.67087 3.74335 3.80269 3.80636 3.70685 3.48827 3.15868 2.71835 2.18189 1.60391 1.06569 0.635095 0.338151 0.160567 0.0679266 0.025579 0.00856505 0.00341498
 49 1 1 0 0 50  0.0102763 0.00598446 0.0157135 0.0613125 0.113187 0.264159 0.590362 0.989488 1.48851 1.91312 2.1372 2.44359 2.97089 3.53774 3.88303 3.92395 3.78851 3.66483 3.54594 3.34369 3.01817 2.57524 2.04988 1.50071 0.99762 0.596483 0.318826 0.151822 0.0642909 0.0241853 0.00807645 0.0032029
 50 1 1 0 0 50  0.0130635 0.00696824 0.0114278 0.0429763 0.0684686 0.135477 0.325244 0.663137 1.25308 2.02009 2.71942 3.1739 3.38825 3.57477 3.81426 3.9459 3.8501 3.65492 3.4482 3.20472 2.87529 2.44181 1.93282 1.40804 0.933622 0.558294 0.299002 0.142744 0.0605683 0.0228036 0.00761031 0.00300896
 51 1 1 0 0 50  0.0193523 0.0101659 0.0147994 0.0541731 0.073438 0.10189 0.210487 0.391492 0.764208 1.44282 2.38489 3.36225 4.03833 4.27822 4.23513 4.10219 3.91373 3.70035 3.45661 3.16183 2.79862 2.3563 1.85454 1.34501 0.88889 0.530637 0.284178 0.135827 0.0577293 0.021766 0.00726902 0.00287159
 52 1 1 0 0 50  0.0173644 0.00980722 0.0222956 0.0820768 0.107595 0.132367 0.238026 0.34705 0.537168 0.946862 1.6595 2.69165 3.81576 4.63597 4.90553 4.70371 4.28285 3.89611 3.56568 3.2188 2.8136 2.34264 1.82849 1.31853 0.867968 0.516815 0.276412 0.132092 0.0561804 0.0212051 0.00708902 0.00280183
 53 1 1 0 0 50  0.0926695 0.0449558 0.0218562 0.0766888 0.114099 0.187655 0.353748 0.471495 0.603433 0.852419 1.26219 1.97295 3.01135 4.14065 4.95693 5.17228 4.83863 4.32334 3.83177 3.3708 2.89609 2.38144 1.84073 1.31755 0.862747 0.511868 0.273148 0.130378 0.0554348 0.0209309 0.00700225 0.00276992
 54 1 1 0 0 50  0.0528038 0.0328336 0.107102 0.388722 0.435856 0.275363 0.367431 0.559443 0.812179 1.09073 1.34622 1.73175 2.3915 3.32345 4.30555 4.95414 5.01843 4.66892 4.14369 3.57305 3.00016 2.42316 1.8493 1.31163 0.853128 0.50373 0.267918 0.127611 0.0541945 0.0204536 0.00684319 0.00270855
 55 1 1 0 0 50  0.0308943 0.0188989 0.0591853 0.2288 0.393495 0.793666 1.42553 1.45118 1.16458 1.25137 1.56984 1.90762 2.27009 2.78373 3.48554 4.17152 4.53089 4.49988 4.15674 3.62119 3.00955 2.38875 1.794 1.25699 0.810464 0.47555 0.251801 0.119561 0.0506712 0.0191003 0.00638665 0.00252774
 56 1 1 0 0 50  0.0152369 0.00957622 0.0325576 0.125645 0.215523 0.465928 1.0643 1.8594 2.74264 3.09723 2.69078 2.32215 2.36625 2.61718 2.96202 3.3698 3.69995 3.84311 3.72718 3.3579 2.82564 2.23317 1.65671 1.14555 0.730536 0.425132 0.223764 0.105795 0.0447017 0.0168154 0.00561523 0.00222062
 57 1 1 0 0 50  0.0173632 0.00930438 0.0158073 0.0607549 0.108607 0.248222 0.585738 1.13299 2.10225 3.38423 4.36632 4.48947 3.84009 3.15055 2.87766 2.91843 3.04428 3.15261 3.13911 2.925 2.52511 2.01844 1.49562 1.02554 0.647219 0.373076 0.194879 0.0916139 0.0385483 0.0144571 0.00481753 0.00190196
 58 1 1 0 0 50  0.0340555 0.0173137 0.0184608 0.066992 0.0920033 0.134808 0.300961 0.615826 1.24257 2.29143 3.6781 4.99713 5.55565 5.08455 4.09265 3.27512 2.86764 2.75174 2.70018 2.55119 2.25165 1.83298 1.37065 0.940012 0.589879 0.337288 0.174772 0.0815986 0.0341483 0.0127544 0.00423723 0.0016684
 59 1 1 0 0 50  0.0251944 0.0145681 0.0367592 0.134458 0.165664 0.166352 0.282303 0.430023 0.724785 1.36895 2.45625 3.91637 5.32661 6.04314 5.71582 4.66654 3.57388 2.8942 2.565 2.34539 2.0745 1.7112 1.29554 0.894589 0.561742 0.31995 0.164761 0.0764098 0.0317815 0.0118099 0.00390759 0.00153277
 60 1 1 0 0 50  0.0200074 0.0114819 0.0281972 0.106535 0.164411 0.286086 0.527241 0.640223 0.733341 1.03487 1.63578 2.68214 4.10989 5.46935 6.14079 5.80445 4.74757 3.65517 2.87773 2.38575 2.01654 1.64793 1.25429 0.872748 0.550669 0.313869 0.161192 0.0743986 0.0307738 0.0113739 0.00374546 0.00146198
 61 1 1 0 0 50  0.100805 0.0489257 0.0240981 0.0850567 0.130893 0.235212 0.492539 0.789216 1.14411 1.45694 1.68137 2.1327 3.03537 4.27515 5.4075 5.86801 5.42892 4.48606 3.49723 2.69898 2.1123 1.64764 1.23279 0.856586 0.54237 0.310061 0.159325 0.0733965 0.0302483 0.011129 0.00364764 0.00141594
 62 1 1 0 0 50  0.0435731 0.0287536 0.110162 0.400607 0.449844 0.288373 0.400121 0.658618 1.07813 1.63584 2.14389 2.52624 2.89726 3.50865 4.37755 5.11215 5.25397 4.79576 3.98207 3.09412 2.32419 1.71593 1.23268 0.839361 0.528163 0.301936 0.155343 0.071577 0.0294569 0.0108074 0.0035292 0.00136278
 63 1 1 0 0 50  0.035377 0.0200473 0.0467726 0.183108 0.34304 0.76606 1.40024 1.44017 1.20955 1.43148 2.00356 2.64257 3.14733 3.50367 3.8714 4.2947 4.54926 4.46266 3.99612 3.26898 2.48583 1.79364 1.24067 0.817461 0.504144 0.285602 0.146533 0.0674909 0.0277668 0.0101755 0.00331565 0.00127515
 64 1 1 0 0 50  0.0197868 0.0119734 0.0360291 0.136 0.207072 0.379291 0.884441 1.66593 2.59163 3.01176 2.75045 2.62712 2.95963 3.39731 3.69292 3.85286 3.9094 3.86404 3.61684 3.12032 2.46714 1.80256 1.23114 0.79052 0.475171 0.264282 0.134193 0.0615146 0.0252611 0.00924844 0.00301013 0.00115473
 65 1 1 0 0 50  0.0135015 0.00782034 0.0200228 0.0767051 0.128537 0.263913 0.574263 1.00291 1.79504 2.99999 4.07224 4.39452 4.01441 3.61362 3.53318 3.57196 3.52282 3.4055 3.19814 2.83525 2.32291 1.74498 1.20443 0.767965 0.453513 0.247293 0.123558 0.0560367 0.0228727 0.00834812 0.00271253 0.00103866
 66 1 1 0 0 50  0.0129856 0.00712686 0.0140029 0.0527751 0.0828759 0.156932 0.353155 0.659984 1.20951 2.08574 3.27152 4.5427 5.28542 5.13139 4.44738 3.81683 3.41887 3.17667 2.94372 2.62154 2.18779 1.68292 1.18402 0.761034 0.447626 0.241094 0.11864 0.0530677 0.0214368 0.00777081 0.00251463 0.000960052
 67 1 1 0 0 50  0.0161249 0.00859649 0.0140065 0.0518046 0.0739336 0.115462 0.241878 0.431375 0.79093 1.42824 2.38433 3.63821 4.91908 5.72599 5.68209 4.93832 4.02207 3.3578 2.9273 2.55457 2.13636 1.66488 1.1905 0.77533 0.458723 0.246484 0.120238 0.0531542 0.0212221 0.00761837 0.00244766 0.000929111
 68 1 1 0 0 50  0.0210738 0.0112116 0.0179765 0.0659493 0.089013 0.11965 0.227403 0.354887 0.576147 0.996685 1.68716 2.72382 4.02303 5.26223 5.97219 5.84305 5.02425 4.06945 3.29505 2.70633 2.20095 1.70851 1.23123 0.810781 0.484119 0.261253 0.127259 0.0559065 0.0221189 0.00786292 0.00250382 0.000942135
 69 1 1 0 0 50  0.0662182 0.0328109 0.024633 0.0877455 0.117788 0.154609 0.281258 0.395588 0.552184 0.836896 1.28997 2.02991 3.10904 4.38821 5.5033 6.00609 5.69449 4.88784 3.96049 3.12217 2.42447 1.82972 1.30696 0.862981 0.518855 0.281778 0.137697 0.060442 0.0238058 0.00840332 0.00265427 0.000988786
 70 1 1 0 0 50  0.0193606 0.0146394 0.0734615 0.26912 0.315013 0.252104 0.374424 0.509245 0.668062 0.908577 1.2128 1.68907 2.44793 3.49745 4.65453 5.52727 5.74318 5.34769 4.56738 3.64695 2.7762 2.03136 1.41709 0.925594 0.555857 0.302918 0.148634 0.0653955 0.025746 0.00905912 0.00284605 0.00105101
 71 1 1 0 0 50  0.0212876 0.0115651 0.0216758 0.0880687 0.197287 0.521715 0.996562 1.09866 1.02224 1.14613 1.37722 1.69073 2.16061 2.86373 3.78325 4.68883 5.21957 5.24416 4.79116 4.00412 3.09998 2.25081 1.5402 0.988063 0.587074 0.31881 0.15656 0.0690361 0.0272219 0.0095767 0.00300195 0.00110227
 72 1 1 0 0 50  0.0225774 0.0122694 0.0226769 0.0840043 0.119949 0.201681 0.513043 1.11184 1.90058 2.34315 2.24794 2.12351 2.25581 2.61938 3.1911 3.87905 4.44395 4.71523 4.58207 4.04607 3.25561 2.40567 1.64469 1.04327 0.611887 0.329171 0.160902 0.0708784 0.0279683 0.00984742 0.00308647 0.00113046
 73 1 1 0 0 50  0.0928375 0.0452711 0.0249455 0.0875763 0.122422 0.179836 0.356462 0.605123 1.13428 2.08621 3.08825 3.54705 3.36962 3.08156 3.09642 3.40414 3.79221 4.09787 4.15335 3.85203 3.24016 2.47251 1.71895 1.09353 0.637562 0.339925 0.164867 0.0722685 0.0284547 0.0100141 0.00313909 0.00114904
 74 1 1 0 0 50  0.0270594 0.0198996 0.0952451 0.347458 0.39375 0.264743 0.361204 0.531182 0.813479 1.35507 2.22737 3.33413 4.17053 4.30205 3.9338 3.59665 3.52387 3.64288 3.72121 3.56175 3.11359 2.4618 1.75775 1.13557 0.665354 0.353891 0.170637 0.0743379 0.0291318 0.0102235 0.00320052 0.00117074
 75 1 1 0 0 50  0.0278282 0.0151239 0.0283652 0.114253 0.247089 0.632361 1.18259 1.23156 1.0389 1.18519 1.6675 2.4626 3.47039 4.31412 4.5886 4.29142 3.8114 3.52546 3.41093 3.25278 2.90547 2.36623 1.738 1.14791 0.682017 0.364944 0.175964 0.076391 0.0297979 0.0104134 0.00324998 0.00118624
 76 1 1 0 0 50  0.0810025 0.0400561 0.0291021 0.104203 0.148608 0.247064 0.613836 1.29081 2.14422 2.55179 2.36016 2.30538 2.77626 3.54681 4.20486 4.40536 4.11669 3.68067 3.32326 3.02593 2.67549 2.20716 1.65707 1.11922 0.677313 0.366995 0.178115 0.0774508 0.0301616 0.0105064 0.00326749 0.00118831
 77 1 1 0 0 50  0.0231638 0.0168773 0.0795092 0.291006 0.339636 0.270608 0.42512 0.70512 1.2908 2.31401 3.34112 3.75818 3.57488 3.43869 3.66945 3.97176 3.98285 3.72182 3.34056 2.93498 2.51656 2.05514 1.55394 1.06616 0.656579 0.361241 0.177303 0.0776204 0.0303117 0.0105567 0.00327666 0.00118747
 78 1 1 0 0 50  0.0230469 0.0125206 0.0234165 0.0940697 0.201495 0.514017 0.978227 1.09176 1.10452 1.5342 2.41842 3.54115 4.36021 4.48158 4.16515 3.88403 3.72033 3.55265 3.27481 2.88492 2.43334 1.95279 1.46621 1.01023 0.629129 0.350856 0.174402 0.0771211 0.030321 0.0105979 0.00329271 0.0011916
 79 1 1 0 0 50  0.0205663 0.0113516 0.022966 0.0852242 0.121416 0.201042 0.497854 1.05039 1.78361 2.26283 2.42348 2.84912 3.6991 4.49215 4.74283 4.43561 3.91679 3.50393 3.17733 2.8146 2.37786 1.89467 1.41011 0.967945 0.604666 0.339986 0.170785 0.0763174 0.030274 0.0106517 0.0033232 0.00120493
 80 1 1 0 0 50  0.0269712 0.0141887 0.0209246 0.0772979 0.111114 0.173525 0.347808 0.583388 1.07143 1.94817 2.91713 3.54646 3.84002 4.1746 4.56823 4.65759 4.29458 3.76164 3.26577 2.81501 2.35734 1.87278 1.38835 0.949119 0.592104 0.333834 0.168748 0.0760331 0.0304244 0.0107894 0.00338758 0.00123467
 81 1 1 0 0 50  0.010611 0.00704669 0.0274985 0.102035 0.134499 0.169684 0.317361 0.492466 0.778432 1.29938 2.125 3.21081 4.17718 4.68128 4.8034 4.74103 4.47739 4.04435 3.51699 2.96708 2.42929 1.90438 1.40286 0.955679 0.594978 0.335447 0.170001 0.0769813 0.0310083 0.0110762 0.00350185 0.00128564
 82 1 1 0 0 50  0.0221991 0.0112383 0.0115141 0.0442241 0.0844111 0.197295 0.397906 0.545006 0.733563 1.08848 1.6327 2.45734 3.52298 4.53336 5.11864 5.15671 4.80353 4.32654 3.79546 3.20777 2.59815 2.00552 1.45929 0.986851 0.612091 0.344599 0.174721 0.0793063 0.0320759 0.0115195 0.00366406 0.00135556
 83 1 1 0 0 50  0.0230065 0.0125525 0.0236978 0.0861825 0.10627 0.112933 0.233224 0.465114 0.816575 1.19014 1.55894 2.09735 2.90306 3.89179 4.79281 5.26251 5.158 4.71702 4.1409 3.49804 2.82561 2.16417 1.55779 1.04309 0.642545 0.360373 0.182463 0.0828578 0.0335804 0.0121006 0.00386597 0.00143982
 84 1 1 0 0 50  0.0269305 0.0144726 0.0249091 0.0920685 0.129053 0.186043 0.332488 0.428828 0.587302 0.979532 1.53434 2.11586 2.71436 3.4399 4.27082 4.94848 5.18042 4.98821 4.50032 3.83528 3.09738 2.36218 1.68847 1.12116 0.685219 0.382024 0.192724 0.0873842 0.0354219 0.0127845 0.00409568 0.00153294
 85 1 1 0 0 50  0.0842636 0.0416567 0.0300983 0.107278 0.146949 0.204274 0.383861 0.553264 0.746319 0.99461 1.31477 1.84162 2.5396 3.25919 3.95023 4.56607 4.93602 4.98721 4.70002 4.12103 3.37127 2.57686 1.83564 1.21153 0.735361 0.407338 0.204445 0.0923858 0.0373875 0.0134921 0.00432718 0.00162458
 86 1 1 0 0 50  0.0358236 0.0234724 0.0884358 0.322968 0.376504 0.296002 0.441044 0.621639 0.852683 1.17096 1.48295 1.8285 2.29615 2.92048 3.61461 4.22149 4.60894 4.77155 4.65833 4.22796 3.54692 2.74803 1.96552 1.29487 0.782221 0.430837 0.215068 0.0967528 0.0390315 0.0140605 0.00450731 0.0016942
 87 1 1 0 0 50  0.0870143 0.0435362 0.0382553 0.14531 0.270492 0.603217 1.12462 1.23462 1.15247 1.32457 1.63461 1.97996 2.33811 2.73934 3.23016 3.75151 4.15089 4.37948 4.38031 4.08971 3.52545 2.78914 2.02004 1.33732 0.807526 0.443271 0.220267 0.0986383 0.0396354 0.0142357 0.00455496 0.00171095
 88 1 1 0 0 50  0.0357212 0.0231804 0.0852711 0.312363 0.375575 0.357651 0.690531 1.29967 2.06353 2.4993 2.41199 2.31758 2.46021 2.71576 3.01027 3.33092 3.62012 3.84504 3.91793 3.74376 3.30615 2.67396 1.97026 1.31883 0.800463 0.439674 0.218006 0.097283 0.0389415 0.0139377 0.00444713 0.00166674
 89 1 1 0 0 50  0.016862 0.0104835 0.0346126 0.135614 0.249417 0.551942 1.05356 1.28463 1.57013 2.35165 3.22458 3.60142 3.40953 3.10401 3.00577 3.07826 3.1969 3.33179 3.40415 3.30283 2.97627 2.45728 1.84411 1.25228 0.767444 0.423691 0.210374 0.09377 0.0374389 0.0133582 0.00424921 0.00158748
 90 1 1 0 0 50  0.00971908 0.00577159 0.0163187 0.063172 0.111935 0.256403 0.618504 1.17859 1.93598 2.59237 3.06741 3.66711 4.17149 4.15065 3.71413 3.27816 3.04097 2.99158 2.99406 2.90707 2.65155 2.22621 1.6998 1.17218 0.727199 0.404923 0.202059 0.0902387 0.0360181 0.0128291 0.00407096 0.00151584
 91 1 1 0 0 50  0.00896066 0.00491743 0.00966827 0.036708 0.0603493 0.124535 0.298274 0.615662 1.24011 2.19906 3.23883 4.03989 4.48967 4.66082 4.49945 3.99656 3.40025 3.00628 2.81201 2.65933 2.42017 2.05066 1.58725 1.11036 0.697844 0.392698 0.197472 0.0886199 0.0354558 0.0126339 0.00400512 0.00148767
 92 1 1 0 0 50  0.01523 0.00782478 0.00934399 0.0342586 0.0490383 0.0778876 0.169895 0.329555 0.669081 1.32383 2.35101 3.60995 4.69266 5.24372 5.21729 4.76016 4.06701 3.42721 2.96734 2.64016 2.33399 1.96622 1.53109 1.08267 0.688534 0.39174 0.198812 0.0898487 0.036119 0.0129051 0.00409519 0.00152008
 93 1 1 0 0 50  0.0236276 0.0122852 0.0163771 0.0592258 0.0746224 0.081767 0.146874 0.235244 0.40854 0.779126 1.46273 2.55026 3.90592 5.11301 5.72094 5.57938 4.89924 4.10893 3.42681 2.88331 2.42917 1.99236 1.53911 1.09171 0.699945 0.402094 0.20598 0.0938454 0.0379697 0.01363 0.00433815 0.00161275
 94 1 1 0 0 50  0.0401902 0.0207622 0.0260979 0.0944725 0.121408 0.139152 0.233822 0.297102 0.373468 0.571478 0.963612 1.68885 2.82226 4.20021 5.38752 5.91352 5.63571 4.91605 4.09872 3.34682 2.70194 2.13487 1.61212 1.13369 0.727469 0.420333 0.216992 0.0996471 0.0406068 0.0146638 0.00468866 0.00174957
 95 1 1 0 0 50  0.153378 0.0751602 0.0459656 0.160491 0.203828 0.225445 0.376732 0.479145 0.559536 0.690776 0.873784 1.25688 2.00145 3.13379 4.43826 5.45775 5.77755 5.45711 4.75185 3.9052 3.08741 2.36214 1.73256 1.19549 0.760653 0.439186 0.2276 0.105149 0.0431335 0.0156749 0.00503967 0.00189081
 96 1 1 0 0 50  0.0380525 0.0299353 0.159582 0.583317 0.667184 0.468782 0.622195 0.767584 0.872294 1.03132 1.15187 1.31109 1.66466 2.35009 3.37044 4.45545 5.17091 5.33671 4.98227 4.26575 3.40765 2.57382 1.84423 1.24419 0.779238 0.446306 0.230868 0.106902 0.0440514 0.0160959 0.00520362 0.00196473
 97 1 1 0 0 50  0.0156015 0.0101329 0.0381729 0.158764 0.3727 1.01656 1.92316 2.01755 1.65518 1.59927 1.65264 1.69623 1.79195 2.05098 2.59343 3.36796 4.09752 4.54286 4.55699 4.13366 3.42162 2.61474 1.86059 1.23489 0.76023 0.429755 0.220635 0.101898 0.0420306 0.0154069 0.00500261 0.0019004
 98 1 1 0 0 50  0.0147254 0.00800009 0.0148839 0.0580631 0.112527 0.302851 0.852239 1.89719 3.23873 3.84857 3.35877 2.68687 2.336 2.22128 2.32038 2.65621 3.12311 3.55865 3.76479 3.6126 3.13192 2.46513 1.77441 1.1742 0.714917 0.39894 0.202617 0.0929253 0.0382088 0.0140048 0.00455666 0.00173889
 99 1 1 0 0 50  0.0305506 0.0153579 0.0142782 0.0517342 0.073306 0.118394 0.293376 0.705967 1.65087 3.20358 4.72175 5.19927 4.46564 3.40631 2.73674 2.52891 2.61737 2.85993 3.06671 3.05705 2.76618 2.25756 1.66456 1.11333 0.677578 0.375384 0.188827 0.0858399 0.0350711 0.0128096 0.0041638 0.00159183
 100 1 1 0 0 50  0.0189521 0.0111313 0.0299099 0.109221 0.131806 0.122555 0.207673 0.349747 0.69709 1.53034 3.00229 4.77881 5.9171 5.72461 4.58199 3.43127 2.78691 2.62619 2.67371 2.67278 2.48277 2.09195 1.58625 1.08178 0.664778 0.368746 0.184667 0.0833613 0.0338161 0.0122805 0.00397705 0.00151812
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
60 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
