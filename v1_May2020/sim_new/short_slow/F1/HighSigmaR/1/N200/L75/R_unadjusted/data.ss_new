#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sat Apr 25 19:07:50 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-25 19:02:58
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 83.9067 0.1
2 1 1 97.3541 0.1
3 1 1 112.943 0.1
4 1 1 130.856 0.1
5 1 1 149.506 0.1
6 1 1 168.005 0.1
7 1 1 186.963 0.1
8 1 1 206.706 0.1
9 1 1 226.471 0.1
10 1 1 244.747 0.1
11 1 1 259.708 0.1
12 1 1 270.046 0.1
13 1 1 275.587 0.1
14 1 1 277.112 0.1
15 1 1 276.635 0.1
16 1 1 280.51 0.1
17 1 1 297.77 0.1
18 1 1 327.654 0.1
19 1 1 357.703 0.1
20 1 1 377.955 0.1
21 1 1 388.804 0.1
22 1 1 395.555 0.1
23 1 1 401.194 0.1
24 1 1 405.686 0.1
25 1 1 408.988 0.1
26 1 1 400.744 0.1
27 1 1 930.852 0.1
28 1 1 1463.48 0.1
29 1 1 1999.42 0.1
30 1 1 2508.02 0.1
31 1 1 2945.48 0.1
32 1 1 3290.94 0.1
33 1 1 3546.59 0.1
34 1 1 3715.5 0.1
35 1 1 3787.32 0.1
36 1 1 3749.4 0.1
37 1 1 3607.9 0.1
38 1 1 3408.58 0.1
39 1 1 3236.67 0.1
40 1 1 3156.09 0.1
41 1 1 3196.38 0.1
42 1 1 3445.04 0.1
43 1 1 3931.1 0.1
44 1 1 4387.89 0.1
45 1 1 4536.59 0.1
46 1 1 4417.43 0.1
47 1 1 4164.54 0.1
48 1 1 3874.16 0.1
49 1 1 3652.11 0.1
50 1 1 3471.95 0.1
51 1 1 3233.88 0.1
52 1 1 2961.64 0.1
53 1 1 2731.82 0.1
54 1 1 2572.51 0.1
55 1 1 2473.25 0.1
56 1 1 2338.3 0.1
57 1 1 2246.45 0.1
58 1 1 2179.28 0.1
59 1 1 2157.93 0.1
60 1 1 2213.51 0.1
61 1 1 2278.25 0.1
62 1 1 2223.81 0.1
63 1 1 2212.56 0.1
64 1 1 2264.92 0.1
65 1 1 2289.94 0.1
66 1 1 2222.56 0.1
67 1 1 2117.65 0.1
68 1 1 2083.41 0.1
69 1 1 2204.83 0.1
70 1 1 2526.27 0.1
71 1 1 2887.25 0.1
72 1 1 3013.75 0.1
73 1 1 2835.72 0.1
74 1 1 2502.11 0.1
75 1 1 2172.17 0.1
76 1 1 1899.27 0.1
77 1 1 1666.67 0.1
78 1 1 1457.92 0.1
79 1 1 1271.87 0.1
80 1 1 1100.9 0.1
81 1 1 1066.72 0.1
82 1 1 1050.04 0.1
83 1 1 1080.17 0.1
84 1 1 1146.6 0.1
85 1 1 1214.36 0.1
86 1 1 1256.91 0.1
87 1 1 1280.37 0.1
88 1 1 1312.83 0.1
89 1 1 1362.59 0.1
90 1 1 1407.27 0.1
91 1 1 1418.87 0.1
92 1 1 1388.7 0.1
93 1 1 1334.5 0.1
94 1 1 1281.48 0.1
95 1 1 1237.28 0.1
96 1 1 1209.22 0.1
97 1 1 1245.41 0.1
98 1 1 1386.5 0.1
99 1 1 1572.9 0.1
100 1 1 1710.84 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200 2 2 0 0 1 1 1 6 3 5 8 9 10 14 17 21 8 16 17 13 17 14 8 5 0 1 0 0 0 0 1 0
 27 1 1 0 0 200 0 0 0 0 3 3 3 3 4 13 15 8 14 16 10 9 15 19 11 10 11 16 4 6 4 3 0 0 0 0 0 0
 28 1 1 0 0 200 0 0 0 0 2 1 3 6 7 5 13 12 14 20 15 18 14 8 9 17 15 7 5 2 2 2 1 1 1 0 0 0
 29 1 1 0 0 200 0 0 0 1 1 1 1 1 7 7 14 12 16 19 14 12 8 21 17 11 9 7 9 6 3 2 1 0 0 0 0 0
 30 1 1 0 0 200 0 0 0 1 0 1 2 1 2 3 9 18 24 16 22 12 20 14 17 10 10 4 3 3 6 2 0 0 0 0 0 0
 31 1 1 0 0 200 1 0 0 0 4 1 2 0 5 11 2 13 10 15 18 16 18 19 13 16 10 7 7 6 4 1 1 0 0 0 0 0
 32 1 1 0 0 200 0 0 0 0 1 2 0 1 5 7 8 14 9 20 15 26 11 21 10 15 8 9 4 6 3 3 1 1 0 0 0 0
 33 1 1 0 0 200 0 1 0 0 0 1 2 3 9 6 6 15 15 20 21 16 21 13 11 14 10 4 3 5 2 1 0 1 0 0 0 0
 34 1 1 0 0 200 0 0 0 0 1 1 2 2 1 8 4 12 14 19 16 30 15 20 12 10 12 6 5 4 4 0 2 0 0 0 0 0
 35 1 1 0 0 200 1 1 1 0 0 0 0 4 4 7 5 13 13 14 19 18 23 15 16 11 8 11 4 5 6 0 0 1 0 0 0 0
 36 1 1 0 0 200 0 0 0 0 1 0 0 5 3 6 9 9 13 12 17 20 17 15 14 15 10 12 7 6 5 2 1 0 1 0 0 0
 37 1 1 0 0 200 0 2 0 0 1 1 1 1 1 4 6 8 13 13 14 25 20 13 14 13 15 10 8 8 4 5 0 0 0 0 0 0
 38 1 1 0 0 200 0 1 0 0 5 1 3 4 8 4 9 12 8 16 15 12 19 7 18 16 16 6 8 7 4 0 1 0 0 0 0 0
 39 1 1 0 0 200 0 2 0 0 2 0 5 5 9 14 16 16 11 10 6 20 15 13 14 8 10 5 8 4 3 2 1 0 0 1 0 0
 40 1 1 0 0 200 0 0 1 1 1 3 3 4 11 20 13 16 11 11 11 12 14 16 11 13 8 7 3 5 1 2 0 2 0 0 0 0
 41 1 1 0 0 200 0 1 1 3 6 5 8 8 9 15 5 16 16 22 18 12 12 11 7 3 5 8 5 1 3 0 0 0 0 0 0 0
 42 1 1 0 0 200 0 0 0 0 3 2 5 14 22 13 25 8 12 12 17 12 12 12 6 7 5 5 3 1 2 1 0 0 1 0 0 0
 43 1 1 0 0 200 0 0 0 0 0 1 2 4 11 15 24 26 19 18 16 10 8 10 11 7 8 5 3 1 0 0 1 0 0 0 0 0
 44 1 1 0 0 200 0 0 1 1 3 3 2 3 3 14 12 27 32 27 25 14 8 6 4 5 1 2 4 1 0 0 2 0 0 0 0 0
 45 1 1 0 0 200 0 0 0 0 4 0 4 6 3 4 10 12 16 33 28 28 18 13 4 4 4 6 2 0 0 1 0 0 0 0 0 0
 46 1 1 0 0 200 0 0 0 0 2 0 0 6 7 10 10 12 15 17 23 27 19 21 9 7 6 1 7 0 1 0 0 0 0 0 0 0
 47 1 1 0 0 200 0 1 0 3 5 1 3 1 0 3 6 18 18 18 19 19 28 14 13 14 6 3 3 1 3 0 0 0 0 0 0 0
 48 1 1 0 0 200 0 0 0 0 3 2 7 10 10 8 7 14 17 21 17 19 14 20 12 8 4 5 1 0 0 0 0 1 0 0 0 0
 49 1 1 0 0 200 0 1 1 0 0 2 3 4 9 9 14 12 25 18 13 19 16 12 15 10 3 6 4 3 1 0 0 0 0 0 0 0
 50 1 1 0 0 200 0 0 0 0 1 3 0 5 7 10 25 26 25 16 18 14 12 10 8 8 3 5 2 0 1 0 1 0 0 0 0 0
 51 1 1 0 0 200 1 0 0 0 2 1 2 6 4 4 11 14 20 25 29 12 24 9 5 9 13 4 3 1 1 0 0 0 0 0 0 0
 52 1 1 0 0 200 0 1 0 0 3 6 5 6 6 12 10 15 25 16 19 21 11 8 7 10 5 8 2 3 0 1 0 0 0 0 0 0
 53 1 1 0 0 200 0 0 1 1 1 4 3 7 11 10 16 17 15 23 20 21 17 10 4 6 4 4 3 1 0 0 1 0 0 0 0 0
 54 1 1 0 0 200 1 1 0 0 1 1 5 9 10 13 16 19 18 13 25 19 16 9 5 5 4 4 2 1 2 1 0 0 0 0 0 0
 55 1 1 0 0 200 0 0 0 2 1 3 4 7 12 13 18 24 17 15 13 15 16 16 5 4 7 4 1 1 1 1 0 0 0 0 0 0
 56 1 1 0 0 200 0 0 1 0 1 0 4 13 15 15 12 11 29 25 21 12 12 8 8 2 2 4 1 3 0 0 0 0 1 0 0 0
 57 1 1 0 0 200 0 0 1 2 6 3 1 5 9 7 19 25 30 15 16 12 10 11 9 5 8 1 2 3 0 0 0 0 0 0 0 0
 58 1 1 0 0 200 1 0 0 1 3 4 7 11 8 16 24 17 20 11 19 9 16 10 8 6 4 3 1 0 1 0 0 0 0 0 0 0
 59 1 1 0 0 200 0 0 0 0 0 5 6 10 14 11 12 25 18 20 18 15 18 8 6 5 4 1 3 0 0 0 1 0 0 0 0 0
 60 1 1 0 0 200 1 0 0 0 1 2 4 9 14 11 17 26 32 25 16 12 12 6 4 2 2 2 0 1 0 1 0 0 0 0 0 0
 61 1 1 0 0 200 0 1 0 1 2 7 6 8 8 11 19 18 27 29 15 12 15 5 4 3 6 3 0 0 0 0 0 0 0 0 0 0
 62 1 1 0 0 200 1 0 0 2 3 5 6 3 10 11 11 14 15 34 20 21 16 11 11 4 1 1 0 0 0 0 0 0 0 0 0 0
 63 1 1 0 0 200 0 0 0 1 1 2 2 9 15 21 18 24 21 22 13 14 12 6 8 5 2 2 0 1 0 1 0 0 0 0 0 0
 64 1 1 0 0 200 1 0 1 1 0 2 5 10 12 15 17 20 18 17 19 16 11 12 6 6 6 1 3 1 0 0 0 0 0 0 0 0
 65 1 1 0 0 200 0 0 0 2 0 0 5 6 10 10 24 22 28 22 19 12 13 9 8 4 1 0 4 0 1 0 0 0 0 0 0 0
 66 1 1 0 0 200 0 0 0 1 1 6 8 3 7 5 14 21 18 20 31 18 17 8 8 3 6 3 2 0 0 0 0 0 0 0 0 0
 67 1 1 0 0 200 0 0 0 0 1 6 9 16 19 6 9 7 15 22 26 18 22 10 4 5 1 2 1 1 0 0 0 0 0 0 0 0
 68 1 1 0 0 200 1 1 1 2 5 10 1 4 10 14 19 22 21 16 13 13 17 13 8 3 2 2 0 2 0 0 0 0 0 0 0 0
 69 1 1 0 0 200 0 0 0 2 5 3 11 9 18 19 17 19 20 14 13 14 7 12 6 4 3 2 2 0 0 0 0 0 0 0 0 0
 70 1 1 0 0 200 0 0 0 0 2 2 4 15 18 19 26 26 23 10 18 10 3 9 5 4 2 2 2 0 0 0 0 0 0 0 0 0
 71 1 1 0 0 200 0 0 0 0 0 1 2 4 7 21 26 30 29 26 17 12 10 6 5 1 1 1 1 0 0 0 0 0 0 0 0 0
 72 1 1 0 0 200 0 0 1 1 1 2 0 1 3 5 13 27 28 29 26 22 11 11 5 7 6 0 0 1 0 0 0 0 0 0 0 0
 73 1 1 0 0 200 0 0 0 0 1 2 1 2 1 6 7 16 18 33 24 27 22 18 7 5 5 2 1 2 0 0 0 0 0 0 0 0
 74 1 1 0 0 200 1 0 0 0 0 2 1 5 6 3 7 4 17 18 28 31 22 21 20 2 8 2 1 1 0 0 0 0 0 0 0 0
 75 1 1 0 0 200 0 0 0 0 1 4 3 5 6 7 11 14 11 16 19 13 24 17 25 14 6 1 2 1 0 0 0 0 0 0 0 0
 76 1 1 0 0 200 0 0 1 0 0 0 2 5 10 7 12 11 16 17 18 22 11 18 27 7 6 2 6 1 0 1 0 0 0 0 0 0
 77 1 1 0 0 200 0 0 0 0 1 6 1 3 7 7 6 12 25 18 23 14 10 17 16 11 7 7 6 2 1 0 0 0 0 0 0 0
 78 1 1 0 0 200 0 0 0 1 1 1 2 3 3 5 8 16 14 23 15 18 16 16 19 14 12 4 6 1 1 1 0 0 0 0 0 0
 79 1 1 0 0 200 0 0 0 0 1 1 1 5 2 17 17 14 9 18 19 18 18 17 13 11 5 4 6 3 1 0 0 0 0 0 0 0
 80 1 1 0 0 200 0 1 0 0 2 1 1 0 7 8 11 15 16 16 25 12 23 13 17 11 6 7 6 0 2 0 0 0 0 0 0 0
 81 1 1 0 0 200 0 1 1 1 3 6 2 3 1 4 6 16 11 18 21 19 12 13 20 19 9 4 4 3 2 1 0 0 0 0 0 0
 82 1 1 0 0 200 0 1 0 2 2 5 6 16 7 10 7 10 11 10 18 17 23 19 12 9 5 7 3 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 200 0 0 0 1 2 3 2 8 15 6 19 16 18 10 16 13 22 12 10 10 6 5 1 1 1 2 1 0 0 0 0 0
 84 1 1 0 0 200 0 0 0 0 0 1 4 12 5 13 16 22 20 22 13 11 9 13 12 8 9 2 8 0 0 0 0 0 0 0 0 0
 85 1 1 0 0 200 0 0 0 0 1 0 1 3 4 7 19 16 18 22 30 18 14 10 6 9 6 7 3 1 2 1 1 1 0 0 0 0
 86 1 1 0 0 200 0 1 0 0 2 4 3 5 5 5 10 14 28 20 28 16 19 15 9 3 7 3 2 1 0 0 0 0 0 0 0 0
 87 1 1 0 0 200 0 0 0 0 1 3 3 11 6 11 12 10 17 15 20 23 23 13 10 10 4 4 3 0 1 0 0 0 0 0 0 0
 88 1 1 0 0 200 0 1 0 0 2 1 2 7 8 13 9 12 20 14 16 19 25 15 14 6 3 4 5 4 0 0 0 0 0 0 0 0
 89 1 1 0 0 200 0 0 0 0 1 1 3 3 12 12 18 17 17 12 13 16 16 12 15 9 7 8 3 4 1 0 0 0 0 0 0 0
 90 1 1 0 0 200 0 0 0 0 1 0 3 5 3 11 13 18 21 25 15 13 16 16 11 8 8 4 4 2 2 1 0 0 0 0 0 0
 91 1 1 0 0 200 1 0 0 0 0 0 2 3 5 11 10 16 11 24 28 22 21 14 8 7 4 4 5 2 0 2 0 0 0 0 0 0
 92 1 1 0 0 200 0 0 0 0 1 3 1 1 6 6 8 15 18 25 32 21 17 12 12 8 4 6 2 1 1 0 0 0 0 0 0 0
 93 1 1 0 0 200 1 1 0 1 0 1 3 5 5 6 6 10 9 14 22 23 18 18 18 11 13 5 3 2 4 1 0 0 0 0 0 0
 94 1 1 0 0 200 1 0 0 0 1 2 1 4 6 11 13 12 16 13 18 19 19 19 11 15 6 4 2 5 2 0 0 0 0 0 0 0
 95 1 1 0 0 200 0 2 0 0 1 3 2 8 4 9 11 11 19 13 12 13 16 15 12 15 11 12 5 3 2 1 0 0 0 0 0 0
 96 1 1 0 0 200 0 0 0 1 10 8 5 5 7 5 13 17 17 16 19 13 15 12 7 4 10 7 5 2 1 0 0 1 0 0 0 0
 97 1 1 0 0 200 0 1 0 0 0 2 7 21 19 15 8 10 16 11 23 10 6 9 13 9 10 2 1 2 4 1 0 0 0 0 0 0
 98 1 1 0 0 200 0 0 0 0 2 1 1 3 16 27 21 29 19 4 15 11 7 13 5 3 9 4 4 2 2 1 0 0 1 0 0 0
 99 1 1 0 0 200 1 0 0 0 2 2 2 1 7 13 14 28 30 16 11 13 14 13 13 8 5 3 2 1 0 0 1 0 0 0 0 0
 100 1 1 0 0 200 0 1 0 0 0 0 1 5 7 6 8 12 32 22 28 21 12 12 11 10 4 4 0 2 1 1 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 83.9067 0.1
2 1 1 97.3541 0.1
3 1 1 112.943 0.1
4 1 1 130.856 0.1
5 1 1 149.506 0.1
6 1 1 168.005 0.1
7 1 1 186.963 0.1
8 1 1 206.706 0.1
9 1 1 226.471 0.1
10 1 1 244.747 0.1
11 1 1 259.708 0.1
12 1 1 270.046 0.1
13 1 1 275.587 0.1
14 1 1 277.112 0.1
15 1 1 276.635 0.1
16 1 1 280.51 0.1
17 1 1 297.77 0.1
18 1 1 327.654 0.1
19 1 1 357.703 0.1
20 1 1 377.955 0.1
21 1 1 388.804 0.1
22 1 1 395.555 0.1
23 1 1 401.194 0.1
24 1 1 405.686 0.1
25 1 1 408.988 0.1
26 1 1 400.744 0.1
27 1 1 930.852 0.1
28 1 1 1463.48 0.1
29 1 1 1999.42 0.1
30 1 1 2508.02 0.1
31 1 1 2945.48 0.1
32 1 1 3290.94 0.1
33 1 1 3546.59 0.1
34 1 1 3715.5 0.1
35 1 1 3787.32 0.1
36 1 1 3749.4 0.1
37 1 1 3607.9 0.1
38 1 1 3408.58 0.1
39 1 1 3236.67 0.1
40 1 1 3156.09 0.1
41 1 1 3196.38 0.1
42 1 1 3445.04 0.1
43 1 1 3931.1 0.1
44 1 1 4387.89 0.1
45 1 1 4536.59 0.1
46 1 1 4417.43 0.1
47 1 1 4164.54 0.1
48 1 1 3874.16 0.1
49 1 1 3652.11 0.1
50 1 1 3471.95 0.1
51 1 1 3233.88 0.1
52 1 1 2961.64 0.1
53 1 1 2731.82 0.1
54 1 1 2572.51 0.1
55 1 1 2473.25 0.1
56 1 1 2338.3 0.1
57 1 1 2246.45 0.1
58 1 1 2179.28 0.1
59 1 1 2157.93 0.1
60 1 1 2213.51 0.1
61 1 1 2278.25 0.1
62 1 1 2223.81 0.1
63 1 1 2212.56 0.1
64 1 1 2264.92 0.1
65 1 1 2289.94 0.1
66 1 1 2222.56 0.1
67 1 1 2117.65 0.1
68 1 1 2083.41 0.1
69 1 1 2204.83 0.1
70 1 1 2526.27 0.1
71 1 1 2887.25 0.1
72 1 1 3013.75 0.1
73 1 1 2835.72 0.1
74 1 1 2502.11 0.1
75 1 1 2172.17 0.1
76 1 1 1899.27 0.1
77 1 1 1666.67 0.1
78 1 1 1457.92 0.1
79 1 1 1271.87 0.1
80 1 1 1100.9 0.1
81 1 1 1066.72 0.1
82 1 1 1050.04 0.1
83 1 1 1080.17 0.1
84 1 1 1146.6 0.1
85 1 1 1214.36 0.1
86 1 1 1256.91 0.1
87 1 1 1280.37 0.1
88 1 1 1312.83 0.1
89 1 1 1362.59 0.1
90 1 1 1407.27 0.1
91 1 1 1418.87 0.1
92 1 1 1388.7 0.1
93 1 1 1334.5 0.1
94 1 1 1281.48 0.1
95 1 1 1237.28 0.1
96 1 1 1209.22 0.1
97 1 1 1245.41 0.1
98 1 1 1386.5 0.1
99 1 1 1572.9 0.1
100 1 1 1710.84 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 46817.2 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200  0.169841 0.449404 0.174736 0.251671 0.792442 1.36764 2.69917 5.0101 6.26084 6.62874 7.76487 9.51505 11.4119 13.2143 14.5961 15.4269 15.7627 15.9225 15.6699 14.6619 12.8044 10.3162 7.61546 5.12845 3.1395 1.74107 0.871504 0.392286 0.158218 0.05699 0.0182805 0.0068897
 27 1 1 0 0 200  0.0363334 0.0989615 0.110066 0.669335 1.98673 2.29734 1.95777 3.1402 5.49976 8.493 11.0125 11.9717 12.3291 13.1152 14.0913 14.7385 14.8695 14.8162 14.4895 13.62 12.0476 9.86276 7.39041 5.03442 3.1043 1.72721 0.864771 0.388569 0.156274 0.0561089 0.0179411 0.00673747
 28 1 1 0 0 200  0.0747404 0.197933 0.0813006 0.151417 0.522697 1.20989 3.09331 5.91686 7.17182 7.50662 9.53365 12.6835 14.9183 15.4467 15.0109 14.5101 14.0852 13.7896 13.3588 12.5208 11.1214 9.19292 6.97297 4.80688 2.99295 1.67647 0.842472 0.378981 0.152307 0.0545802 0.0174083 0.00651443
 29 1 1 0 0 200  0.0814459 0.216337 0.105092 0.299843 0.890214 1.08252 1.18888 2.53903 5.47128 9.545 12.8001 14.0769 14.9442 16.187 16.6757 15.8736 14.4707 13.3991 12.591 11.6563 10.329 8.57001 6.55044 4.5588 2.86569 1.61842 0.818308 0.369545 0.148786 0.0533263 0.0169905 0.00634231
 30 1 1 0 0 200  0.0592565 0.157931 0.0902565 0.33637 1.01857 1.35667 1.7395 2.92826 4.00428 5.60555 9.25153 14.0468 17.5635 18.6689 18.2216 17.134 15.5708 14.0091 12.6166 11.3026 9.85204 8.13805 6.23525 4.3655 2.76503 1.57374 0.801294 0.36389 0.147088 0.0528401 0.0168505 0.00628612
 31 1 1 0 0 200  0.0648016 0.172179 0.085031 0.252418 0.778787 1.16209 1.89294 3.51986 4.92834 6.16706 8.03902 10.7123 14.3988 18.1181 19.9455 19.2933 17.1974 15.0788 13.2126 11.4788 9.7424 7.91658 6.02743 4.22216 2.68564 1.53769 0.787943 0.359974 0.146246 0.0527434 0.0168644 0.00630106
 32 1 1 0 0 200  0.035269 0.0943526 0.0628278 0.277892 0.844867 1.14616 1.57778 2.95924 4.69633 6.78089 9.17063 11.227 13.2713 15.7874 18.2197 19.3218 18.4419 16.4834 14.2266 12.0277 9.93332 7.89506 5.92454 4.12162 2.61892 1.50338 0.773821 0.355361 0.145115 0.0525772 0.0168755 0.00632676
 33 1 1 0 0 200  0.0618039 0.163829 0.0711697 0.156527 0.491831 0.815064 1.55869 3.05596 4.4989 6.17792 8.73724 11.5762 14.0512 15.9629 17.3915 18.2555 18.1007 17.0152 15.136 12.8132 10.4 8.08348 5.95131 4.08676 2.57875 1.47715 0.761219 0.350674 0.143788 0.0523234 0.0168637 0.00635099
 34 1 1 0 0 200  0.0301674 0.0808701 0.0579866 0.273124 0.81871 1.02031 1.14116 2.08849 3.66305 5.89584 8.61003 11.2563 13.8492 16.2013 17.7593 18.2874 17.8864 16.9977 15.5267 13.4431 10.9828 8.46417 6.13487 4.14824 2.58743 1.47187 0.756262 0.348393 0.143132 0.0522448 0.0168986 0.00639384
 35 1 1 0 0 200  0.0518929 0.137591 0.0606601 0.139499 0.443524 0.768621 1.53304 2.91278 3.91908 4.93405 7.12221 10.2522 13.4726 16.1244 17.8755 18.5625 18.1676 17.2314 15.8225 13.8794 11.4881 8.901 6.42483 4.29987 2.65076 1.49308 0.762029 0.349805 0.143572 0.0524519 0.0170013 0.0064568
 36 1 1 0 0 200  0.106796 0.28297 0.119702 0.239841 0.713144 0.8991 1.04879 1.98786 3.55623 5.6582 7.87999 9.83801 12.159 14.9891 17.4055 18.5834 18.415 17.5646 16.1916 14.2824 11.9139 9.29762 6.73168 4.49384 2.7513 1.53631 0.777743 0.354802 0.145054 0.0528991 0.0171451 0.00652338
 37 1 1 0 0 200  0.160177 0.425012 0.19511 0.491669 1.45936 1.77115 1.74757 2.6441 3.56491 4.63611 6.80149 9.67817 12.389 14.5896 16.4038 17.687 17.9848 17.5009 16.3157 14.4913 12.1592 9.54218 6.93853 4.63907 2.83474 1.57519 0.792266 0.359052 0.145972 0.0530194 0.0171433 0.00651794
 38 1 1 0 0 200  0.0727471 0.195255 0.146054 0.712241 2.14673 2.74808 3.17362 5.02821 6.19017 6.43353 7.28759 8.81176 10.9204 13.3678 15.3824 16.4874 16.6885 16.3991 15.5326 13.9807 11.8377 9.34864 6.82918 4.57935 2.8005 1.55374 0.778655 0.351144 0.141998 0.0513225 0.0165288 0.00626442
 39 1 1 0 0 200  0.26089 0.690018 0.260515 0.319116 1.00823 1.79799 3.71541 7.1299 9.41961 10.4787 11.4791 11.7271 11.6325 12.1951 13.3066 14.2799 14.5935 14.4212 13.7544 12.5105 10.7111 8.53585 6.27585 4.22627 2.59074 1.43818 0.719885 0.323757 0.130425 0.0469364 0.0150519 0.00567843
 40 1 1 0 0 200  0.440224 1.16672 0.501028 1.05018 3.07458 3.48084 2.69344 4.08421 7.31004 11.6469 15.4742 16.7604 15.981 14.5381 13.2658 12.5403 12.1658 11.9218 11.4339 10.4862 9.05932 7.28488 5.39839 3.65728 2.25101 1.2524 0.627289 0.281889 0.113329 0.0406646 0.0129952 0.00487968
 41 1 1 0 0 200  0.0911565 0.248149 0.272766 1.65357 4.95363 6.05485 6.03861 8.69601 9.92725 9.60094 11.5861 15.3551 17.9354 17.7545 15.5106 12.865 10.8387 9.69815 8.96789 8.17449 7.09788 5.75207 4.29564 2.92996 1.81303 1.01253 0.508282 0.228603 0.0918719 0.0329189 0.0104967 0.00392689
 42 1 1 0 0 200  0.0381795 0.102262 0.0714549 0.339401 1.17999 2.70506 6.91715 13.4529 16.6981 16.5514 16.3228 15.7123 15.3151 15.68 15.3082 13.353 10.6825 8.55879 7.16529 6.17516 5.25398 4.24931 3.18846 2.1884 1.36208 0.764321 0.385035 0.173564 0.0698284 0.0250214 0.00797162 0.00297551
 43 1 1 0 0 200  0.131599 0.347995 0.129727 0.146224 0.458198 0.819787 1.92065 5.0467 10.9075 18.9331 24.8644 25.0217 21.5665 17.9005 15.0559 12.7306 10.4246 8.28836 6.5161 5.17693 4.14663 3.25363 2.41802 1.66035 1.03762 0.585005 0.295943 0.133843 0.0539715 0.019365 0.00617219 0.00230223
 44 1 1 0 0 200  0.0578649 0.155155 0.112117 0.529922 1.56358 1.7543 1.30237 1.99644 4.15415 8.75359 16.4181 24.7417 29.2002 27.4606 21.8406 16.0281 11.6498 8.73461 6.64996 5.0522 3.81427 2.83909 2.04079 1.38012 0.859049 0.484984 0.246145 0.111711 0.0451828 0.0162489 0.00518687 0.00193616
 45 1 1 0 0 200  0.0392684 0.104808 0.0637278 0.259009 0.828718 1.43101 2.79673 5.02087 5.81933 5.87548 8.43709 14.4657 22.2113 27.9155 28.2192 23.3741 16.7346 11.4116 7.87101 5.56307 3.97081 2.80715 1.92964 1.26404 0.772715 0.432921 0.219397 0.0997187 0.0404344 0.0145789 0.00466398 0.00174429
 46 1 1 0 0 200  0.191308 0.505776 0.185641 0.186369 0.567336 0.893046 1.65526 3.5771 6.24995 9.31127 11.654 12.8683 15.3342 20.1413 24.5318 25.063 21.2402 15.7382 10.7154 7.03679 4.61318 3.03644 1.97449 1.23962 0.735085 0.403994 0.202653 0.0917338 0.0371786 0.013422 0.00430202 0.00161269
 47 1 1 0 0 200  0.119747 0.320079 0.206168 0.877381 2.58245 2.85988 1.93753 2.48556 4.18003 6.98723 10.9699 14.7911 17.2448 18.6164 20.034 21.2066 20.4501 17.5103 13.2758 9.08395 5.80222 3.57643 2.16402 1.27938 0.725585 0.386543 0.189974 0.084948 0.0342109 0.0123202 0.00394817 0.00148211
 48 1 1 0 0 200  0.0580856 0.155758 0.113014 0.542545 1.70695 2.72491 4.79757 8.33113 9.20827 7.83024 8.40339 11.4425 15.2028 18.0528 19.2012 18.9557 17.8007 16.0095 13.3188 9.99044 6.75561 4.19133 2.44355 1.36276 0.729492 0.371021 0.176365 0.0771083 0.0306115 0.0109311 0.00348767 0.001307
 49 1 1 0 0 200  0.118826 0.314782 0.131698 0.257517 0.818733 1.44606 3.06695 6.54262 10.6337 14.6417 16.8425 15.7716 14.2658 14.7926 16.1928 16.6235 15.6442 13.9833 11.88 9.39091 6.77127 4.42101 2.62929 1.44409 0.742457 0.359563 0.163435 0.068996 0.0267145 0.00938037 0.00296092 0.00110153
 50 1 1 0 0 200  0.0989582 0.26354 0.145408 0.51482 1.53292 1.8602 1.92379 3.51042 6.57172 11.3747 17.1786 21.3227 21.9549 19.5913 16.6344 14.7276 13.4517 12.1601 10.491 8.47856 6.33284 4.31893 2.67109 1.4991 0.76858 0.363064 0.158937 0.0644846 0.0241159 0.00824245 0.0025516 0.000934497
 51 1 1 0 0 200  0.153349 0.406772 0.183654 0.446608 1.36605 1.97192 2.98689 5.22875 6.74102 8.11629 11.7369 17.196 22.0589 23.8183 21.8148 17.7752 13.9246 11.3298 9.45749 7.69439 5.87414 4.12448 2.63508 1.52348 0.796294 0.377351 0.162915 0.0643544 0.0232942 0.00770999 0.00232181 0.000828432
 52 1 1 0 0 200  0.169051 0.449332 0.225873 0.689214 2.06484 2.62088 3.02275 5.1761 7.69093 10.1797 12.7493 14.9114 17.5432 20.5644 21.8656 20.0963 16.2217 12.3898 9.42917 7.22248 5.42122 3.84575 2.51234 1.49036 0.797644 0.38439 0.166946 0.0655151 0.0232971 0.00751973 0.00220251 0.000760467
 53 1 1 0 0 200  0.117518 0.313545 0.187621 0.741003 2.25259 3.05913 4.11335 7.04652 9.28443 10.8463 13.4083 15.988 17.6439 18.5293 18.8264 18.1278 15.9409 12.9159 9.8134 7.16744 5.10748 3.52056 2.29212 1.37679 0.750985 0.368873 0.162595 0.064284 0.0228219 0.00728805 0.00209661 0.000703183
 54 1 1 0 0 200  0.237922 0.630259 0.263012 0.506707 1.56168 2.39099 4.06869 7.68047 10.8224 13.3549 16.0106 17.5764 18.151 18.2653 17.6373 16.1706 14.0684 11.7576 9.307 6.91794 4.85618 3.24386 2.05735 1.22261 0.66924 0.33265 0.148767 0.0595736 0.0213232 0.0068217 0.00195229 0.000644104
 55 1 1 0 0 200  0.0987999 0.265285 0.201002 0.987859 2.94735 3.55276 3.50411 5.75223 9.13026 13.2345 17.5547 20.126 20.6212 19.6677 17.7452 15.3406 12.781 10.4501 8.29427 6.27253 4.46363 2.97605 1.85866 1.08465 0.586862 0.291118 0.130942 0.0529514 0.0191482 0.00617472 0.00177383 0.000583157
 56 1 1 0 0 200  0.297101 0.786054 0.303517 0.422448 1.33986 2.38904 4.89054 9.12626 11.4039 12.2897 15.0152 18.7356 21.2304 21.3325 19.1819 15.8694 12.4601 9.68043 7.44795 5.57207 3.97561 2.66589 1.66557 0.964968 0.516338 0.253727 0.113647 0.0460302 0.0167418 0.00544006 0.0015741 0.000520219
 57 1 1 0 0 200  0.242411 0.645326 0.349707 1.20423 3.55531 4.08157 3.37203 5.32436 9.3781 14.4968 18.6401 19.9453 19.9938 20.0183 19.0067 16.3352 12.7662 9.55088 7.01 5.0526 3.53129 2.35084 1.46735 0.849286 0.452563 0.220879 0.0982503 0.0396145 0.0143956 0.00468961 0.00136348 0.000453631
 58 1 1 0 0 200  0.165379 0.440867 0.254435 0.962667 2.95161 4.19858 6.13625 10.3249 12.1157 12.015 14.4978 18.7032 21.277 20.8915 18.546 15.5249 12.2919 9.3034 6.74227 4.70716 3.17809 2.0623 1.26898 0.729682 0.387481 0.18844 0.0834313 0.0334713 0.0121147 0.00393906 0.00114592 0.000382718
 59 1 1 0 0 200  0.135456 0.360429 0.191124 0.642098 1.98459 2.97196 4.91087 9.37878 13.6797 17.1501 19.5702 19.5696 18.8959 18.8286 17.9106 15.3047 11.8744 8.81782 6.34758 4.39583 2.91176 1.84039 1.10479 0.624061 0.327844 0.158443 0.0698447 0.0279088 0.0100616 0.0032603 0.000946317 0.000315973
 60 1 1 0 0 200  0.238772 0.632639 0.267289 0.535466 1.62579 2.30441 3.47689 6.68962 10.6017 15.3059 20.5041 23.5746 23.468 21.0751 17.8407 14.6512 11.5222 8.66203 6.2014 4.23865 2.76835 1.7207 1.012 0.559618 0.288719 0.137716 0.0601842 0.0239099 0.00858277 0.00277098 0.000801783 0.000266996
 61 1 1 0 0 200  0.251458 0.668091 0.328818 0.963017 2.8631 3.47385 3.47135 5.55286 8.32781 11.8034 16.668 21.4033 24.3044 24.2066 21.1395 16.5992 12.1978 8.81008 6.24671 4.2628 2.76466 1.69608 0.981176 0.532707 0.269746 0.126492 0.0545186 0.0214381 0.00763993 0.00245384 0.000707237 0.00023463
 62 1 1 0 0 200  0.214317 0.570269 0.302435 1.01231 3.06453 4.09815 5.28675 8.73827 10.847 11.5963 13.8683 17.2796 20.4876 22.2675 21.4852 18.1882 13.6939 9.66256 6.57843 4.35335 2.77867 1.68798 0.965665 0.516791 0.257391 0.118662 0.0503327 0.0195204 0.00687966 0.00219108 0.000627577 0.000207048
 63 1 1 0 0 200  0.0909511 0.243838 0.175564 0.833267 2.55414 3.60371 5.28955 9.51072 13.0607 15.4464 17.5702 18.2537 18.2475 18.5911 18.4196 16.7022 13.535 10.0512 6.94665 4.52837 2.81408 1.66953 0.939063 0.495831 0.243639 0.11068 0.0462311 0.0176643 0.00614218 0.00193392 0.000548825 0.000179517
 64 1 1 0 0 200  0.0952144 0.252919 0.123273 0.35901 1.1453 1.99408 4.07203 8.17143 12.1287 16.0146 20.0685 22.09 21.6353 19.7686 17.3749 14.8894 12.2252 9.53204 6.92933 4.66282 2.91725 1.70974 0.942675 0.488146 0.235945 0.105641 0.0435121 0.0163931 0.00562196 0.00174737 0.000490206 0.00015845
 65 1 1 0 0 200  0.364705 0.964385 0.358641 0.393717 1.16712 1.57365 2.19107 4.44274 8.09347 13.2867 19.0593 23.1542 24.6988 23.6017 20.3425 16.219 12.355 9.30782 6.83382 4.74925 3.06641 1.82873 1.009 0.516637 0.245639 0.108144 0.0438594 0.016291 0.00551224 0.00169123 0.000468664 0.000149395
 66 1 1 0 0 200  0.119744 0.322909 0.27926 1.49676 4.41744 4.92359 3.40092 4.11764 5.87485 8.48318 13.1078 18.8049 23.4113 25.027 23.2122 19.0697 14.2664 10.2467 7.20591 4.92677 3.21012 1.95387 1.09745 0.566313 0.268421 0.116907 0.0467388 0.0171033 0.0057053 0.00172735 0.000472734 0.000148506
 67 1 1 0 0 200  0.605712 1.60092 0.576538 0.499362 1.59699 3.10301 6.85387 12.4887 13.82 11.3274 10.8094 13.1056 16.6896 19.9618 21.0474 19.161 15.2555 11.1734 7.74185 5.14073 3.27531 1.98178 1.12147 0.585753 0.280131 0.122242 0.0486186 0.01761 0.00580003 0.00173276 0.000468112 0.000144835
 68 1 1 0 0 200  0.426187 1.1348 0.62098 2.16677 6.3565 6.97128 4.55568 6.09022 11.0948 17.2675 20.6978 18.942 15.7449 14.7339 15.15 14.8878 13.0628 10.3599 7.5176 5.05556 3.19011 1.89936 1.06352 0.554776 0.266699 0.117139 0.0467556 0.0169128 0.00553652 0.00163832 0.000437582 0.000133371
 69 1 1 0 0 200  0.0737152 0.200997 0.229214 1.41812 4.36979 6.25906 9.21669 15.2207 16.6746 14.1652 15.0896 18.7273 20.1507 17.8672 14.2227 11.4726 9.61166 7.97693 6.19639 4.40539 2.86774 1.72189 0.959401 0.496482 0.23758 0.10437 0.0417852 0.0151592 0.0049651 0.00146497 0.000388865 0.000117196
 70 1 1 0 0 200  0.0325132 0.0869336 0.0569295 0.255205 0.895759 2.12646 5.71539 12.0497 17.7605 22.0644 24.117 22.0408 18.88 17.1114 15.1601 12.0606 8.85742 6.54814 4.92509 3.59763 2.44802 1.5244 0.866773 0.451296 0.215575 0.0943659 0.0377074 0.013684 0.00448809 0.00132528 0.000351411 0.00010537
 71 1 1 0 0 200  0.0558159 0.147865 0.0619293 0.121213 0.380866 0.652884 1.47127 3.95593 9.03345 16.9933 25.0153 29.0255 27.9803 23.4374 17.994 13.4 9.75615 6.95621 4.86593 3.35799 2.25477 1.43044 0.83671 0.445943 0.215901 0.0949667 0.0379468 0.0137515 0.0045062 0.00133058 0.000352884 0.000105694
 72 1 1 0 0 200  0.0986792 0.261509 0.111807 0.231587 0.684997 0.832221 0.86546 1.62352 3.38655 7.28217 14.4052 23.4081 30.3085 31.4666 26.9703 19.9531 13.4765 8.93409 5.93242 3.9022 2.50641 1.54935 0.904475 0.48889 0.241146 0.107717 0.0434468 0.0158088 0.00518474 0.00153034 0.000405663 0.000121444
 73 1 1 0 0 200  0.0836535 0.222811 0.123689 0.441903 1.31817 1.60887 1.61084 2.41527 3.14903 4.14561 7.13909 13.076 21.2714 28.6299 31.1816 27.6527 20.5874 13.7937 8.73897 5.39593 3.27739 1.94074 1.10163 0.58861 0.291092 0.131449 0.0537069 0.0197528 0.0065237 0.00193243 0.000512904 0.000153558
 74 1 1 0 0 200  0.100633 0.267348 0.131116 0.383682 1.17798 1.71256 2.62845 4.59929 5.72419 5.96795 6.85422 8.96733 13.187 19.5506 25.5663 27.7563 24.8524 19.1288 13.0472 8.12464 4.76024 2.67751 1.4513 0.750645 0.364683 0.163833 0.0671905 0.0249209 0.00830815 0.00248067 0.00066207 0.000198913
 75 1 1 0 0 200  0.0444603 0.119366 0.0901651 0.443633 1.34819 1.81529 2.44268 4.46049 6.73386 8.93974 10.8164 11.5245 12.1849 14.4687 18.3316 21.8628 22.683 20.4113 15.9696 10.9725 6.74716 3.79885 1.99853 0.993384 0.4662 0.204637 0.0829578 0.0306941 0.0102693 0.00308632 0.00082963 0.00025109
 76 1 1 0 0 200  0.146402 0.387294 0.148307 0.197391 0.626398 1.1286 2.38058 4.72877 6.82575 8.97281 11.9003 14.4137 15.6053 15.8386 16.2347 17.3714 18.3345 18.0695 15.9196 12.307 8.34855 5.01945 2.71561 1.34341 0.615199 0.262095 0.1036 0.0376997 0.0125119 0.00375505 0.00101233 0.000308393
 77 1 1 0 0 200  0.0775686 0.207553 0.139103 0.615861 1.82126 2.08356 1.70068 2.7133 5.00492 8.37454 12.1119 15.0701 17.1135 18.1178 17.9151 17.0793 16.2629 15.6277 14.4005 12.0906 9.00718 5.90756 3.42133 1.76503 0.820195 0.346905 0.134467 0.0478513 0.0155867 0.00462006 0.00123786 0.00037687
 78 1 1 0 0 200  0.043123 0.115301 0.0752626 0.329139 1.04209 1.71764 3.17633 5.68972 6.76629 6.9723 9.10909 13.0175 16.7752 18.9637 19.2812 18.1887 16.4065 14.7871 13.2348 11.3247 8.90502 6.26817 3.90232 2.14423 1.04386 0.453338 0.176983 0.0625138 0.0200529 0.00584402 0.00154349 0.000464772
 79 1 1 0 0 200  0.0728889 0.193206 0.0837645 0.183055 0.574094 0.950117 1.87562 4.0347 6.85907 10.0419 12.5592 13.6085 14.8305 17.0686 18.8096 18.7328 17.0585 14.9964 12.958 10.8783 8.63859 6.30363 4.1349 2.40769 1.23848 0.562981 0.226961 0.0815527 0.0262524 0.00760118 0.00198379 0.000587945
 80 1 1 0 0 200  0.312337 0.825797 0.304238 0.311694 0.909836 1.13241 1.26334 2.33325 4.24941 7.3571 11.5927 15.5128 17.819 18.4772 18.4551 18.1517 17.0781 15.3679 13.2523 10.9634 8.63076 6.34898 4.27412 2.58821 1.39398 0.66389 0.279133 0.103733 0.0341699 0.0100123 0.00261856 0.000770283
 81 1 1 0 0 200  0.177747 0.474991 0.302921 1.27613 3.75687 4.16284 2.76526 3.10435 4.00072 5.13822 7.7578 11.7939 16.0911 19.093 19.8964 18.9064 17.0732 15.2158 13.2347 11.0133 8.66259 6.37361 4.32935 2.67571 1.48543 0.733828 0.32077 0.123744 0.0421165 0.0126625 0.00337024 0.00100078
 82 1 1 0 0 200  0.195429 0.518948 0.248477 0.695217 2.17516 3.46503 6.08261 10.5422 11.5063 9.06093 7.96062 9.03466 11.5183 14.7084 17.1801 17.7516 16.4852 14.5478 12.468 10.3265 8.13948 6.01101 4.10562 2.5639 1.44828 0.73306 0.330034 0.131499 0.0462361 0.0143298 0.00391534 0.00119079
 83 1 1 0 0 200  0.0443744 0.120351 0.121316 0.709282 2.15286 2.86637 3.81235 7.23559 11.7465 16.2204 18.4309 16.386 13.145 12.0865 12.9321 13.9096 13.8293 12.8004 11.1576 9.2299 7.24519 5.3486 3.66656 2.30584 1.31666 0.676762 0.310881 0.126899 0.0458356 0.014609 0.00410255 0.00128649
 84 1 1 0 0 200  0.107172 0.283621 0.111364 0.170593 0.574402 1.25711 3.15982 6.46286 9.39313 12.681 17.5026 21.4694 21.8691 18.7675 14.869 12.4511 11.3728 10.6793 9.65424 8.19136 6.49573 4.80553 3.29808 2.08149 1.19664 0.621335 0.289321 0.120125 0.0442699 0.0144312 0.00415081 0.00134166
 85 1 1 0 0 200  0.163176 0.432572 0.18847 0.412941 1.2153 1.42482 1.34307 2.60252 5.57552 10.2547 15.4512 19.7389 22.779 23.5594 21.1386 16.7573 12.7189 10.245 8.75182 7.44528 6.00925 4.50627 3.11484 1.97394 1.1398 0.595625 0.279865 0.117573 0.0439588 0.0145732 0.0042716 0.00141713
 86 1 1 0 0 200  0.196066 0.520471 0.244771 0.652687 1.94481 2.40491 2.50278 3.77612 4.77449 5.97535 9.52652 15.155 20.6139 23.8005 23.8391 20.9836 16.5258 12.4388 9.4579 7.3979 5.78848 4.34048 3.02728 1.9345 1.124 0.590616 0.279274 0.118272 0.0446686 0.0149901 0.00445643 0.00150939
 87 1 1 0 0 200  0.113294 0.302565 0.18834 0.77691 2.34564 3.05663 3.71036 6.04807 7.6106 8.09477 9.17437 11.1978 14.6538 19.0051 21.9549 21.7698 18.7673 14.8243 11.1156 8.15065 5.94283 4.26492 2.92863 1.87201 1.09392 0.578493 0.27522 0.117298 0.0446252 0.0151062 0.00453726 0.00156099
 88 1 1 0 0 200  0.107966 0.286955 0.143976 0.441301 1.3784 2.17709 3.86515 7.25371 9.826 11.4215 13.0042 13.6999 14.0348 15.2751 17.2243 18.4491 17.6869 15.3068 12.1266 8.97027 6.33517 4.32937 2.85352 1.78294 1.03416 0.547527 0.2617 0.112175 0.0429383 0.0146328 0.00442846 0.00154129
 89 1 1 0 0 200  0.0581386 0.155329 0.0983042 0.413405 1.2591 1.73142 2.47983 4.84049 8.06915 12.0297 15.8995 17.8063 17.827 17.0525 16.2859 15.8317 15.1932 13.9659 11.9008 9.29578 6.70556 4.52996 2.89534 1.75095 0.992013 0.518931 0.247223 0.106163 0.0408117 0.013983 0.00425737 0.00149491
 90 1 1 0 0 200  0.0419342 0.111722 0.062853 0.23094 0.724672 1.16121 2.12684 4.16998 6.3039 9.0572 13.3108 17.8088 20.7372 21.0979 19.3732 16.9406 14.7177 12.9964 11.2678 9.2032 6.93186 4.79787 3.06848 1.82437 1.00949 0.517165 0.243011 0.103674 0.0398094 0.0136698 0.00417895 0.00147741
 91 1 1 0 0 200  0.147007 0.388803 0.146516 0.175963 0.533029 0.794525 1.33484 2.75867 4.76845 7.60247 11.2953 15.244 19.1346 21.9597 22.3427 20.2101 16.8715 13.8958 11.4822 9.30163 7.148 5.08927 3.32319 1.98788 1.09151 0.550516 0.254366 0.107064 0.0407648 0.013946 0.00426295 0.00151232
 92 1 1 0 0 200  0.0829765 0.221815 0.143456 0.613301 1.80997 2.04122 1.51707 2.06979 3.34282 5.39096 8.63923 12.6961 16.9202 20.4818 22.4132 21.9977 19.4167 16.0986 12.8927 10.0755 7.61276 5.44298 3.60836 2.19046 1.21135 0.609552 0.278991 0.115964 0.0436289 0.0147904 0.00449601 0.00159171
 93 1 1 0 0 200  0.129292 0.342841 0.151871 0.352759 1.10343 1.7766 3.17502 5.58819 6.3824 5.85699 6.73428 9.47697 13.3315 17.3712 20.4051 21.4241 20.174 17.6075 14.441 11.231 8.33069 5.87025 3.8798 2.36958 1.32195 0.669141 0.306349 0.126672 0.0472423 0.0158594 0.00477883 0.00167903
 94 1 1 0 0 200  0.0907369 0.24189 0.139633 0.526214 1.57793 1.99207 2.30327 4.17425 6.86052 9.73573 11.6649 11.7581 11.9259 13.8417 16.6693 18.6746 18.818 17.449 15.0036 12.003 8.97647 6.29217 4.12386 2.50769 1.40067 0.712024 0.327267 0.135471 0.0503937 0.0168212 0.00503104 0.00175091
 95 1 1 0 0 200  0.655838 1.73271 0.606056 0.378393 1.11823 1.67581 2.72991 4.97703 6.73992 8.40097 11.3273 14.3211 15.7237 15.5723 15.295 15.6876 16.0236 15.6489 14.213 11.8887 9.15866 6.51306 4.28075 2.59605 1.44575 0.734489 0.338123 0.140269 0.0522345 0.0174169 0.00519155 0.00179432
 96 1 1 0 0 200  0.0599618 0.169277 0.335035 2.40068 7.05833 7.57139 4.16119 3.95243 5.83854 8.32138 11.0539 13.2581 15.0362 16.1903 16.0914 15.0467 13.8879 13.069 12.0874 10.5178 8.42306 6.16655 4.1243 2.52043 1.40585 0.713644 0.328292 0.136223 0.0507698 0.0169375 0.00504561 0.00173812
 97 1 1 0 0 200  0.102287 0.270922 0.112491 0.226701 0.918549 2.9973 9.06831 17.0454 17.9226 12.7084 10.1799 11.3433 13.2048 14.3295 14.4499 13.6573 12.2604 10.9125 9.69975 8.4056 6.87389 5.17977 3.55451 2.21203 1.24682 0.635904 0.292945 0.121578 0.0453167 0.0151239 0.00450708 0.00155198
 98 1 1 0 0 200  0.109762 0.291286 0.134847 0.346676 1.0313 1.29852 1.75539 4.80987 12.0441 21.6762 26.4589 22.7272 16.5965 13.5581 12.7899 12.0959 10.8495 9.49492 8.19193 6.91588 5.6073 4.26472 2.98281 1.89462 1.08609 0.560387 0.259902 0.108216 0.0403863 0.0134832 0.00401842 0.00138343
 99 1 1 0 0 200  0.0476426 0.127567 0.0877502 0.399334 1.20455 1.55493 1.85654 3.16413 4.96943 8.81571 16.7202 25.6912 29.2659 25.3247 18.5097 13.4686 10.6718 9.00415 7.63174 6.31944 5.0388 3.80533 2.67277 1.71858 1.00038 0.523675 0.245658 0.103084 0.0386491 0.0129331 0.00385787 0.00132808
 100 1 1 0 0 200  0.123503 0.326837 0.128185 0.19246 0.603371 1.02034 1.98554 3.80295 5.23373 6.65902 9.73012 15.224 22.4814 27.875 27.4398 21.8186 15.2381 10.7328 8.11523 6.3928 4.98285 3.71511 2.59539 1.67237 0.981395 0.519587 0.24665 0.104591 0.0395353 0.0133049 0.00398279 0.00137398
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
