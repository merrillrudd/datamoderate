#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sat Apr 25 19:08:02 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-25 19:02:58
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 177.391 0.1
2 1 1 204.873 0.1
3 1 1 228.294 0.1
4 1 1 247.524 0.1
5 1 1 262.651 0.1
6 1 1 276.372 0.1
7 1 1 292.575 0.1
8 1 1 309.957 0.1
9 1 1 323.265 0.1
10 1 1 330.58 0.1
11 1 1 334.152 0.1
12 1 1 335.932 0.1
13 1 1 335.841 0.1
14 1 1 334.733 0.1
15 1 1 335.328 0.1
16 1 1 337.465 0.1
17 1 1 337.954 0.1
18 1 1 335.787 0.1
19 1 1 334.164 0.1
20 1 1 337.183 0.1
21 1 1 345.518 0.1
22 1 1 356.396 0.1
23 1 1 366.291 0.1
24 1 1 373.226 0.1
25 1 1 376.9 0.1
26 1 1 365.455 0.1
27 1 1 822.594 0.1
28 1 1 1246.1 0.1
29 1 1 1689.43 0.1
30 1 1 2175.39 0.1
31 1 1 2627.19 0.1
32 1 1 2964.34 0.1
33 1 1 3246.34 0.1
34 1 1 3647.65 0.1
35 1 1 4200.63 0.1
36 1 1 4714.22 0.1
37 1 1 5011.41 0.1
38 1 1 5053.18 0.1
39 1 1 4875.36 0.1
40 1 1 4560.6 0.1
41 1 1 4279.05 0.1
42 1 1 4200.8 0.1
43 1 1 4269.73 0.1
44 1 1 4304.41 0.1
45 1 1 4281.34 0.1
46 1 1 4266.54 0.1
47 1 1 4209.18 0.1
48 1 1 4109.45 0.1
49 1 1 4098.14 0.1
50 1 1 4097.25 0.1
51 1 1 3885.67 0.1
52 1 1 3439.31 0.1
53 1 1 2914.25 0.1
54 1 1 2510.53 0.1
55 1 1 2396.05 0.1
56 1 1 2497.87 0.1
57 1 1 2671.42 0.1
58 1 1 2684.72 0.1
59 1 1 2504.07 0.1
60 1 1 2225.46 0.1
61 1 1 1980.66 0.1
62 1 1 1814.96 0.1
63 1 1 1851.09 0.1
64 1 1 2059.45 0.1
65 1 1 2247.6 0.1
66 1 1 2235.72 0.1
67 1 1 2039.61 0.1
68 1 1 1765.5 0.1
69 1 1 1505.01 0.1
70 1 1 1325.78 0.1
71 1 1 1250.61 0.1
72 1 1 1231.24 0.1
73 1 1 1194.11 0.1
74 1 1 1121.74 0.1
75 1 1 1072.05 0.1
76 1 1 1086.18 0.1
77 1 1 1120.87 0.1
78 1 1 1158.08 0.1
79 1 1 1218.86 0.1
80 1 1 1251.31 0.1
81 1 1 1352.31 0.1
82 1 1 1378.01 0.1
83 1 1 1374.31 0.1
84 1 1 1364.55 0.1
85 1 1 1345.85 0.1
86 1 1 1330.37 0.1
87 1 1 1366.9 0.1
88 1 1 1493.75 0.1
89 1 1 1679.48 0.1
90 1 1 1867.59 0.1
91 1 1 2015.81 0.1
92 1 1 2084.25 0.1
93 1 1 2055.41 0.1
94 1 1 1957.61 0.1
95 1 1 1847.88 0.1
96 1 1 1808.35 0.1
97 1 1 1958 0.1
98 1 1 2355 0.1
99 1 1 2856.18 0.1
100 1 1 3212.45 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200 0 0 0 0 0 0 1 4 0 5 8 8 14 19 19 22 12 18 16 16 15 9 4 5 2 1 2 0 0 0 0 0
 27 1 1 0 0 200 0 0 1 2 3 6 3 0 3 5 3 5 11 18 12 13 15 26 12 17 14 7 5 7 7 3 0 1 1 0 0 0
 28 1 1 0 0 200 0 0 0 1 1 2 9 11 15 8 2 3 12 16 12 12 9 11 18 15 13 9 9 7 2 1 1 1 0 0 0 0
 29 1 1 0 0 200 0 0 0 0 0 0 2 7 8 12 10 22 15 9 9 9 16 16 14 13 7 6 11 7 5 1 1 0 0 0 0 0
 30 1 1 0 0 200 0 0 0 0 0 1 2 1 6 5 20 22 30 18 16 7 6 7 17 8 14 7 4 4 5 0 0 0 0 0 0 0
 31 1 1 0 0 200 0 1 0 0 2 0 2 0 1 3 5 13 25 23 28 18 12 11 12 13 8 8 7 2 3 1 1 0 1 0 0 0
 32 1 1 0 0 200 0 1 0 1 7 2 3 0 4 0 7 4 16 16 24 18 21 15 13 14 9 8 10 3 2 1 0 1 0 0 0 0
 33 1 1 0 0 200 0 1 0 0 4 5 11 17 11 10 3 4 10 14 12 14 22 16 12 12 5 2 5 5 3 1 0 0 1 0 0 0
 34 1 1 0 0 200 0 0 0 0 1 2 3 17 11 23 17 12 11 6 9 12 17 16 7 18 10 6 1 0 0 1 0 0 0 0 0 0
 35 1 1 0 0 200 0 0 0 0 1 1 1 4 7 18 18 25 21 14 16 7 10 19 10 11 5 5 2 0 2 1 2 0 0 0 0 0
 36 1 1 0 0 200 0 1 0 0 1 1 2 1 4 7 10 15 21 27 20 19 12 11 13 11 7 8 3 3 3 0 0 0 0 0 0 0
 37 1 1 0 0 200 0 0 0 0 0 0 0 2 3 5 10 11 15 30 28 19 16 11 13 8 7 8 5 1 5 1 2 0 0 0 0 0
 38 1 1 0 0 200 0 1 0 0 0 2 0 4 6 3 10 11 11 21 11 27 25 23 9 12 11 6 4 1 0 0 1 1 0 0 0 0
 39 1 1 0 0 200 1 0 1 0 1 2 3 5 4 4 2 14 14 16 21 17 21 14 18 13 9 9 4 4 2 1 0 0 0 0 0 0
 40 1 1 0 0 200 0 0 0 1 1 4 3 2 5 10 5 8 8 11 16 20 24 25 16 16 9 6 2 5 0 2 0 1 0 0 0 0
 41 1 1 0 0 200 0 1 0 1 1 2 9 12 12 13 2 7 8 15 17 15 19 18 13 6 9 10 6 1 0 1 1 0 1 0 0 0
 42 1 1 0 0 200 1 0 0 0 2 0 6 1 8 14 23 17 15 15 10 13 11 14 13 8 10 6 9 2 2 0 0 0 0 0 0 0
 43 1 1 0 0 200 0 0 0 0 2 2 2 3 6 6 14 23 22 20 16 8 8 12 15 12 13 8 5 2 1 0 0 0 0 0 0 0
 44 1 1 0 0 200 0 0 0 1 5 5 4 6 9 13 11 23 15 23 22 15 14 8 5 5 4 5 1 2 1 2 1 0 0 0 0 0
 45 1 1 0 0 200 0 0 0 0 0 1 12 5 11 10 7 12 21 18 16 23 17 11 9 7 8 5 4 0 2 1 0 0 0 0 0 0
 46 1 1 0 0 200 2 2 0 0 0 0 0 1 7 19 14 14 24 19 18 16 16 14 8 7 6 3 5 1 3 0 1 0 0 0 0 0
 47 1 1 0 0 200 1 0 1 1 6 3 6 4 1 9 9 10 18 17 25 19 16 14 10 13 4 3 6 1 2 1 0 0 0 0 0 0
 48 1 1 0 0 200 0 1 0 0 1 3 11 11 15 10 8 11 14 24 22 21 12 12 6 9 4 2 1 2 0 0 0 0 0 0 0 0
 49 1 1 0 0 200 0 0 0 0 2 1 3 7 16 14 20 22 16 13 15 11 12 10 18 8 3 4 2 1 1 0 1 0 0 0 0 0
 50 1 1 0 0 200 0 0 0 0 0 1 0 1 4 12 13 31 31 23 27 17 13 6 9 5 3 2 1 1 0 0 0 0 0 0 0 0
 51 1 1 0 0 200 0 1 0 1 1 1 0 4 1 4 10 17 20 25 30 19 13 16 11 8 7 7 0 4 0 0 0 0 0 0 0 0
 52 1 1 0 0 200 0 0 0 2 1 2 2 1 4 6 6 10 20 31 28 24 16 16 8 9 10 2 1 1 0 0 0 0 0 0 0 0
 53 1 1 0 0 200 0 0 0 1 2 6 3 2 9 5 9 8 16 17 16 25 21 20 16 8 7 4 2 0 1 0 0 1 1 0 0 0
 54 1 1 0 0 200 0 0 0 2 5 8 8 11 15 13 9 8 8 8 16 17 16 16 13 11 6 2 6 0 0 1 1 0 0 0 0 0
 55 1 1 0 0 200 0 0 0 0 1 3 8 15 21 20 23 12 13 12 12 12 9 10 12 5 3 2 2 2 0 3 0 0 0 0 0 0
 56 1 1 0 0 200 0 1 0 0 0 2 4 10 15 27 26 22 15 15 17 12 9 5 2 9 5 3 0 0 1 0 0 0 0 0 0 0
 57 1 1 0 0 200 0 0 0 1 0 4 7 5 10 22 18 28 21 28 23 16 5 1 2 2 0 3 3 0 1 0 0 0 0 0 0 0
 58 1 1 0 0 200 0 0 0 0 0 0 5 2 7 13 21 20 26 27 23 18 16 10 3 5 4 0 0 0 0 0 0 0 0 0 0 0
 59 1 1 0 0 200 0 1 0 0 0 2 1 4 6 10 15 17 21 20 30 22 14 7 8 10 4 3 2 0 3 0 0 0 0 0 0 0
 60 1 1 0 0 200 0 0 0 1 3 7 2 3 5 8 8 19 20 23 29 13 25 8 11 6 4 3 1 1 0 0 0 0 0 0 0 0
 61 1 1 0 0 200 1 0 0 0 4 6 8 12 17 10 10 10 14 16 12 18 22 14 9 8 4 2 1 0 0 0 1 1 0 0 0 0
 62 1 1 0 0 200 0 0 1 6 7 7 8 3 8 14 29 25 17 9 6 17 11 10 8 1 4 4 3 2 0 0 0 0 0 0 0 0
 63 1 1 0 0 200 0 1 0 0 2 5 20 23 23 14 13 13 20 17 10 7 5 7 7 6 3 3 0 0 1 0 0 0 0 0 0 0
 64 1 1 0 0 200 0 0 0 1 1 1 3 9 17 31 15 40 16 21 13 5 7 7 6 3 1 1 2 0 0 0 0 0 0 0 0 0
 65 1 1 0 0 200 0 0 0 0 0 1 1 4 10 8 15 32 37 37 16 7 14 6 5 1 4 1 1 0 0 0 0 0 0 0 0 0
 66 1 1 0 0 200 0 0 0 0 1 2 1 1 2 5 17 15 27 26 32 28 12 8 11 4 4 1 1 2 0 0 0 0 0 0 0 0
 67 1 1 0 0 200 0 0 0 0 0 1 2 3 9 9 13 21 13 23 19 25 24 19 8 8 2 0 1 0 0 0 0 0 0 0 0 0
 68 1 1 0 0 200 0 1 0 0 3 3 3 2 3 9 4 11 17 18 24 30 28 18 9 6 7 3 0 1 0 0 0 0 0 0 0 0
 69 1 1 0 0 200 0 0 2 0 1 3 4 8 8 3 9 4 14 23 24 23 21 15 13 12 4 3 3 2 1 0 0 0 0 0 0 0
 70 1 1 0 0 200 0 0 0 2 3 2 9 10 10 17 13 9 12 16 20 10 20 13 6 13 7 4 3 0 1 0 0 0 0 0 0 0
 71 1 1 0 0 200 0 0 0 0 1 2 5 10 12 21 20 19 17 17 14 13 13 10 11 5 4 3 3 0 0 0 0 0 0 0 0 0
 72 1 1 0 0 200 0 0 1 1 2 3 0 4 8 12 20 27 32 23 11 13 7 14 5 6 3 4 3 0 0 1 0 0 0 0 0 0
 73 1 1 0 0 200 1 0 1 0 1 0 2 5 5 8 10 24 25 31 19 21 12 8 6 6 7 2 2 1 2 0 1 0 0 0 0 0
 74 1 1 0 0 200 0 0 0 3 2 7 1 4 6 5 11 8 24 22 27 24 14 13 15 1 7 2 2 2 0 0 0 0 0 0 0 0
 75 1 1 0 0 200 0 1 0 0 1 5 10 17 15 9 10 13 12 18 19 10 18 10 15 9 4 3 0 1 0 0 0 0 0 0 0 0
 76 1 1 0 0 200 0 1 2 0 1 0 2 6 16 18 25 17 17 15 16 18 7 11 17 3 2 0 1 2 1 2 0 0 0 0 0 0
 77 1 1 0 0 200 0 0 1 2 5 13 3 3 7 8 9 21 36 22 21 9 6 10 8 5 3 3 1 2 2 0 0 0 0 0 0 0
 78 1 1 0 0 200 0 0 0 1 1 2 6 13 12 9 9 17 16 28 18 18 12 10 11 7 5 1 1 1 1 1 0 0 0 0 0 0
 79 1 1 0 0 200 0 0 0 0 0 1 1 7 7 32 31 22 11 17 16 14 13 11 7 4 1 1 3 1 0 0 0 0 0 0 0 0
 80 1 1 0 0 200 0 0 0 0 0 1 0 1 1 14 20 26 29 24 18 22 8 16 6 7 3 1 2 0 0 1 0 0 0 0 0 0
 81 1 1 0 0 200 0 0 1 0 1 3 1 1 0 4 7 22 18 33 29 17 15 18 16 6 3 2 2 1 0 0 0 0 0 0 0 0
 82 1 1 0 0 200 0 0 0 0 3 3 6 5 10 2 6 7 14 21 21 29 22 23 15 7 4 1 1 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 200 1 0 0 1 1 1 2 4 10 14 4 11 10 18 15 25 22 28 13 8 6 3 2 1 0 0 0 0 0 0 0 0
 84 1 1 0 0 200 0 1 0 0 0 0 3 5 3 7 13 22 11 19 18 19 16 20 12 10 7 7 5 1 0 1 0 0 0 0 0 0
 85 1 1 0 0 200 4 2 0 1 1 1 1 3 6 5 6 15 14 16 18 25 16 16 14 9 11 6 6 3 1 0 0 0 0 0 0 0
 86 1 1 0 0 200 0 1 0 0 3 8 6 4 6 10 10 12 13 14 18 16 23 12 17 8 10 6 2 1 0 0 0 0 0 0 0 0
 87 1 1 0 0 200 1 1 1 1 1 1 7 12 13 13 11 17 10 17 17 12 16 9 10 11 10 4 2 1 1 0 0 1 0 0 0 0
 88 1 1 0 0 200 0 0 1 1 3 3 1 4 13 17 25 15 14 19 11 12 12 16 10 9 4 2 3 2 0 1 2 0 0 0 0 0
 89 1 1 0 0 200 0 0 0 0 2 1 7 8 12 10 15 16 21 22 18 11 13 8 8 11 6 7 1 1 1 1 0 0 0 0 0 0
 90 1 1 0 0 200 0 0 0 1 2 0 4 5 9 13 19 14 16 24 26 17 11 10 7 7 5 2 2 4 1 1 0 0 0 0 0 0
 91 1 1 0 0 200 0 0 0 0 0 1 4 4 7 4 16 24 23 28 22 16 14 8 7 8 4 5 1 0 2 2 0 0 0 0 0 0
 92 1 1 0 0 200 0 0 0 0 0 2 1 1 5 7 15 25 22 23 21 22 18 10 12 6 4 2 3 1 0 0 0 0 0 0 0 0
 93 1 1 0 0 200 0 1 0 0 1 1 1 2 2 4 3 9 18 23 21 24 25 18 19 8 5 4 3 4 1 1 2 0 0 0 0 0
 94 1 1 0 0 200 0 1 0 0 1 1 2 3 4 7 6 10 13 18 24 19 28 16 14 8 12 4 2 3 2 2 0 0 0 0 0 0
 95 1 1 0 0 200 0 3 0 4 3 6 4 3 7 4 5 6 9 11 12 20 19 27 17 14 9 5 8 2 2 0 0 0 0 0 0 0
 96 1 1 0 0 200 0 2 0 3 7 10 5 14 17 13 10 12 8 12 12 7 7 15 15 11 8 6 4 1 1 0 0 0 0 0 0 0
 97 1 1 0 0 200 0 1 0 1 0 4 8 21 21 20 13 14 16 8 17 6 4 7 12 9 10 2 1 3 2 0 0 0 0 0 0 0
 98 1 1 0 0 200 0 0 0 0 0 2 2 7 12 28 33 20 26 17 2 12 7 4 9 3 2 7 2 3 1 1 0 0 0 0 0 0
 99 1 1 0 0 200 0 0 0 0 2 0 3 2 9 14 21 21 30 28 12 8 9 10 10 10 6 3 1 0 1 0 0 0 0 0 0 0
 100 1 1 0 0 200 0 0 0 0 2 0 0 1 1 3 14 23 25 34 37 15 14 8 4 6 6 4 2 1 0 0 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 177.391 0.1
2 1 1 204.873 0.1
3 1 1 228.294 0.1
4 1 1 247.524 0.1
5 1 1 262.651 0.1
6 1 1 276.372 0.1
7 1 1 292.575 0.1
8 1 1 309.957 0.1
9 1 1 323.265 0.1
10 1 1 330.58 0.1
11 1 1 334.152 0.1
12 1 1 335.932 0.1
13 1 1 335.841 0.1
14 1 1 334.733 0.1
15 1 1 335.328 0.1
16 1 1 337.465 0.1
17 1 1 337.954 0.1
18 1 1 335.787 0.1
19 1 1 334.164 0.1
20 1 1 337.183 0.1
21 1 1 345.518 0.1
22 1 1 356.396 0.1
23 1 1 366.291 0.1
24 1 1 373.226 0.1
25 1 1 376.9 0.1
26 1 1 365.455 0.1
27 1 1 822.594 0.1
28 1 1 1246.1 0.1
29 1 1 1689.43 0.1
30 1 1 2175.39 0.1
31 1 1 2627.19 0.1
32 1 1 2964.34 0.1
33 1 1 3246.34 0.1
34 1 1 3647.65 0.1
35 1 1 4200.63 0.1
36 1 1 4714.22 0.1
37 1 1 5011.41 0.1
38 1 1 5053.18 0.1
39 1 1 4875.36 0.1
40 1 1 4560.6 0.1
41 1 1 4279.05 0.1
42 1 1 4200.8 0.1
43 1 1 4269.73 0.1
44 1 1 4304.41 0.1
45 1 1 4281.34 0.1
46 1 1 4266.54 0.1
47 1 1 4209.18 0.1
48 1 1 4109.45 0.1
49 1 1 4098.14 0.1
50 1 1 4097.25 0.1
51 1 1 3885.67 0.1
52 1 1 3439.31 0.1
53 1 1 2914.25 0.1
54 1 1 2510.53 0.1
55 1 1 2396.05 0.1
56 1 1 2497.87 0.1
57 1 1 2671.42 0.1
58 1 1 2684.72 0.1
59 1 1 2504.07 0.1
60 1 1 2225.46 0.1
61 1 1 1980.66 0.1
62 1 1 1814.96 0.1
63 1 1 1851.09 0.1
64 1 1 2059.45 0.1
65 1 1 2247.6 0.1
66 1 1 2235.72 0.1
67 1 1 2039.61 0.1
68 1 1 1765.5 0.1
69 1 1 1505.01 0.1
70 1 1 1325.78 0.1
71 1 1 1250.61 0.1
72 1 1 1231.24 0.1
73 1 1 1194.11 0.1
74 1 1 1121.74 0.1
75 1 1 1072.05 0.1
76 1 1 1086.18 0.1
77 1 1 1120.87 0.1
78 1 1 1158.08 0.1
79 1 1 1218.86 0.1
80 1 1 1251.31 0.1
81 1 1 1352.31 0.1
82 1 1 1378.01 0.1
83 1 1 1374.31 0.1
84 1 1 1364.55 0.1
85 1 1 1345.85 0.1
86 1 1 1330.37 0.1
87 1 1 1366.9 0.1
88 1 1 1493.75 0.1
89 1 1 1679.48 0.1
90 1 1 1867.59 0.1
91 1 1 2015.81 0.1
92 1 1 2084.25 0.1
93 1 1 2055.41 0.1
94 1 1 1957.61 0.1
95 1 1 1847.88 0.1
96 1 1 1808.35 0.1
97 1 1 1958 0.1
98 1 1 2355 0.1
99 1 1 2856.18 0.1
100 1 1 3212.45 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 42218.9 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200  0.371028 0.977841 0.331204 0.125991 0.359813 0.555611 0.969064 1.89644 2.93533 4.3515 6.61873 9.48457 12.5252 15.2137 17.0676 17.8956 17.8499 17.4131 16.4776 14.901 12.7104 10.119 7.45309 5.03984 3.1074 1.73633 0.874647 0.395418 0.159844 0.0576013 0.0184582 0.00693648
 27 1 1 0 0 200  0.080949 0.220197 0.248308 1.51177 4.41439 4.62566 2.17514 1.54248 2.29405 3.60909 5.47622 7.75962 10.504 13.4582 15.9374 17.3377 17.602 17.2841 16.4271 14.9497 12.8535 10.3111 7.63939 5.18522 3.20304 1.79072 0.901767 0.40737 0.164517 0.0592247 0.0189593 0.00711602
 28 1 1 0 0 200  0.0307889 0.0825307 0.0634184 0.325036 1.13461 2.62779 6.61101 11.9498 12.0654 7.63122 5.21807 5.98708 8.09513 10.5692 12.9433 14.7021 15.5108 15.6233 15.0572 13.815 11.9574 9.65595 7.19841 4.91054 3.04401 1.70528 0.859483 0.388287 0.156739 0.0563839 0.0180346 0.00676115
 29 1 1 0 0 200  0.0275868 0.0731908 0.0371672 0.117441 0.381248 0.735437 1.8727 4.98494 10.5642 17.2267 19.8967 16.0807 10.9251 9.09755 9.99692 11.5092 12.5674 13.0949 12.957 12.0967 10.5857 8.61403 6.46175 4.43156 2.75906 1.55063 0.78317 0.354205 0.143034 0.0514459 0.0164473 0.00616063
 30 1 1 0 0 200  0.0358776 0.0949961 0.0433717 0.108587 0.328766 0.460924 0.725957 1.70148 3.90862 8.52647 15.7158 22.352 23.9053 19.7299 14.2512 11.2796 10.7392 11.1175 11.2702 10.7758 9.59832 7.90582 5.98043 4.12707 2.58216 1.45691 0.738032 0.33449 0.135247 0.048676 0.0155639 0.00582762
 31 1 1 0 0 200  0.330686 0.87174 0.300798 0.159133 0.450782 0.577192 0.688079 1.21945 2.04678 3.78133 7.65975 14.0884 21.3262 25.5094 24.0877 18.8795 13.9673 11.4871 10.6266 10.0695 9.09931 7.61193 5.82724 4.05606 2.55373 1.44775 0.736113 0.334571 0.135564 0.0488599 0.0156361 0.00585694
 32 1 1 0 0 200  0.213856 0.569737 0.348076 1.39764 4.07573 4.31848 2.19659 1.70748 2.13058 2.80166 4.41938 7.68468 13.0448 19.4116 23.7751 23.6233 19.7399 15.3059 12.0923 10.1719 8.78341 7.31857 5.6533 3.97499 2.52335 1.43947 0.735371 0.335451 0.136303 0.049231 0.0157794 0.00591785
 33 1 1 0 0 200  0.0577043 0.155864 0.148982 0.851994 2.65712 4.09685 6.82417 11.4148 11.6019 7.52087 5.04314 5.41704 7.72593 11.6773 16.2472 19.2974 19.3046 16.973 13.7067 10.7429 8.4797 6.68313 5.06309 3.55932 2.27361 1.30603 0.671151 0.307589 0.125438 0.0454357 0.0145951 0.00548482
 34 1 1 0 0 200  0.0636697 0.168687 0.0797612 0.220968 0.742293 1.58363 3.9968 8.64366 13.6247 17.8701 19.0228 15.1352 10.2517 8.66684 10.1891 12.6612 14.2385 14.2612 12.7613 10.4346 8.05774 6.02122 4.35451 2.98558 1.89264 1.08876 0.562106 0.258916 0.106058 0.0385558 0.0124212 0.00468115
 35 1 1 0 0 200  0.0552522 0.146639 0.0755997 0.241697 0.727683 0.973886 1.40329 3.23701 7.04706 13.245 20.1183 24.0483 22.9331 17.9325 12.8603 10.5132 10.4248 10.8785 10.6093 9.36891 7.54193 5.6344 3.96337 2.62992 1.62863 0.926276 0.476934 0.2201 0.0904851 0.0330218 0.0106755 0.00403801
 36 1 1 0 0 200  0.0342433 0.0912318 0.0558802 0.226807 0.690247 0.957327 1.36919 2.51385 3.94479 6.56838 11.8909 19.1436 25.106 26.3685 22.547 16.6639 12.1247 10.0275 9.19211 8.36649 7.07457 5.46605 3.8754 2.53903 1.53953 0.859165 0.437038 0.200601 0.0824105 0.030131 0.00976924 0.00370978
 37 1 1 0 0 200  0.0546215 0.144565 0.0644694 0.152744 0.473017 0.738923 1.30696 2.53416 3.78835 5.34522 8.06046 12.3943 18.4011 24.1779 26.4043 23.7083 18.2664 13.4004 10.2335 8.34343 6.89254 5.41848 3.92351 2.59361 1.5652 0.862385 0.4325 0.19631 0.0801061 0.0292081 0.00947048 0.00360495
 38 1 1 0 0 200  0.0548909 0.145731 0.0764077 0.250813 0.749116 0.945999 1.09837 1.97955 3.29532 5.10881 7.50448 10.3333 14.0926 18.8842 23.2266 24.726 22.4546 18.1325 13.6239 10.0637 7.54453 5.64854 4.05322 2.69667 1.63632 0.900286 0.448147 0.201372 0.0813979 0.0294718 0.00951695 0.00361762
 39 1 1 0 0 200  0.267105 0.704743 0.258746 0.263147 0.78217 1.09371 1.57252 2.75839 3.71354 4.65753 6.54912 9.259 12.4354 15.9586 19.5165 22.0594 22.3321 20.3405 16.7084 12.6389 9.09735 6.38333 4.35993 2.83455 1.7101 0.940806 0.467689 0.209184 0.0839649 0.0301718 0.00967906 0.00365907
 40 1 1 0 0 200  0.0709206 0.192323 0.202331 1.19775 3.52212 3.88868 2.60068 3.07863 4.3389 5.69716 7.30436 8.89485 10.8793 13.558 16.4442 18.7429 19.7606 19.3437 17.293 14.0362 10.4416 7.24927 4.76996 2.98221 1.75213 0.951298 0.470349 0.209728 0.0838715 0.0299853 0.00956254 0.00358912
 41 1 1 0 0 200  0.123845 0.327586 0.14145 0.312104 1.06184 2.34659 5.75388 10.6086 11.6237 9.3087 8.46408 9.38343 10.6524 11.9768 13.4703 14.9526 15.9296 16.1638 15.2541 13.166 10.3322 7.39958 4.88181 2.99366 1.71109 0.906893 0.441207 0.194921 0.0775317 0.0276049 0.00876601 0.00326977
 42 1 1 0 0 200  0.114723 0.304458 0.156522 0.497046 1.48037 1.85493 2.24014 4.8109 9.85971 16.1568 19.5597 17.6158 13.9769 12.1605 11.9493 12.2268 12.5068 12.679 12.2953 11.0724 9.10612 6.79543 4.60456 2.84605 1.61261 0.839381 0.400449 0.174088 0.0684668 0.0241969 0.00764403 0.00283541
 43 1 1 0 0 200  0.215132 0.568802 0.238936 0.471445 1.42081 1.95837 2.73374 4.78219 6.71017 9.48674 14.9862 20.9662 23.1406 20.3531 15.7318 12.4267 10.8996 10.375 9.94493 9.11041 7.73466 5.98416 4.18812 2.6479 1.51511 0.786661 0.371147 0.15898 0.0616321 0.0215259 0.00674069 0.00248081
 44 1 1 0 0 200  0.0303955 0.0841399 0.13078 0.887577 2.64677 3.19409 3.15003 4.92037 7.02831 9.19658 12.1897 15.8137 19.8203 22.4182 21.3495 17.213 12.842 10.1139 8.68326 7.6793 6.5507 5.18095 3.72656 2.41714 1.40989 0.739629 0.349389 0.148752 0.0570661 0.0196955 0.00609911 0.00221913
 45 1 1 0 0 200  0.0639878 0.169133 0.0699936 0.137413 0.514714 1.45961 4.21364 8.29619 10.3491 10.8579 12.4958 14.8651 17.2211 19.2889 20.1295 18.7118 15.3538 11.7657 8.96224 7.07242 5.69152 4.44613 3.23347 2.13863 1.27269 0.678607 0.323862 0.138376 0.0529571 0.0181541 0.00557061 0.00200194
 46 1 1 0 0 200  0.374012 0.986416 0.35208 0.280164 0.804715 0.991894 1.20826 2.97213 7.1068 13.0779 17.728 18.9217 18.5882 18.5967 18.5821 17.6371 15.4788 12.6982 9.81856 7.34541 5.45539 4.01641 2.84916 1.8838 1.13404 0.613746 0.2969 0.128099 0.0492695 0.0168945 0.00516512 0.00184006
 47 1 1 0 0 200  0.0916156 0.248644 0.266474 1.58956 4.6617 5.04406 2.96352 2.91477 3.97298 6.22368 11.2216 17.6512 21.9581 22.3233 20.2093 17.5814 15.0205 12.5807 10.0727 7.64404 5.54387 3.88567 2.62987 1.69082 1.00924 0.548434 0.2679 0.116826 0.0453342 0.0156346 0.00479047 0.00170251
 48 1 1 0 0 200  0.0491495 0.131192 0.0868326 0.391609 1.34667 2.99872 7.37058 13.4524 14.2065 10.2791 8.55155 10.5675 14.7421 18.7698 20.1353 18.3496 15.0914 12.0828 9.53266 7.28191 5.30185 3.66317 2.40376 1.49338 0.869001 0.466379 0.227444 0.0996708 0.0389706 0.0135414 0.00417358 0.00148852
 49 1 1 0 0 200  0.0374726 0.0996073 0.0553203 0.200041 0.631976 1.07831 2.3652 5.97404 12.2965 19.9143 23.4936 20.1692 15.3127 13.8861 14.8658 15.2758 13.9045 11.5486 9.01825 6.75443 4.86187 3.33347 2.15802 1.31163 0.744235 0.390948 0.188096 0.0819898 0.032085 0.0111984 0.00347129 0.0012461
 50 1 1 0 0 200  0.0440194 0.116681 0.0565068 0.161536 0.494827 0.728355 1.21859 2.65731 5.31435 10.4596 18.4369 25.8735 27.9333 23.8179 17.9485 14.1057 12.1134 10.559 8.68852 6.64805 4.76962 3.23069 2.06357 1.23538 0.688314 0.354489 0.167522 0.0720635 0.0279924 0.00974857 0.00302661 0.00109189
 51 1 1 0 0 200  0.0884166 0.233842 0.100038 0.209096 0.626343 0.832604 1.0968 2.03122 3.37239 5.73813 10.3032 17.2264 24.7432 28.9957 27.3142 21.4059 15.3431 11.3669 8.85383 6.85201 5.02256 3.43019 2.18016 1.28964 0.707876 0.358617 0.16665 0.0705864 0.0270784 0.00935074 0.00289047 0.00104244
 52 1 1 0 0 200  0.239374 0.632545 0.256789 0.445686 1.3119 1.59903 1.62378 2.53868 3.56438 4.80345 7.21084 11.2263 17.017 23.3576 27.2569 26.3112 21.3795 15.692 11.08 7.84572 5.54143 3.77418 2.41011 1.42441 0.775636 0.38806 0.177731 0.0741706 0.0280613 0.00957625 0.00293365 0.00105108
 53 1 1 0 0 200  0.417642 1.1054 0.493673 1.16292 3.42198 4.02179 3.5453 4.89699 5.97931 6.32144 7.37312 9.26732 12.2306 16.4388 20.7534 23.0134 21.8826 18.2895 13.7205 9.54679 6.37004 4.13131 2.57526 1.51048 0.819649 0.407641 0.184908 0.0762375 0.0284713 0.00959483 0.00290654 0.00102988
 54 1 1 0 0 200  0.21473 0.573651 0.390433 1.75671 5.25654 6.56996 7.10357 10.7309 12.4553 11.4467 10.9339 10.7904 10.8742 11.9315 13.855 15.667 16.2156 15.1714 12.674 9.48981 6.48005 4.12383 2.48216 1.41394 0.754182 0.371622 0.167382 0.0684531 0.0253127 0.00843688 0.00252734 0.000883903
 55 1 1 0 0 200  0.169797 0.450849 0.237959 0.797785 2.51602 4.17372 7.87752 14.589 18.4683 19.0738 19.0746 17.1796 13.9955 11.5814 10.4176 10.1316 10.1134 9.8525 8.88645 7.23005 5.27983 3.48637 2.10838 1.18099 0.615443 0.29735 0.132112 0.0535109 0.0196234 0.00648432 0.00192432 0.000664648
 56 1 1 0 0 200  0.118929 0.31607 0.173945 0.61687 1.88073 2.66404 4.0977 8.273 14.0357 20.7345 25.8673 25.9073 21.9785 16.9141 12.3287 9.12498 7.37283 6.53873 5.88032 5.00226 3.88029 2.70907 1.70256 0.969311 0.503647 0.239952 0.104837 0.0418438 0.01517 0.00496713 0.00146214 0.00049986
 57 1 1 0 0 200  0.0472083 0.12648 0.0952366 0.468103 1.43767 2.07872 3.24206 6.1529 9.47363 13.9119 20.3602 26.2397 28.2738 25.2626 19.0823 12.857 8.42268 5.95164 4.63276 3.75742 2.95224 2.14262 1.4058 0.828747 0.439575 0.210626 0.0915035 0.0360948 0.012913 0.00417671 0.00121663 0.000411146
 58 1 1 0 0 200  0.0671214 0.177733 0.0814618 0.208104 0.665621 1.19204 2.52601 5.16864 7.98182 11.3997 16.1129 21.1738 25.512 27.2896 24.8501 19.0438 12.6925 8.0151 5.17147 3.56338 2.57088 1.83068 1.22156 0.741804 0.404968 0.198152 0.0869935 0.0343423 0.0122099 0.00391028 0.0011266 0.000375786
 59 1 1 0 0 200  0.331614 0.874912 0.320289 0.317705 0.928948 1.19779 1.5067 2.98788 5.57376 9.45838 14.2043 18.7 22.6193 25.3167 25.4777 22.3953 17.0632 11.6492 7.35704 4.51485 2.82169 1.81164 1.15455 0.697673 0.386763 0.193293 0.086471 0.0345657 0.012353 0.00395103 0.00113168 0.000373379
 60 1 1 0 0 200  0.102821 0.277885 0.269019 1.53101 4.49886 4.94729 3.21158 3.57336 4.78591 6.51631 9.99563 14.805 19.5292 22.8151 23.8512 22.3336 18.6648 14.1422 9.70707 6.10728 3.62601 2.10427 1.21583 0.690801 0.373916 0.186997 0.0846729 0.0343486 0.0124278 0.00400553 0.00115021 0.00037818
 61 1 1 0 0 200  0.888416 2.34216 0.812435 0.474325 1.51441 3.15018 7.36467 13.4246 14.4967 11.1048 9.53424 10.7791 13.5271 16.7049 18.8118 18.7594 16.6618 13.5538 10.0686 6.79888 4.19347 2.4015 1.30653 0.68695 0.348918 0.168231 0.0752139 0.0305793 0.0111645 0.00363589 0.001053 0.000348133
 62 1 1 0 0 200  0.109285 0.302652 0.473352 3.20698 9.39009 10.0155 5.55466 6.1648 11.3946 18.0183 21.2951 18.5563 14.0863 12.1125 12.2359 12.4859 11.7886 10.2481 8.13656 5.86936 3.84006 2.28589 1.25 0.63696 0.306391 0.139695 0.0599131 0.0238079 0.00862669 0.00281487 0.000820414 0.000273577
 63 1 1 0 0 200  0.126249 0.334205 0.151182 0.387706 1.45583 4.09306 11.551 21.4288 22.5514 16.7527 15.3546 18.2437 19.2119 16.2795 12.0517 9.12255 7.615 6.64359 5.54789 4.25353 2.95363 1.85197 1.05079 0.542889 0.257747 0.113486 0.0465733 0.0177792 0.00626108 0.0020112 0.000583004 0.000194856
 64 1 1 0 0 200  0.0711109 0.189282 0.111549 0.431638 1.2966 1.70928 2.52406 6.52552 15.1335 26.1957 31.6077 27.4178 20.6263 16.6674 13.8561 10.4607 7.30598 5.27064 4.03707 3.1009 2.24307 1.47893 0.878982 0.470397 0.227485 0.100011 0.040231 0.0148768 0.00506095 0.00157814 0.000447996 0.000147823
 65 1 1 0 0 200  0.0710854 0.188506 0.0933518 0.279149 0.861373 1.3021 2.17717 4.16698 6.62892 11.3674 20.4024 30.0917 33.4579 28.4808 20.1786 13.4092 8.946 6.04839 4.11074 2.83871 1.9637 1.30469 0.80121 0.445393 0.222502 0.099884 0.040426 0.0148167 0.00493687 0.00149831 0.000413855 0.000132893
 66 1 1 0 0 200  0.0351784 0.0940767 0.0664949 0.30997 0.939578 1.27005 1.74403 3.27705 5.28743 8.08715 12.5019 18.8357 26.3647 31.3135 29.7236 22.5809 14.5734 8.88929 5.4575 3.42289 2.16871 1.36015 0.820353 0.461341 0.236405 0.109031 0.0450648 0.0166974 0.00555952 0.00166819 0.000452074 0.000141098
 67 1 1 0 0 200  0.15262 0.40276 0.149934 0.169514 0.527579 0.903685 1.8002 3.53393 5.14287 7.01288 10.1201 14.3379 19.5277 24.9229 28.1788 26.8287 21.2096 14.4728 8.87271 5.14462 2.94631 1.69028 0.957831 0.521924 0.266086 0.124187 0.052314 0.0197446 0.00665982 0.00200809 0.000542119 0.00016654
 68 1 1 0 0 200  0.270196 0.714978 0.315115 0.71519 2.08675 2.33128 1.70101 2.41303 4.20586 6.80365 9.8563 12.8446 16.2194 20.1459 23.5677 24.7479 22.6617 18.2047 12.7964 7.96907 4.52675 2.43188 1.26899 0.645895 0.315644 0.144705 0.0609506 0.0232385 0.00794696 0.00242619 0.000660177 0.000202838
 69 1 1 0 0 200  0.264189 0.701331 0.365996 1.19187 3.55146 4.40113 4.61461 6.75295 7.52366 6.8599 7.91533 10.7972 14.0542 16.9216 19.2036 20.4444 19.9518 17.7476 14.089 9.87172 6.12082 3.40851 1.74475 0.840381 0.385895 0.168487 0.0689617 0.0260057 0.0089039 0.00273967 0.000752872 0.000233552
 70 1 1 0 0 200  0.0638995 0.173073 0.177102 1.04266 3.18414 4.4286 6.27119 10.7401 13.39 13.5513 13.3637 12.5104 12.0194 13.0356 14.6426 15.5946 15.4486 14.3787 12.2979 9.45195 6.44815 3.89667 2.10038 1.02377 0.458772 0.191556 0.0748811 0.0272681 0.00914789 0.00279292 0.000768146 0.000240012
 71 1 1 0 0 200  0.124912 0.330113 0.135035 0.247995 0.837727 1.84549 4.68224 9.66429 14.0312 17.6275 20.4219 20.1251 17.3746 14.4959 12.6667 11.8894 11.4557 10.8398 9.64866 7.86536 5.7687 3.76563 2.17925 1.12091 0.516347 0.215321 0.0821537 0.0288791 0.00936135 0.00278476 0.000754081 0.000234152
 72 1 1 0 0 200  0.076894 0.204722 0.121794 0.475655 1.41098 1.69901 1.79913 3.70237 7.94165 14.4659 21.067 24.6957 24.6094 21.4943 16.9381 12.9082 10.3101 8.89735 7.81417 6.55031 5.04097 3.49014 2.15158 1.17589 0.569861 0.245855 0.095051 0.0331809 0.0105266 0.00304546 0.00080313 0.00024361
 73 1 1 0 0 200  0.514581 1.35686 0.477086 0.326014 0.968687 1.47147 2.44154 4.39616 5.87021 7.8637 12.8021 19.8301 25.4295 26.6541 23.4474 18.0483 12.9649 9.53157 7.4138 5.91845 4.57843 3.27943 2.11963 1.22073 0.623055 0.281495 0.112774 0.0402163 0.0128303 0.00368065 0.00095319 0.000281332
 74 1 1 0 0 200  0.0997712 0.272174 0.326035 2.03308 5.9569 6.39631 3.62369 3.63073 5.41965 7.74857 10.5042 13.6565 17.9246 22.3005 23.9225 21.4728 16.6017 11.9153 8.39668 6.01558 4.35612 3.06866 2.01743 1.20306 0.640705 0.30251 0.126298 0.0466347 0.0152594 0.00443859 0.00115189 0.000335955
 75 1 1 0 0 200  0.0912615 0.242078 0.121915 0.386639 1.36137 3.26687 8.44062 15.4926 16.3008 11.7693 9.75704 11.1693 13.6016 16.0675 17.968 18.1877 16.1449 12.8148 9.30284 6.39638 4.29844 2.84385 1.81579 1.08476 0.590537 0.288045 0.124738 0.0477595 0.0161481 0.00482445 0.00127584 0.000375749
 76 1 1 0 0 200  0.655576 1.72832 0.599334 0.3418 0.987149 1.39611 2.32588 5.77345 12.4401 20.7153 24.6634 21.1831 15.807 13.5322 13.6092 13.7812 12.9905 11.3052 8.95881 6.47572 4.34432 2.76255 1.68244 0.974076 0.525832 0.259206 0.114828 0.0452565 0.0157824 0.00485811 0.00131925 0.000398283
 77 1 1 0 0 200  0.110471 0.301563 0.366115 2.29375 6.7123 7.13856 3.76317 3.3481 5.2534 9.33333 16.4238 23.5913 25.8901 22.1801 16.5186 12.6217 10.6226 9.30467 7.79438 6.01003 4.23032 2.73484 1.64252 0.923774 0.485811 0.236412 0.104942 0.0419356 0.01494 0.00471599 0.0013145 0.000409005
 78 1 1 0 0 200  0.03361 0.0902741 0.0739725 0.397789 1.41186 3.41918 8.87344 16.2256 16.8164 11.7119 9.86194 13.0555 18.1848 21.5233 20.5608 16.2325 11.6107 8.5449 6.64406 5.15861 3.77542 2.53645 1.55664 0.876112 0.454289 0.217117 0.0951574 0.0379097 0.0135965 0.00435378 0.00123713 0.000395641
 79 1 1 0 0 200  0.0349745 0.0926626 0.0438159 0.120727 0.396175 0.803376 2.16657 5.94178 12.9217 21.5147 25.492 21.8616 16.8994 15.7937 16.6395 15.9411 13.0765 9.68037 6.86556 4.86828 3.4347 2.32391 1.45943 0.837483 0.437512 0.20824 0.0903314 0.0356286 0.0127138 0.00407837 0.0011686 0.00038058
 80 1 1 0 0 200  0.169233 0.44638 0.160494 0.13715 0.400748 0.534787 0.763238 1.79205 4.30287 9.72411 18.3473 26.6726 29.3991 25.5242 19.6829 15.6254 12.9894 10.5402 7.92522 5.55388 3.72161 2.41115 1.49115 0.860372 0.454873 0.218342 0.0948498 0.0372506 0.0132073 0.00421586 0.00120681 0.000395549
 81 1 1 0 0 200  0.0933291 0.249013 0.161498 0.691341 2.02463 2.20456 1.35687 1.47381 2.24576 4.01655 8.26616 15.6098 24.1856 29.6184 28.7529 23.1026 16.8231 12.3319 9.17297 6.62082 4.49852 2.86849 1.72491 0.975316 0.512447 0.246768 0.107796 0.0424709 0.0150504 0.00478909 0.00136597 0.000447047
 82 1 1 0 0 200  0.0706461 0.187884 0.106775 0.397976 1.2482 2.00503 3.5588 6.12912 6.57608 5.17901 5.30651 8.25696 14.0101 21.2241 26.5019 26.7647 22.4419 16.7862 11.839 8.14257 5.45241 3.4808 2.08395 1.16214 0.601222 0.286657 0.124856 0.0492621 0.0174974 0.00557333 0.00158831 0.000518599
 83 1 1 0 0 200  0.0891452 0.236152 0.110741 0.295893 0.909068 1.36138 2.30745 4.71178 7.71369 10.6709 12.1737 11.3558 11.0096 13.7358 18.4953 22.0944 22.2101 19.2833 14.7931 10.3336 6.76642 4.21357 2.48717 1.37548 0.705163 0.332685 0.143579 0.0563363 0.019973 0.00636396 0.00181509 0.000592635
 84 1 1 0 0 200  0.134607 0.35624 0.158302 0.369076 1.10402 1.44217 1.82575 3.35569 5.5145 8.60942 12.6738 15.879 16.7549 15.9659 15.7344 16.9748 18.1994 17.9057 15.5678 11.9473 8.21842 5.1678 3.01578 1.6421 0.831295 0.388299 0.166094 0.0646558 0.0227834 0.0072327 0.00205963 0.000672277
 85 1 1 0 0 200  0.388843 1.02676 0.397726 0.560125 1.64865 2.06662 2.28821 3.71046 5.17827 6.85796 9.83774 13.6752 17.1667 18.9344 18.551 17.1793 16.1273 15.5502 14.3833 12.0788 9.02797 6.01623 3.61261 1.97704 0.993237 0.458714 0.194128 0.0748839 0.0261868 0.00826198 0.0023421 0.000762023
 86 1 1 0 0 200  0.0875848 0.237696 0.254606 1.52058 4.49452 5.13613 4.04026 5.24866 6.65784 7.57304 9.23039 11.4698 14.1241 16.7413 18.1458 17.6936 16.0401 14.3945 12.8519 11.0183 8.70538 6.18375 3.91949 2.22274 1.13522 0.525336 0.220984 0.0844896 0.0292851 0.009168 0.00258228 0.000835139
 87 1 1 0 0 200  0.340343 0.897965 0.329591 0.342776 1.15192 2.58853 6.4569 12.1255 13.917 12.1956 11.5208 11.9681 12.7188 13.8463 14.9212 15.1982 14.3862 13.0045 11.3535 9.55539 7.60912 5.58696 3.70616 2.19816 1.16307 0.550307 0.233732 0.089395 0.0308306 0.00958293 0.00267938 0.000859616
 88 1 1 0 0 200  0.128543 0.344089 0.251251 1.19594 3.51425 3.91599 2.93208 4.83999 9.94604 16.6982 20.9007 19.7783 16.4109 14.1546 13.1775 12.605 11.8811 10.9477 9.68887 8.15819 6.48343 4.79995 3.25662 1.99554 1.09393 0.534238 0.232359 0.0901605 0.0312804 0.00971954 0.00270641 0.000861859
 89 1 1 0 0 200  0.106737 0.283251 0.145485 0.467554 1.49205 2.59792 5.12863 9.20811 10.7226 10.9079 14.4794 20.0686 22.8027 20.8096 16.5374 12.9093 10.663 9.33262 8.2011 6.9523 5.56344 4.14611 2.84389 1.77471 0.997294 0.500863 0.223829 0.0888618 0.031349 0.00983908 0.00275098 0.000874914
 90 1 1 0 0 200  0.0258183 0.0698097 0.0684802 0.395056 1.20619 1.69076 2.5753 5.32972 9.40153 14.1534 17.7125 18.9001 19.9077 21.1833 20.3088 16.7243 12.5202 9.50392 7.59527 6.19939 4.92821 3.69065 2.55404 1.61324 0.921333 0.472127 0.215825 0.0876732 0.0315844 0.0100847 0.00285484 0.000915362
 91 1 1 0 0 200  0.0467294 0.123553 0.0520016 0.105526 0.354374 0.762962 1.91168 4.02387 6.3391 9.6629 14.8037 19.9851 22.9171 23.0596 21.4585 18.7679 15.1672 11.5517 8.56142 6.38443 4.79029 3.50673 2.42094 1.5396 0.88927 0.46233 0.214989 0.0890053 0.0326997 0.0106396 0.00306291 0.000998134
 92 1 1 0 0 200  0.059733 0.158233 0.0740498 0.195623 0.579757 0.713131 0.811301 1.7194 3.72675 7.08064 11.4349 16.2149 21.0106 24.3569 24.6608 22.0403 18.0067 14.0539 10.5307 7.61855 5.38856 3.73617 2.49897 1.57211 0.909795 0.47709 0.224585 0.0943393 0.0352193 0.0116528 0.00341063 0.00113274
 93 1 1 0 0 200  0.111281 0.29432 0.126056 0.264251 0.788511 1.02158 1.23112 2.03161 2.80926 4.05224 7.06576 11.8966 17.4388 22.2315 24.9129 24.5429 21.4703 17.3653 13.2188 9.5716 6.63956 4.43197 2.84269 1.73319 0.987098 0.515882 0.243996 0.10346 0.0390932 0.0131122 0.00389374 0.0013174
 94 1 1 0 0 200  0.321231 0.848394 0.332802 0.498229 1.46268 1.78806 1.828 2.82769 3.78249 4.56443 5.95075 8.32951 12.2613 17.3956 21.9196 23.9321 22.9106 19.9525 15.9794 11.8743 8.27001 5.442 3.39597 2.00528 1.11118 0.570614 0.267911 0.113678 0.0432138 0.01463 0.00439369 0.00151048
 95 1 1 0 0 200  0.705182 1.86357 0.759646 1.33762 3.90472 4.49722 3.65235 4.79569 5.87488 6.23651 7.0548 8.20443 9.86886 12.6301 16.2025 19.2132 20.2674 19.2881 16.6183 13.0327 9.37481 6.23664 3.86383 2.23725 1.20931 0.606696 0.279965 0.117643 0.0445981 0.0151384 0.00457539 0.00159152
 96 1 1 0 0 200  0.220953 0.593425 0.482576 2.48833 7.38496 8.71452 7.75787 10.5114 11.8461 10.4821 9.76433 9.62196 9.56474 10.0837 11.3425 12.9678 14.1993 14.5187 13.5172 11.353 8.61171 5.93182 3.73474 2.16169 1.15408 0.568283 0.257193 0.106335 0.0398711 0.013461 0.00406644 0.00142188
 97 1 1 0 0 200  0.0806029 0.215484 0.150851 0.707786 2.30967 4.33527 9.33875 17.3396 20.5863 18.9306 17.2693 15.0174 12.1187 10.0546 9.08001 8.87754 9.08114 9.33295 9.09758 8.11788 6.53267 4.72583 3.08083 1.81813 0.975656 0.477528 0.213334 0.0868441 0.0320929 0.0107129 0.00321308 0.0011205
 98 1 1 0 0 200  0.0352137 0.0939427 0.0607613 0.263614 0.8412 1.47614 3.22554 7.55039 14.2365 22.4131 27.7871 26.4039 20.9446 15.416 11.1622 8.43863 7.06714 6.56613 6.26707 5.73026 4.81878 3.65694 2.48817 1.51742 0.831529 0.410741 0.183355 0.0740589 0.0270534 0.00891978 0.00264617 0.000914093
 99 1 1 0 0 200  0.0562662 0.148793 0.0632047 0.130195 0.406351 0.670526 1.34574 3.09448 6.20489 11.85 20.13 27.9075 30.8073 27.169 19.9029 13.1185 8.67867 6.41651 5.32814 4.63484 3.91345 3.05703 2.15832 1.36429 0.770152 0.388537 0.175514 0.0711328 0.0258987 0.00847346 0.00248928 0.000849471
 100 1 1 0 0 200  0.0708358 0.187632 0.0875119 0.229451 0.680034 0.832638 0.889534 1.62477 3.07799 5.91088 11.0684 18.5214 26.4228 30.9717 29.3379 22.6969 15.0994 9.62541 6.4658 4.77314 3.7232 2.85758 2.04579 1.32788 0.771601 0.399518 0.18417 0.0756461 0.0277214 0.00907422 0.00265489 0.000897586
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
