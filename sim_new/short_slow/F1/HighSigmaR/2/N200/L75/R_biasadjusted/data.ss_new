#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sat Apr 25 19:09:34 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-25 19:02:58
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 177.391 0.1
2 1 1 204.873 0.1
3 1 1 228.294 0.1
4 1 1 247.524 0.1
5 1 1 262.651 0.1
6 1 1 276.372 0.1
7 1 1 292.575 0.1
8 1 1 309.957 0.1
9 1 1 323.265 0.1
10 1 1 330.58 0.1
11 1 1 334.152 0.1
12 1 1 335.932 0.1
13 1 1 335.841 0.1
14 1 1 334.733 0.1
15 1 1 335.328 0.1
16 1 1 337.465 0.1
17 1 1 337.954 0.1
18 1 1 335.787 0.1
19 1 1 334.164 0.1
20 1 1 337.183 0.1
21 1 1 345.518 0.1
22 1 1 356.396 0.1
23 1 1 366.291 0.1
24 1 1 373.226 0.1
25 1 1 376.9 0.1
26 1 1 365.455 0.1
27 1 1 822.594 0.1
28 1 1 1246.1 0.1
29 1 1 1689.43 0.1
30 1 1 2175.39 0.1
31 1 1 2627.19 0.1
32 1 1 2964.34 0.1
33 1 1 3246.34 0.1
34 1 1 3647.65 0.1
35 1 1 4200.63 0.1
36 1 1 4714.22 0.1
37 1 1 5011.41 0.1
38 1 1 5053.18 0.1
39 1 1 4875.36 0.1
40 1 1 4560.6 0.1
41 1 1 4279.05 0.1
42 1 1 4200.8 0.1
43 1 1 4269.73 0.1
44 1 1 4304.41 0.1
45 1 1 4281.34 0.1
46 1 1 4266.54 0.1
47 1 1 4209.18 0.1
48 1 1 4109.45 0.1
49 1 1 4098.14 0.1
50 1 1 4097.25 0.1
51 1 1 3885.67 0.1
52 1 1 3439.31 0.1
53 1 1 2914.25 0.1
54 1 1 2510.53 0.1
55 1 1 2396.05 0.1
56 1 1 2497.87 0.1
57 1 1 2671.42 0.1
58 1 1 2684.72 0.1
59 1 1 2504.07 0.1
60 1 1 2225.46 0.1
61 1 1 1980.66 0.1
62 1 1 1814.96 0.1
63 1 1 1851.09 0.1
64 1 1 2059.45 0.1
65 1 1 2247.6 0.1
66 1 1 2235.72 0.1
67 1 1 2039.61 0.1
68 1 1 1765.5 0.1
69 1 1 1505.01 0.1
70 1 1 1325.78 0.1
71 1 1 1250.61 0.1
72 1 1 1231.24 0.1
73 1 1 1194.11 0.1
74 1 1 1121.74 0.1
75 1 1 1072.05 0.1
76 1 1 1086.18 0.1
77 1 1 1120.87 0.1
78 1 1 1158.08 0.1
79 1 1 1218.86 0.1
80 1 1 1251.31 0.1
81 1 1 1352.31 0.1
82 1 1 1378.01 0.1
83 1 1 1374.31 0.1
84 1 1 1364.55 0.1
85 1 1 1345.85 0.1
86 1 1 1330.37 0.1
87 1 1 1366.9 0.1
88 1 1 1493.75 0.1
89 1 1 1679.48 0.1
90 1 1 1867.59 0.1
91 1 1 2015.81 0.1
92 1 1 2084.25 0.1
93 1 1 2055.41 0.1
94 1 1 1957.61 0.1
95 1 1 1847.88 0.1
96 1 1 1808.35 0.1
97 1 1 1958 0.1
98 1 1 2355 0.1
99 1 1 2856.18 0.1
100 1 1 3212.45 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200 0 0 0 0 0 0 1 4 0 5 8 8 14 19 19 22 12 18 16 16 15 9 4 5 2 1 2 0 0 0 0 0
 27 1 1 0 0 200 0 0 1 2 3 6 3 0 3 5 3 5 11 18 12 13 15 26 12 17 14 7 5 7 7 3 0 1 1 0 0 0
 28 1 1 0 0 200 0 0 0 1 1 2 9 11 15 8 2 3 12 16 12 12 9 11 18 15 13 9 9 7 2 1 1 1 0 0 0 0
 29 1 1 0 0 200 0 0 0 0 0 0 2 7 8 12 10 22 15 9 9 9 16 16 14 13 7 6 11 7 5 1 1 0 0 0 0 0
 30 1 1 0 0 200 0 0 0 0 0 1 2 1 6 5 20 22 30 18 16 7 6 7 17 8 14 7 4 4 5 0 0 0 0 0 0 0
 31 1 1 0 0 200 0 1 0 0 2 0 2 0 1 3 5 13 25 23 28 18 12 11 12 13 8 8 7 2 3 1 1 0 1 0 0 0
 32 1 1 0 0 200 0 1 0 1 7 2 3 0 4 0 7 4 16 16 24 18 21 15 13 14 9 8 10 3 2 1 0 1 0 0 0 0
 33 1 1 0 0 200 0 1 0 0 4 5 11 17 11 10 3 4 10 14 12 14 22 16 12 12 5 2 5 5 3 1 0 0 1 0 0 0
 34 1 1 0 0 200 0 0 0 0 1 2 3 17 11 23 17 12 11 6 9 12 17 16 7 18 10 6 1 0 0 1 0 0 0 0 0 0
 35 1 1 0 0 200 0 0 0 0 1 1 1 4 7 18 18 25 21 14 16 7 10 19 10 11 5 5 2 0 2 1 2 0 0 0 0 0
 36 1 1 0 0 200 0 1 0 0 1 1 2 1 4 7 10 15 21 27 20 19 12 11 13 11 7 8 3 3 3 0 0 0 0 0 0 0
 37 1 1 0 0 200 0 0 0 0 0 0 0 2 3 5 10 11 15 30 28 19 16 11 13 8 7 8 5 1 5 1 2 0 0 0 0 0
 38 1 1 0 0 200 0 1 0 0 0 2 0 4 6 3 10 11 11 21 11 27 25 23 9 12 11 6 4 1 0 0 1 1 0 0 0 0
 39 1 1 0 0 200 1 0 1 0 1 2 3 5 4 4 2 14 14 16 21 17 21 14 18 13 9 9 4 4 2 1 0 0 0 0 0 0
 40 1 1 0 0 200 0 0 0 1 1 4 3 2 5 10 5 8 8 11 16 20 24 25 16 16 9 6 2 5 0 2 0 1 0 0 0 0
 41 1 1 0 0 200 0 1 0 1 1 2 9 12 12 13 2 7 8 15 17 15 19 18 13 6 9 10 6 1 0 1 1 0 1 0 0 0
 42 1 1 0 0 200 1 0 0 0 2 0 6 1 8 14 23 17 15 15 10 13 11 14 13 8 10 6 9 2 2 0 0 0 0 0 0 0
 43 1 1 0 0 200 0 0 0 0 2 2 2 3 6 6 14 23 22 20 16 8 8 12 15 12 13 8 5 2 1 0 0 0 0 0 0 0
 44 1 1 0 0 200 0 0 0 1 5 5 4 6 9 13 11 23 15 23 22 15 14 8 5 5 4 5 1 2 1 2 1 0 0 0 0 0
 45 1 1 0 0 200 0 0 0 0 0 1 12 5 11 10 7 12 21 18 16 23 17 11 9 7 8 5 4 0 2 1 0 0 0 0 0 0
 46 1 1 0 0 200 2 2 0 0 0 0 0 1 7 19 14 14 24 19 18 16 16 14 8 7 6 3 5 1 3 0 1 0 0 0 0 0
 47 1 1 0 0 200 1 0 1 1 6 3 6 4 1 9 9 10 18 17 25 19 16 14 10 13 4 3 6 1 2 1 0 0 0 0 0 0
 48 1 1 0 0 200 0 1 0 0 1 3 11 11 15 10 8 11 14 24 22 21 12 12 6 9 4 2 1 2 0 0 0 0 0 0 0 0
 49 1 1 0 0 200 0 0 0 0 2 1 3 7 16 14 20 22 16 13 15 11 12 10 18 8 3 4 2 1 1 0 1 0 0 0 0 0
 50 1 1 0 0 200 0 0 0 0 0 1 0 1 4 12 13 31 31 23 27 17 13 6 9 5 3 2 1 1 0 0 0 0 0 0 0 0
 51 1 1 0 0 200 0 1 0 1 1 1 0 4 1 4 10 17 20 25 30 19 13 16 11 8 7 7 0 4 0 0 0 0 0 0 0 0
 52 1 1 0 0 200 0 0 0 2 1 2 2 1 4 6 6 10 20 31 28 24 16 16 8 9 10 2 1 1 0 0 0 0 0 0 0 0
 53 1 1 0 0 200 0 0 0 1 2 6 3 2 9 5 9 8 16 17 16 25 21 20 16 8 7 4 2 0 1 0 0 1 1 0 0 0
 54 1 1 0 0 200 0 0 0 2 5 8 8 11 15 13 9 8 8 8 16 17 16 16 13 11 6 2 6 0 0 1 1 0 0 0 0 0
 55 1 1 0 0 200 0 0 0 0 1 3 8 15 21 20 23 12 13 12 12 12 9 10 12 5 3 2 2 2 0 3 0 0 0 0 0 0
 56 1 1 0 0 200 0 1 0 0 0 2 4 10 15 27 26 22 15 15 17 12 9 5 2 9 5 3 0 0 1 0 0 0 0 0 0 0
 57 1 1 0 0 200 0 0 0 1 0 4 7 5 10 22 18 28 21 28 23 16 5 1 2 2 0 3 3 0 1 0 0 0 0 0 0 0
 58 1 1 0 0 200 0 0 0 0 0 0 5 2 7 13 21 20 26 27 23 18 16 10 3 5 4 0 0 0 0 0 0 0 0 0 0 0
 59 1 1 0 0 200 0 1 0 0 0 2 1 4 6 10 15 17 21 20 30 22 14 7 8 10 4 3 2 0 3 0 0 0 0 0 0 0
 60 1 1 0 0 200 0 0 0 1 3 7 2 3 5 8 8 19 20 23 29 13 25 8 11 6 4 3 1 1 0 0 0 0 0 0 0 0
 61 1 1 0 0 200 1 0 0 0 4 6 8 12 17 10 10 10 14 16 12 18 22 14 9 8 4 2 1 0 0 0 1 1 0 0 0 0
 62 1 1 0 0 200 0 0 1 6 7 7 8 3 8 14 29 25 17 9 6 17 11 10 8 1 4 4 3 2 0 0 0 0 0 0 0 0
 63 1 1 0 0 200 0 1 0 0 2 5 20 23 23 14 13 13 20 17 10 7 5 7 7 6 3 3 0 0 1 0 0 0 0 0 0 0
 64 1 1 0 0 200 0 0 0 1 1 1 3 9 17 31 15 40 16 21 13 5 7 7 6 3 1 1 2 0 0 0 0 0 0 0 0 0
 65 1 1 0 0 200 0 0 0 0 0 1 1 4 10 8 15 32 37 37 16 7 14 6 5 1 4 1 1 0 0 0 0 0 0 0 0 0
 66 1 1 0 0 200 0 0 0 0 1 2 1 1 2 5 17 15 27 26 32 28 12 8 11 4 4 1 1 2 0 0 0 0 0 0 0 0
 67 1 1 0 0 200 0 0 0 0 0 1 2 3 9 9 13 21 13 23 19 25 24 19 8 8 2 0 1 0 0 0 0 0 0 0 0 0
 68 1 1 0 0 200 0 1 0 0 3 3 3 2 3 9 4 11 17 18 24 30 28 18 9 6 7 3 0 1 0 0 0 0 0 0 0 0
 69 1 1 0 0 200 0 0 2 0 1 3 4 8 8 3 9 4 14 23 24 23 21 15 13 12 4 3 3 2 1 0 0 0 0 0 0 0
 70 1 1 0 0 200 0 0 0 2 3 2 9 10 10 17 13 9 12 16 20 10 20 13 6 13 7 4 3 0 1 0 0 0 0 0 0 0
 71 1 1 0 0 200 0 0 0 0 1 2 5 10 12 21 20 19 17 17 14 13 13 10 11 5 4 3 3 0 0 0 0 0 0 0 0 0
 72 1 1 0 0 200 0 0 1 1 2 3 0 4 8 12 20 27 32 23 11 13 7 14 5 6 3 4 3 0 0 1 0 0 0 0 0 0
 73 1 1 0 0 200 1 0 1 0 1 0 2 5 5 8 10 24 25 31 19 21 12 8 6 6 7 2 2 1 2 0 1 0 0 0 0 0
 74 1 1 0 0 200 0 0 0 3 2 7 1 4 6 5 11 8 24 22 27 24 14 13 15 1 7 2 2 2 0 0 0 0 0 0 0 0
 75 1 1 0 0 200 0 1 0 0 1 5 10 17 15 9 10 13 12 18 19 10 18 10 15 9 4 3 0 1 0 0 0 0 0 0 0 0
 76 1 1 0 0 200 0 1 2 0 1 0 2 6 16 18 25 17 17 15 16 18 7 11 17 3 2 0 1 2 1 2 0 0 0 0 0 0
 77 1 1 0 0 200 0 0 1 2 5 13 3 3 7 8 9 21 36 22 21 9 6 10 8 5 3 3 1 2 2 0 0 0 0 0 0 0
 78 1 1 0 0 200 0 0 0 1 1 2 6 13 12 9 9 17 16 28 18 18 12 10 11 7 5 1 1 1 1 1 0 0 0 0 0 0
 79 1 1 0 0 200 0 0 0 0 0 1 1 7 7 32 31 22 11 17 16 14 13 11 7 4 1 1 3 1 0 0 0 0 0 0 0 0
 80 1 1 0 0 200 0 0 0 0 0 1 0 1 1 14 20 26 29 24 18 22 8 16 6 7 3 1 2 0 0 1 0 0 0 0 0 0
 81 1 1 0 0 200 0 0 1 0 1 3 1 1 0 4 7 22 18 33 29 17 15 18 16 6 3 2 2 1 0 0 0 0 0 0 0 0
 82 1 1 0 0 200 0 0 0 0 3 3 6 5 10 2 6 7 14 21 21 29 22 23 15 7 4 1 1 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 200 1 0 0 1 1 1 2 4 10 14 4 11 10 18 15 25 22 28 13 8 6 3 2 1 0 0 0 0 0 0 0 0
 84 1 1 0 0 200 0 1 0 0 0 0 3 5 3 7 13 22 11 19 18 19 16 20 12 10 7 7 5 1 0 1 0 0 0 0 0 0
 85 1 1 0 0 200 4 2 0 1 1 1 1 3 6 5 6 15 14 16 18 25 16 16 14 9 11 6 6 3 1 0 0 0 0 0 0 0
 86 1 1 0 0 200 0 1 0 0 3 8 6 4 6 10 10 12 13 14 18 16 23 12 17 8 10 6 2 1 0 0 0 0 0 0 0 0
 87 1 1 0 0 200 1 1 1 1 1 1 7 12 13 13 11 17 10 17 17 12 16 9 10 11 10 4 2 1 1 0 0 1 0 0 0 0
 88 1 1 0 0 200 0 0 1 1 3 3 1 4 13 17 25 15 14 19 11 12 12 16 10 9 4 2 3 2 0 1 2 0 0 0 0 0
 89 1 1 0 0 200 0 0 0 0 2 1 7 8 12 10 15 16 21 22 18 11 13 8 8 11 6 7 1 1 1 1 0 0 0 0 0 0
 90 1 1 0 0 200 0 0 0 1 2 0 4 5 9 13 19 14 16 24 26 17 11 10 7 7 5 2 2 4 1 1 0 0 0 0 0 0
 91 1 1 0 0 200 0 0 0 0 0 1 4 4 7 4 16 24 23 28 22 16 14 8 7 8 4 5 1 0 2 2 0 0 0 0 0 0
 92 1 1 0 0 200 0 0 0 0 0 2 1 1 5 7 15 25 22 23 21 22 18 10 12 6 4 2 3 1 0 0 0 0 0 0 0 0
 93 1 1 0 0 200 0 1 0 0 1 1 1 2 2 4 3 9 18 23 21 24 25 18 19 8 5 4 3 4 1 1 2 0 0 0 0 0
 94 1 1 0 0 200 0 1 0 0 1 1 2 3 4 7 6 10 13 18 24 19 28 16 14 8 12 4 2 3 2 2 0 0 0 0 0 0
 95 1 1 0 0 200 0 3 0 4 3 6 4 3 7 4 5 6 9 11 12 20 19 27 17 14 9 5 8 2 2 0 0 0 0 0 0 0
 96 1 1 0 0 200 0 2 0 3 7 10 5 14 17 13 10 12 8 12 12 7 7 15 15 11 8 6 4 1 1 0 0 0 0 0 0 0
 97 1 1 0 0 200 0 1 0 1 0 4 8 21 21 20 13 14 16 8 17 6 4 7 12 9 10 2 1 3 2 0 0 0 0 0 0 0
 98 1 1 0 0 200 0 0 0 0 0 2 2 7 12 28 33 20 26 17 2 12 7 4 9 3 2 7 2 3 1 1 0 0 0 0 0 0
 99 1 1 0 0 200 0 0 0 0 2 0 3 2 9 14 21 21 30 28 12 8 9 10 10 10 6 3 1 0 1 0 0 0 0 0 0 0
 100 1 1 0 0 200 0 0 0 0 2 0 0 1 1 3 14 23 25 34 37 15 14 8 4 6 6 4 2 1 0 0 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 177.391 0.1
2 1 1 204.873 0.1
3 1 1 228.294 0.1
4 1 1 247.524 0.1
5 1 1 262.651 0.1
6 1 1 276.372 0.1
7 1 1 292.575 0.1
8 1 1 309.957 0.1
9 1 1 323.265 0.1
10 1 1 330.58 0.1
11 1 1 334.152 0.1
12 1 1 335.932 0.1
13 1 1 335.841 0.1
14 1 1 334.733 0.1
15 1 1 335.328 0.1
16 1 1 337.465 0.1
17 1 1 337.954 0.1
18 1 1 335.787 0.1
19 1 1 334.164 0.1
20 1 1 337.183 0.1
21 1 1 345.518 0.1
22 1 1 356.396 0.1
23 1 1 366.291 0.1
24 1 1 373.226 0.1
25 1 1 376.9 0.1
26 1 1 365.455 0.1
27 1 1 822.594 0.1
28 1 1 1246.1 0.1
29 1 1 1689.43 0.1
30 1 1 2175.39 0.1
31 1 1 2627.19 0.1
32 1 1 2964.34 0.1
33 1 1 3246.34 0.1
34 1 1 3647.65 0.1
35 1 1 4200.63 0.1
36 1 1 4714.22 0.1
37 1 1 5011.41 0.1
38 1 1 5053.18 0.1
39 1 1 4875.36 0.1
40 1 1 4560.6 0.1
41 1 1 4279.05 0.1
42 1 1 4200.8 0.1
43 1 1 4269.73 0.1
44 1 1 4304.41 0.1
45 1 1 4281.34 0.1
46 1 1 4266.54 0.1
47 1 1 4209.18 0.1
48 1 1 4109.45 0.1
49 1 1 4098.14 0.1
50 1 1 4097.25 0.1
51 1 1 3885.67 0.1
52 1 1 3439.31 0.1
53 1 1 2914.25 0.1
54 1 1 2510.53 0.1
55 1 1 2396.05 0.1
56 1 1 2497.87 0.1
57 1 1 2671.42 0.1
58 1 1 2684.72 0.1
59 1 1 2504.07 0.1
60 1 1 2225.46 0.1
61 1 1 1980.66 0.1
62 1 1 1814.96 0.1
63 1 1 1851.09 0.1
64 1 1 2059.45 0.1
65 1 1 2247.6 0.1
66 1 1 2235.72 0.1
67 1 1 2039.61 0.1
68 1 1 1765.5 0.1
69 1 1 1505.01 0.1
70 1 1 1325.78 0.1
71 1 1 1250.61 0.1
72 1 1 1231.24 0.1
73 1 1 1194.11 0.1
74 1 1 1121.74 0.1
75 1 1 1072.05 0.1
76 1 1 1086.18 0.1
77 1 1 1120.87 0.1
78 1 1 1158.08 0.1
79 1 1 1218.86 0.1
80 1 1 1251.31 0.1
81 1 1 1352.31 0.1
82 1 1 1378.01 0.1
83 1 1 1374.31 0.1
84 1 1 1364.55 0.1
85 1 1 1345.85 0.1
86 1 1 1330.37 0.1
87 1 1 1366.9 0.1
88 1 1 1493.75 0.1
89 1 1 1679.48 0.1
90 1 1 1867.59 0.1
91 1 1 2015.81 0.1
92 1 1 2084.25 0.1
93 1 1 2055.41 0.1
94 1 1 1957.61 0.1
95 1 1 1847.88 0.1
96 1 1 1808.35 0.1
97 1 1 1958 0.1
98 1 1 2355 0.1
99 1 1 2856.18 0.1
100 1 1 3212.45 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 49056.9 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200  0.369125 0.97356 0.329543 0.121978 0.348169 0.542547 0.959354 1.88402 2.9186 4.33109 6.59274 9.45019 12.4798 15.1603 17.0115 17.8288 17.7687 17.3137 16.3752 14.8344 12.7159 10.2045 7.59386 5.19489 3.24143 1.83229 0.932982 0.425937 0.173692 0.063077 0.0203507 0.00770543
 27 1 1 0 0 200  0.0793969 0.21625 0.246683 1.50918 4.40805 4.61628 2.15663 1.50917 2.25695 3.57803 5.44671 7.72664 10.4656 13.4122 15.8827 17.2734 17.541 17.229 16.3785 14.9222 12.8682 10.3784 7.7481 5.30836 3.31317 1.87209 0.952599 0.434577 0.177098 0.0642779 0.0207286 0.00784478
 28 1 1 0 0 200  0.0300944 0.0807382 0.062262 0.320131 1.1207 2.61407 6.60657 11.9447 12.0427 7.58377 5.15774 5.93148 8.04926 10.5272 12.8992 14.6521 15.4677 15.594 15.0421 13.8185 11.9874 9.71679 7.28389 5.00456 3.12852 1.76878 0.899958 0.410384 0.167143 0.0606297 0.0195418 0.00739141
 29 1 1 0 0 200  0.0271222 0.0720113 0.036535 0.115203 0.374357 0.724548 1.85417 4.95618 10.5409 17.2141 19.8703 16.0249 10.8553 9.03526 9.94842 11.4686 12.5397 13.084 12.9626 12.1196 10.6271 8.67318 6.53315 4.50496 2.8234 1.5988 0.814096 0.371294 0.151192 0.0548215 0.0176613 0.00667613
 30 1 1 0 0 200  0.0351983 0.0932712 0.0426564 0.107123 0.324404 0.454493 0.715165 1.68 3.87592 8.48746 15.6794 22.3199 23.8614 19.6665 14.1846 11.2273 10.7126 11.116 11.2893 10.8123 9.64962 7.96795 6.04727 4.19084 2.63566 1.49609 0.762998 0.348302 0.141882 0.0514462 0.0165702 0.00626071
 31 1 1 0 0 200  0.32933 0.868825 0.299752 0.156798 0.444022 0.569047 0.679601 1.20501 2.02331 3.74649 7.61383 14.0393 21.28 25.4605 24.0287 18.8173 13.9303 11.4829 10.6504 10.1151 9.15985 7.68023 5.89576 4.11766 2.60313 1.48285 0.758073 0.346614 0.141338 0.0512766 0.0165187 0.00624049
 32 1 1 0 0 200  0.212831 0.567456 0.347222 1.39636 4.07326 4.31467 2.18654 1.68736 2.10425 2.77104 4.37985 7.63525 12.9907 19.3576 23.7203 23.5651 19.7024 15.2996 12.1149 10.2189 8.84725 7.3899 5.72287 4.03539 2.57018 1.47182 0.755187 0.346166 0.141399 0.0513571 0.0165562 0.00625708
 33 1 1 0 0 200  0.0567646 0.153491 0.147995 0.850289 2.65317 4.09398 6.82529 11.4154 11.5906 7.49082 4.99875 5.36618 7.67261 11.6232 16.1936 19.244 19.2706 16.9679 13.7275 10.7851 8.5371 6.74746 5.12555 3.61283 2.31435 1.33362 0.687745 0.31643 0.129598 0.0471593 0.0152227 0.00575891
 34 1 1 0 0 200  0.0633232 0.167889 0.079188 0.218088 0.734059 1.57488 3.99225 8.64119 13.6242 17.8671 19.0029 15.0915 10.1948 8.61003 10.1383 12.616 14.2108 14.2584 12.781 10.4722 8.10692 6.07515 4.4062 3.0294 1.92561 1.11077 0.575158 0.265774 0.109246 0.0398641 0.0128943 0.00488671
 35 1 1 0 0 200  0.055079 0.14629 0.0754322 0.241076 0.725819 0.96975 1.39276 3.21855 7.03057 13.2385 20.1146 24.0332 22.8959 17.8766 12.8022 10.466 10.3998 10.8781 10.6301 9.40573 7.58809 5.68313 4.00869 2.66748 1.65641 0.94457 0.487634 0.225649 0.0930324 0.0340554 0.0110456 0.00419727
 36 1 1 0 0 200  0.0338744 0.0903275 0.0555896 0.22678 0.690394 0.957334 1.3677 2.50816 3.93057 6.54485 11.8665 19.126 25.0874 26.3337 22.4939 16.6071 12.0911 10.0229 9.21148 8.40324 7.12086 5.51416 3.91909 2.57439 1.56513 0.875733 0.44659 0.205492 0.08463 0.0310217 0.010085 0.00384407
 37 1 1 0 0 200  0.0546429 0.144726 0.0644048 0.151572 0.469787 0.736061 1.30724 2.53622 3.78813 5.33752 8.0413 12.3654 18.369 24.1435 26.3603 23.6524 18.227 13.389 10.2473 8.37704 6.9378 5.46667 3.96739 2.62878 1.5903 0.878381 0.441593 0.200909 0.0821705 0.0300286 0.00975871 0.00372619
 38 1 1 0 0 200  0.0543287 0.144362 0.0760626 0.251515 0.751313 0.947265 1.0946 1.97134 3.28867 5.10683 7.50071 10.3188 14.0642 18.8444 23.178 24.6686 22.4133 18.1186 13.6341 10.0935 7.58712 5.69553 4.0969 2.73195 1.66145 0.916178 0.457087 0.205845 0.0833856 0.0302545 0.00978965 0.00373117
 39 1 1 0 0 200  0.267839 0.707208 0.259444 0.261191 0.776764 1.08942 1.57485 2.76446 3.71402 4.64682 6.53233 9.24221 12.4153 15.9275 19.4715 22.0023 22.2886 20.3244 16.7171 12.6669 9.13776 6.4284 4.4024 2.86925 1.73497 0.956536 0.476501 0.213562 0.0858945 0.0309253 0.00993946 0.00376644
 40 1 1 0 0 200  0.0699595 0.189954 0.2022 1.20345 3.53982 3.90548 2.59923 3.06487 4.32794 5.69532 7.30076 8.87779 10.8498 13.5217 16.4014 18.6907 19.7183 19.325 17.2982 14.0609 10.4787 7.29096 4.80935 3.01454 1.77542 0.96609 0.478643 0.213841 0.0856753 0.0306854 0.00980284 0.00368731
 41 1 1 0 0 200  0.123981 0.328178 0.141289 0.308711 1.05304 2.34419 5.77729 10.655 11.6575 9.30509 8.43849 9.35673 10.6252 11.9412 13.4249 14.9006 15.8882 16.1429 15.2541 13.1839 10.3621 7.4344 4.91514 3.02114 1.73095 0.91954 0.448315 0.198448 0.0790774 0.0282031 0.00897048 0.00335273
 42 1 1 0 0 200  0.114081 0.303002 0.156257 0.498502 1.48476 1.85668 2.23034 4.79615 9.86687 16.1972 19.5993 17.6174 13.944 12.1156 11.9033 12.1797 12.4701 12.6602 12.2944 11.0869 9.13112 6.82476 4.63262 2.86909 1.62918 0.849883 0.406332 0.177001 0.069741 0.0246889 0.00781165 0.00290303
 43 1 1 0 0 200  0.215599 0.570459 0.239391 0.469995 1.41724 1.95689 2.73993 4.79261 6.71062 9.47371 14.9795 20.9772 23.1476 20.3325 15.6886 12.3785 10.8659 10.3602 9.94684 9.12585 7.75895 6.01171 4.21393 2.66872 1.52985 0.795877 0.376252 0.161485 0.0627204 0.0219439 0.00688243 0.00253765
 44 1 1 0 0 200  0.0297122 0.0824142 0.130653 0.891569 2.65926 3.20641 3.15109 4.91572 7.02885 9.20478 12.1931 15.8031 19.802 22.3965 21.3177 17.1695 12.8085 10.0988 8.68502 7.69427 6.57392 5.20701 3.75075 2.43648 1.42343 0.747999 0.353972 0.150977 0.0580234 0.0200603 0.00622204 0.0022681
 45 1 1 0 0 200  0.0634759 0.167901 0.0693234 0.134903 0.508165 1.4578 4.23135 8.33217 10.3786 10.8636 12.4876 14.8549 17.206 19.262 20.0907 18.6652 15.3197 11.7501 8.96189 7.08422 5.71129 4.46897 3.25497 2.15593 1.28482 0.686086 0.327936 0.14034 0.0537964 0.0184715 0.0056769 0.00204398
 46 1 1 0 0 200  0.374784 0.989202 0.352992 0.278632 0.800088 0.984986 1.19776 2.96091 7.11475 13.1151 17.7683 18.9344 18.5722 18.5664 18.5445 17.593 15.446 12.6835 9.81855 7.35623 5.47301 4.03671 2.86838 1.89938 1.14501 0.62053 0.300591 0.129873 0.0500235 0.0171779 0.00525941 0.00187705
 47 1 1 0 0 200  0.0910891 0.247465 0.26686 1.59648 4.68343 5.06578 2.96525 2.90049 3.95086 6.20336 11.2175 17.6675 21.9737 22.315 20.1771 17.5383 14.9899 12.5687 10.0749 7.65586 5.56116 3.90467 2.64748 1.70499 1.01922 0.554619 0.271271 0.118446 0.0460214 0.0158921 0.00487571 0.00173571
 48 1 1 0 0 200  0.0489344 0.130716 0.0865169 0.390248 1.34408 3.00404 7.40207 13.5104 14.2515 10.2798 8.52094 10.5323 14.717 18.751 20.1092 18.3105 15.06 12.0684 9.53237 7.29138 5.31653 3.67928 2.41851 1.50517 0.877285 0.471519 0.230257 0.101028 0.0395482 0.0137582 0.00424534 0.00151642
 49 1 1 0 0 200  0.03731 0.0992514 0.0551554 0.199532 0.630554 1.07601 2.36207 5.97681 12.3238 19.9704 23.5429 20.1747 15.2797 13.8418 14.8244 15.2356 13.8758 11.5351 9.01682 6.76163 4.87393 3.3469 2.17027 1.3213 0.750968 0.395102 0.190366 0.0830865 0.0325528 0.0113743 0.00352962 0.00126878
 50 1 1 0 0 200  0.043897 0.116446 0.0564081 0.161218 0.494024 0.727273 1.21672 2.65359 5.31039 10.4632 18.4584 25.9074 27.9512 23.8005 17.9075 14.0615 12.0856 10.5495 8.69131 6.65813 4.78308 3.2445 2.07562 1.2446 0.694582 0.358284 0.169568 0.0730433 0.0284083 0.00990466 0.00307832 0.00111198
 51 1 1 0 0 200  0.0883619 0.233876 0.100081 0.209064 0.626435 0.832673 1.0962 2.02943 3.36898 5.73322 10.2996 17.23 24.7536 28.999 27.295 21.3668 15.3145 11.358 8.85971 6.86646 5.04002 3.44687 2.19395 1.29979 0.71456 0.362566 0.168738 0.071572 0.0274923 0.00950501 0.00294136 0.00106215
 52 1 1 0 0 200  0.239538 0.633467 0.257284 0.446477 1.31464 1.6023 1.6257 2.53994 3.56403 4.79976 7.20347 11.2171 17.0088 23.3493 27.2402 26.2785 21.3548 15.6852 11.0872 7.86213 5.56168 3.79366 2.42606 1.43592 0.783062 0.39236 0.179965 0.0752094 0.0284924 0.00973547 0.00298583 0.0010712
 53 1 1 0 0 200  0.418086 1.10742 0.494829 1.16586 3.43181 4.0337 3.55403 4.90626 5.98671 6.32237 7.36654 9.25363 12.2115 16.416 20.7257 22.9764 21.8562 18.2824 13.7275 9.56264 6.38972 4.15066 2.59141 1.52224 0.82723 0.411999 0.187149 0.0772681 0.0288947 0.00974983 0.00295699 0.00104921
 54 1 1 0 0 200  0.214242 0.57281 0.390654 1.76083 5.27075 6.58844 7.12148 10.7546 12.4771 11.4568 10.9315 10.776 10.8498 11.9004 13.8195 15.627 16.1859 15.1593 12.676 9.50096 6.49533 4.13933 2.49535 1.4237 0.76055 0.375302 0.169274 0.0693194 0.0256664 0.00856547 0.00256892 0.000899722
 55 1 1 0 0 200  0.169438 0.450241 0.237731 0.797154 2.51546 4.17737 7.89373 14.6206 18.5015 19.0955 19.0806 17.1684 13.9705 11.5489 10.3829 10.0974 10.0894 9.84238 8.88764 7.23869 5.29183 3.49844 2.11852 1.18842 0.620263 0.300128 0.133537 0.0541606 0.019887 0.00657951 0.00195486 0.000676158
 56 1 1 0 0 200  0.118813 0.316003 0.173949 0.616841 1.88126 2.66496 4.09876 8.27768 14.0508 20.7612 25.8914 25.912 21.9611 16.8826 12.2936 9.09369 7.35426 6.53325 5.88438 5.01216 3.8924 2.72055 1.71178 0.975802 0.507719 0.24224 0.105988 0.0423619 0.0153779 0.00504143 0.00148576 0.000508653
 57 1 1 0 0 200  0.0469261 0.125833 0.0951048 0.468787 1.44023 2.08222 3.24574 6.15814 9.47968 13.9196 20.3718 26.2513 28.2734 25.2423 19.0483 12.8218 8.40255 5.94664 4.63766 3.76797 2.9648 2.15437 1.41511 0.835188 0.443524 0.212789 0.0925662 0.0365629 0.0130976 0.00424174 0.00123703 0.000418633
 58 1 1 0 0 200  0.066835 0.17711 0.0812016 0.207406 0.663966 1.19174 2.53101 5.17977 7.99479 11.4106 16.1206 21.1777 25.5104 27.277 24.8226 19.0067 12.6688 8.0081 5.1753 3.57331 2.58313 1.8424 1.23102 0.748415 0.409033 0.200367 0.0880694 0.0348093 0.0123911 0.00397318 0.00114608 0.000382827
 59 1 1 0 0 200  0.33202 0.876651 0.320949 0.317149 0.927487 1.19598 1.5044 2.98603 5.57773 9.4716 14.2206 18.71 22.6186 25.3046 25.4537 22.3606 17.0402 11.6429 7.36122 4.52474 2.83375 1.82325 1.16406 0.704447 0.390994 0.195624 0.0876074 0.0350578 0.0125428 0.00401624 0.00115165 0.000380497
 60 1 1 0 0 200  0.101893 0.275661 0.268859 1.53608 4.5153 4.96462 3.21608 3.5696 4.77926 6.50997 9.99325 14.8075 19.5302 22.806 23.8289 22.3001 18.643 14.138 9.71354 6.11869 3.63862 2.11585 1.22515 0.697457 0.378122 0.189346 0.0858328 0.0348552 0.0126238 0.00407283 0.00117072 0.000385428
 61 1 1 0 0 200  0.888775 2.34489 0.813412 0.471269 1.50649 3.14803 7.38574 13.4675 14.5321 11.1112 9.51983 10.7588 13.5078 16.6854 18.7872 18.7269 16.6396 13.5483 10.0744 6.81006 4.20566 2.41227 1.3149 0.692795 0.352588 0.170291 0.0762412 0.0310331 0.0113419 0.00369722 0.00107177 0.000354761
 62 1 1 0 0 200  0.108058 0.299655 0.473018 3.21352 9.41231 10.0377 5.55387 6.15174 11.3953 18.0423 21.3184 18.5545 14.0629 12.0828 12.2073 12.458 11.771 10.2439 8.14165 5.87919 3.85083 2.29525 1.25703 0.641688 0.309272 0.141284 0.0607011 0.0241567 0.0087639 0.00286267 0.000835134 0.000278799
 63 1 1 0 0 200  0.12604 0.333893 0.150744 0.38447 1.44756 4.09142 11.5756 21.4765 22.5859 16.753 15.3405 18.2323 19.1975 16.2545 12.0218 9.0959 7.60054 6.64108 5.55298 4.26232 2.96301 1.85999 1.05668 0.546727 0.26 0.114687 0.0471532 0.0180319 0.00635983 0.00204558 0.000593623 0.000198642
 64 1 1 0 0 200  0.0706767 0.188281 0.111278 0.431961 1.29771 1.70849 2.51664 6.51744 15.1466 26.2363 31.6436 27.4215 20.6064 16.641 13.8282 10.4336 7.29075 5.2677 4.04178 3.10925 2.25201 1.48655 0.884539 0.473955 0.22952 0.101059 0.0407204 0.0150837 0.00513996 0.00160525 0.000456306 0.00015078
 65 1 1 0 0 200  0.0710005 0.188421 0.0932457 0.278294 0.859279 1.30103 2.17995 4.17166 6.62923 11.3656 20.4127 30.115 33.4707 28.4674 20.1494 13.3793 8.93002 6.04528 4.1152 2.84693 1.97276 1.31262 0.807091 0.44919 0.224667 0.100984 0.0409283 0.0150234 0.00501364 0.00152401 0.000421586 0.000135604
 66 1 1 0 0 200  0.0347982 0.0931467 0.066258 0.310508 0.941435 1.27172 1.74329 3.27554 5.28969 8.09487 12.5104 18.8428 26.3718 31.3132 29.7047 22.5467 14.5519 8.88448 5.46206 3.43164 2.17833 1.36867 0.826804 0.465601 0.238878 0.1103 0.0456438 0.0169335 0.00564575 0.00169647 0.000460408 0.000143954
 67 1 1 0 0 200  0.152498 0.402742 0.149851 0.16824 0.524156 0.901396 1.80361 3.54203 5.14949 7.01484 10.1215 14.3425 19.5331 24.9222 28.1646 26.797 21.1868 14.467 8.87722 5.15403 2.95681 1.69959 0.964941 0.526689 0.268905 0.125662 0.0529969 0.0200251 0.00676231 0.00204148 0.000551839 0.000169807
 68 1 1 0 0 200  0.269555 0.71384 0.315006 0.716507 2.09119 2.33506 1.69805 2.4057 4.20345 6.81108 9.86588 12.8475 16.2159 20.1386 23.5536 24.7206 22.6419 18.2013 12.8034 7.98065 4.53889 2.44234 1.27687 0.651167 0.318787 0.146371 0.0617342 0.023565 0.00806755 0.00246569 0.000671669 0.000206669
 69 1 1 0 0 200  0.263684 0.700531 0.365833 1.19209 3.55361 4.40631 4.62488 6.76842 7.5325 6.85473 7.90524 10.7914 14.0495 16.9105 19.1836 20.4152 19.9321 17.7448 14.0974 9.88522 6.13468 3.4201 1.75323 0.845948 0.389184 0.170232 0.0697884 0.0263542 0.00903421 0.00278283 0.000765533 0.000237788
 70 1 1 0 0 200  0.0631123 0.171124 0.176505 1.04318 3.18696 4.43349 6.27873 10.7537 13.4081 13.5691 13.3721 12.5022 12.0001 13.0133 14.6179 15.5645 15.427 14.3725 12.3034 9.46383 6.46142 3.90812 2.10878 1.02921 0.461928 0.19321 0.0756611 0.0275975 0.00927192 0.00283439 0.000780426 0.000244161
 71 1 1 0 0 200  0.124571 0.329457 0.134613 0.245758 0.831659 1.84116 4.68773 9.67983 14.0509 17.6464 20.4359 20.1286 17.3641 14.473 12.6375 11.8588 11.4352 10.8331 9.65263 7.87573 5.78109 3.77678 2.18759 1.1263 0.519436 0.216907 0.082888 0.0291851 0.00947581 0.00282299 0.000765446 0.000238022
 72 1 1 0 0 200  0.076071 0.202707 0.121181 0.475861 1.41192 1.69863 1.79321 3.69317 7.94224 14.4849 21.0937 24.7131 24.6087 21.4759 16.9086 12.8759 10.2895 8.89118 7.81864 6.56119 5.05405 3.50212 2.16071 1.18186 0.573275 0.247587 0.0958362 0.0335008 0.0106438 0.00308402 0.000814487 0.000247463
 73 1 1 0 0 200  0.513176 1.35419 0.476225 0.323836 0.962844 1.46689 2.44425 4.40327 5.87274 7.85988 12.8036 19.8443 25.4448 26.6527 23.4246 18.0133 12.9414 9.52439 7.41815 5.9298 4.59246 3.29264 2.12996 1.22765 0.627084 0.283554 0.113705 0.0405914 0.0129654 0.00372424 0.000965802 0.000285541
 74 1 1 0 0 200  0.0986174 0.269332 0.325248 2.03478 5.96389 6.40332 3.62107 3.62179 5.41605 7.75598 10.5139 13.6604 17.9253 22.2978 23.9079 21.4419 16.5775 11.9063 8.39911 6.02534 4.36914 3.08151 2.0279 1.21033 0.645078 0.304805 0.127356 0.0470648 0.0154144 0.00448829 0.00116611 0.000340618
 75 1 1 0 0 200  0.09036 0.239871 0.120873 0.383642 1.35366 3.26399 8.45788 15.5276 16.3274 11.7723 9.74964 11.1651 13.5991 16.0587 17.9487 18.1565 16.1196 12.803 9.30153 6.4021 4.30778 2.85386 1.82441 1.09103 0.594467 0.290185 0.125756 0.0481841 0.016304 0.004875 0.00129036 0.000380494
 76 1 1 0 0 200  0.652941 1.72269 0.597601 0.339686 0.981184 1.38841 2.31736 5.76746 12.4546 20.7572 24.7046 21.1964 15.7977 13.5157 13.5893 13.7545 12.9685 11.294 8.95646 6.47943 4.35125 2.7703 1.68932 0.97924 0.529174 0.261084 0.115749 0.0456517 0.0159311 0.00490727 0.00133356 0.000403002
 77 1 1 0 0 200  0.109301 0.29869 0.365074 2.29345 6.71382 7.14044 3.75929 3.33738 5.2411 9.32963 16.4391 23.6223 25.9136 22.1789 16.4989 12.5957 10.6045 9.29708 7.79422 6.01463 4.2372 2.74201 1.64869 0.928352 0.488784 0.238106 0.105789 0.0423069 0.0150828 0.00476414 0.00132877 0.000413785
 78 1 1 0 0 200  0.0331039 0.0889944 0.0732542 0.395257 1.40541 3.41696 8.88858 16.256 16.8391 11.7128 9.85186 13.0496 18.187 21.5236 20.5472 16.2052 11.5899 8.53566 6.64288 5.16229 3.78133 2.54265 1.56193 0.880013 0.456815 0.218562 0.0958873 0.0382347 0.0137238 0.00439757 0.00125036 0.000400177
 79 1 1 0 0 200  0.0344695 0.0913958 0.0432614 0.119381 0.392221 0.798121 2.16091 5.93987 12.9395 21.557 25.5317 21.8737 16.8898 15.7772 16.6185 15.912 13.0534 9.66851 6.86188 4.8699 3.43904 2.32895 1.4639 0.840825 0.439685 0.209486 0.0909639 0.0359125 0.0128263 0.00411767 0.00118068 0.000384812
 80 1 1 0 0 200  0.168504 0.444794 0.159903 0.135772 0.396775 0.529823 0.757582 1.78358 4.29572 9.72875 18.3731 26.7132 29.4283 25.5242 19.661 15.5943 12.9665 10.5292 7.92223 5.55585 3.7261 2.41629 1.49572 0.863788 0.457088 0.219605 0.0954874 0.0375359 0.0133204 0.00425554 0.0012191 0.000399921
 81 1 1 0 0 200  0.0924401 0.246855 0.16082 0.69143 2.02555 2.20492 1.35292 1.46435 2.23356 4.00591 8.26346 15.6236 24.2139 29.6424 28.7526 23.0769 16.8011 12.3226 9.1726 6.62549 4.50519 2.87516 1.73048 0.979362 0.515035 0.248231 0.108529 0.0427963 0.0151787 0.00483396 0.00137987 0.000452015
 82 1 1 0 0 200  0.0700756 0.186512 0.106112 0.395993 1.24313 2.00225 3.56595 6.14413 6.58547 5.17359 5.29223 8.24589 14.0105 21.2332 26.505 26.7467 22.4243 16.7796 11.8403 8.14884 5.46073 3.4889 2.09055 1.16684 0.604184 0.28832 0.125686 0.0496306 0.0176426 0.00562402 0.001604 0.000524215
 83 1 1 0 0 200  0.0884526 0.2345 0.110104 0.294751 0.905958 1.35751 2.30342 4.70963 7.7232 10.6958 12.1972 11.3604 10.9987 13.7223 18.4816 22.071 22.1908 19.2762 14.7945 10.3399 6.7748 4.22188 2.49405 1.38042 0.708291 0.334443 0.144458 0.056727 0.0201273 0.00641801 0.00183186 0.000598658
 84 1 1 0 0 200  0.13348 0.353533 0.15733 0.367821 1.10077 1.43877 1.8233 3.35283 5.51239 8.61309 12.6886 15.9023 16.7716 15.9639 15.7161 16.9456 18.1762 17.8961 15.5684 11.9539 8.22734 5.17655 3.02299 1.64728 0.834581 0.390148 0.167019 0.0650673 0.022946 0.00728975 0.00207737 0.000678666
 85 1 1 0 0 200  0.386292 1.02081 0.395739 0.558092 1.64344 2.06157 2.28619 3.7098 5.17838 6.85997 9.84278 13.6846 17.1792 18.942 18.5443 17.1556 16.1055 15.5401 14.384 12.0866 9.03865 6.0266 3.62096 1.9829 0.996893 0.460749 0.195138 0.0753308 0.0263628 0.00832356 0.00236122 0.000768905
 86 1 1 0 0 200  0.0861338 0.234029 0.25308 1.51806 4.48884 5.13117 4.03813 5.24785 6.65901 7.57792 9.23766 11.4769 14.1296 16.7426 18.138 17.6726 16.0214 14.3857 12.8521 11.0253 8.71596 6.19461 3.92847 2.22909 1.13915 0.527501 0.222049 0.0849574 0.0294684 0.00923186 0.00260206 0.000842242
 87 1 1 0 0 200  0.337765 0.891841 0.327329 0.339005 1.14167 2.5804 6.46251 12.1426 13.9346 12.2079 11.53 11.9749 12.7218 13.8429 14.9083 15.1739 14.3648 12.993 11.3503 9.55848 7.61607 5.59517 3.71355 2.20368 1.16661 0.552292 0.234716 0.0898281 0.0310003 0.00964206 0.0026977 0.000866196
 88 1 1 0 0 200  0.126692 0.339449 0.249389 1.19287 3.50639 3.90658 2.9213 4.82898 9.95205 16.7318 20.9429 19.8055 16.4193 14.1498 13.1623 12.5798 11.8582 10.9331 9.68192 8.15735 6.48664 4.80505 3.26181 1.99973 1.09677 0.535889 0.233197 0.0905351 0.0314283 0.00977131 0.00272248 0.000867644
 89 1 1 0 0 200  0.105446 0.280042 0.143999 0.463488 1.48091 2.58809 5.12979 9.21541 10.7257 10.9082 14.4925 20.1004 22.8351 20.8217 16.5268 12.8843 10.6401 9.31727 8.19239 6.94912 5.56423 4.1491 2.84749 1.77786 0.999542 0.502225 0.224542 0.0891871 0.0314792 0.00988505 0.00276531 0.000880087
 90 1 1 0 0 200  0.025288 0.0684511 0.067745 0.392598 1.19922 1.68203 2.5658 5.3201 9.4056 14.1794 17.7447 18.9229 19.9237 21.1936 20.3048 16.7017 12.4973 9.48793 7.58529 6.19452 4.92719 3.69201 2.55639 1.61555 0.923096 0.473246 0.216431 0.0879573 0.0317006 0.0101262 0.00286793 0.000920121
 91 1 1 0 0 200  0.0460315 0.121801 0.0512842 0.104076 0.350209 0.7581 1.90733 4.01779 6.33311 9.66472 14.8229 20.0215 22.9538 23.0777 21.4534 18.7432 15.1433 11.5354 8.55085 6.3785 4.78802 3.50694 2.42238 1.54132 0.890691 0.463279 0.215523 0.0892629 0.0328074 0.0106789 0.00307548 0.00100276
 92 1 1 0 0 200  0.058759 0.155778 0.0730902 0.194034 0.575277 0.707752 0.80595 1.71287 3.72339 7.08507 11.447 16.2356 21.0397 24.3841 24.6694 22.022 17.9839 14.0377 10.5202 7.6126 5.386 3.73594 2.50003 1.57356 0.911071 0.477975 0.225098 0.0945925 0.0353274 0.0116929 0.00342362 0.00113759
 93 1 1 0 0 200  0.109597 0.290095 0.124459 0.261914 0.782023 1.01459 1.22646 2.0262 2.80285 4.04871 7.07106 11.9147 17.4658 22.2574 24.9254 24.5319 21.4546 17.3542 13.2112 9.56721 6.63785 4.43215 2.84391 1.7347 0.988406 0.516797 0.244532 0.103729 0.0392095 0.0131559 0.00390806 0.00132281
 94 1 1 0 0 200  0.316292 0.836008 0.328516 0.49466 1.45305 1.77781 1.82155 2.82169 3.77807 4.56446 5.95463 8.33841 12.2787 17.4188 21.9362 23.9279 22.9017 19.9486 15.9782 11.8744 8.271 5.44365 3.39793 2.00715 1.11266 0.571613 0.268491 0.113969 0.0433406 0.0146781 0.00440961 0.00151657
 95 1 1 0 0 200  0.694294 1.83625 0.750035 1.32854 3.88043 4.47317 3.64342 4.79415 5.87643 6.24301 7.06636 8.21937 9.88607 12.6482 16.2167 19.214 20.2656 19.2911 16.6236 13.0384 9.37987 6.24077 3.86708 2.23969 1.21101 0.607768 0.280567 0.117941 0.0447274 0.0151876 0.00459177 0.00159785
 96 1 1 0 0 200  0.21714 0.58373 0.477463 2.47172 7.33945 8.66985 7.74298 10.5126 11.8553 10.5021 9.79198 9.64925 9.58757 10.1008 11.3517 12.9649 14.1937 14.5169 13.5183 11.3556 8.61476 5.93459 3.73697 2.16335 1.15523 0.569009 0.257604 0.106542 0.0399625 0.0134965 0.00407848 0.00142666
 97 1 1 0 0 200  0.0792122 0.211949 0.148962 0.701392 2.29163 4.31592 9.32748 17.3325 20.5911 18.9587 17.3121 15.057 12.1469 10.0697 9.0816 8.86558 9.06428 9.31667 9.08315 8.10628 6.52421 4.72028 3.07757 1.81645 0.974915 0.477263 0.213269 0.0868423 0.0321021 0.0107193 0.00321602 0.00112196
 98 1 1 0 0 200  0.0348619 0.0930744 0.0602027 0.261197 0.834199 1.46742 3.21668 7.543 14.2464 22.452 27.8414 26.4531 20.9786 15.4312 11.1588 8.42017 7.04358 6.54166 6.24299 5.70847 4.80093 3.6438 2.47951 1.51232 0.828839 0.409475 0.182824 0.0738608 0.0269877 0.00890055 0.00264121 0.000912715
 99 1 1 0 0 200  0.0630734 0.16685 0.0690867 0.130261 0.406013 0.669674 1.34339 3.09134 6.20732 11.8686 20.1721 27.9663 30.859 27.1917 19.8947 13.0902 8.64809 6.3872 5.29954 4.60817 3.89053 3.03921 2.14591 1.35658 0.765882 0.386431 0.174587 0.070769 0.0257712 0.00843358 0.00247815 0.000845949
 100 1 1 0 0 200  0.0710109 0.188374 0.0912677 0.259265 0.767263 0.922547 0.924924 1.63623 3.08831 5.92423 11.0891 18.5502 26.4493 30.976 29.3068 22.6369 15.0426 9.57923 6.42611 4.73823 3.6934 2.8339 2.0287 1.31684 0.76524 0.396262 0.182689 0.0750477 0.0275061 0.00900527 0.00263521 0.000891171
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
