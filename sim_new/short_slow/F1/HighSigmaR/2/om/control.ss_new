#V3.30.14.00-safe;_2019_07_19;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_data_and_control_files: short_slowOM.dat // short_slowOM.ctl
0  # 0 means do not read wtatage.ss; 1 means read and use wtatage.ss and also read and use growth parameters
1  #_N_Growth_Patterns (Growth Patterns, Morphs, Bio Patterns, GP are terms used interchangeably in SS)
1 #_N_platoons_Within_GrowthPattern 
#_Cond 1 #_Platoon_between/within_stdev_ratio (no read if N_platoons=1)
#_Cond  1 #vector_platoon_dist_(-1_in_first_val_gives_normal_approx)
#
2 # recr_dist_method for parameters:  2=main effects for GP, Area, Settle timing; 3=each Settle entity; 4=none (only when N_GP*Nsettle*pop==1)
1 # not yet implemented; Future usage: Spawner-Recruitment: 1=global; 2=by area
1 #  number of recruitment settlement assignments 
0 # unused option
#GPattern month  area  age (for each settlement assignment)
 1 1 1 0
#
#_Cond 0 # N_movement_definitions goes here if Nareas > 1
#_Cond 1.0 # first age that moves (real age at begin of season, not integer) also cond on do_migration>0
#_Cond 1 1 1 2 4 10 # example move definition for seas=1, morph=1, source=1 dest=2, age1=4, age2=10
#
0 #_Nblock_Patterns
#_Cond 0 #_blocks_per_pattern 
# begin and end years of blocks
#
# controls for all timevary parameters 
1 #_env/block/dev_adjust_method for all time-vary parms (1=warn relative to base parm bounds; 3=no bound check)
#
# AUTOGEN
0 0 0 0 0 # autogen: 1st element for biology, 2nd for SR, 3rd for Q, 4th reserved, 5th for selex
# where: 0 = autogen all time-varying parms; 1 = read each time-varying parm line; 2 = read then autogen if parm min==-12345
#
#_Available timevary codes
#_Block types: 0: P_block=P_base*exp(TVP); 1: P_block=P_base+TVP; 2: P_block=TVP; 3: P_block=P_block(-1) + TVP
#_Block_trends: -1: trend bounded by base parm min-max and parms in transformed units (beware); -2: endtrend and infl_year direct values; -3: end and infl as fraction of base range
#_EnvLinks:  1: P(y)=P_base*exp(TVP*env(y));  2: P(y)=P_base+TVP*env(y);  3: null;  4: P(y)=2.0/(1.0+exp(-TVP1*env(y) - TVP2))
#_DevLinks:  1: P(y)*=exp(dev(y)*dev_se;  2: P(y)+=dev(y)*dev_se;  3: random walk;  4: zero-reverting random walk with rho;  21-24 keep last dev for rest of years
#
#_Prior_codes:  0=none; 6=normal; 1=symmetric beta; 2=CASAL's beta; 3=lognormal; 4=lognormal with biascorr; 5=gamma
#
# setup for M, growth, maturity, fecundity, recruitment distibution, movement 
#
0 #_natM_type:_0=1Parm; 1=N_breakpoints;_2=Lorenzen;_3=agespecific;_4=agespec_withseasinterpolate
  #_no additional input for selected M option; read 1P per morph
#
1 # GrowthModel: 1=vonBert with L1&L2; 2=Richards with L1&L2; 3=age_specific_K_incr; 4=age_specific_K_decr; 5=age_specific_K_each; 6=NA; 7=NA; 8=growth cessation
0 #_Age(post-settlement)_for_L1;linear growth below this
999 #_Growth_Age_for_L2 (999 to use as Linf)
-999 #_exponential decay for growth above maxage (value should approx initial Z; -999 replicates 3.24; -998 to not allow growth above maxage)
0  #_placeholder for future growth feature
#
0 #_SD_add_to_LAA (set to 0.1 for SS2 V1.x compatibility)
0 #_CV_Growth_Pattern:  0 CV=f(LAA); 1 CV=F(A); 2 SD=F(LAA); 3 SD=F(A); 4 logSD=F(A)
#
1 #_maturity_option:  1=length logistic; 2=age logistic; 3=read age-maturity matrix by growth_pattern; 4=read age-fecundity; 5=disabled; 6=read length-maturity
0 #_First_Mature_Age
1 #_fecundity option:(1)eggs=Wt*(a+b*Wt);(2)eggs=a*L^b;(3)eggs=a*Wt^b; (4)eggs=a+b*L; (5)eggs=a+b*W
0 #_hermaphroditism option:  0=none; 1=female-to-male age-specific fxn; -1=male-to-female age-specific fxn
1 #_parameter_offset_approach (1=none, 2= M, G, CV_G as offset from female-GP1, 3=like SS2 V1.x)
#
#_growth_parms
#_ LO HI INIT PRIOR PR_SD PR_type PHASE env_var&link dev_link dev_minyr dev_maxyr dev_PH Block Block_Fxn
# Sex: 1  BioPattern: 1  NatMort
 0.01 1.8 0.18 -1.715 0.5 3 -3 0 0 0 0 0 0 0 # NatM_p_1_Fem_GP_1
# Sex: 1  BioPattern: 1  Growth
 1 80 8.6 8.6 0.2 0 -2 0 0 0 0 0 0 0 # L_at_Amin_Fem_GP_1
 25 250 55 55 0.2 0 -5 0 0 0 0 0 0 0 # L_at_Amax_Fem_GP_1
 0.01 2 0.17 0.17 0.8 0 -2 0 0 0 0 0 0 0 # VonBert_K_Fem_GP_1
 -0.01 0.5 0.1 0.1 0.8 0 -3 0 0 0 0 0 0 0 # CV_young_Fem_GP_1
 0.01 0.5 0.1 0.1 0.8 0 -5 0 0 0 0 0 0 0 # CV_old_Fem_GP_1
# Sex: 1  BioPattern: 1  WtLen
 0 3 6.8e-06 6.8e-06 0 0 -1 0 0 0 0 0 0 0 # Wtlen_1_Fem_GP_1
 2.5 3.5 3.101 3.101 0.2 0 -3 0 0 0 0 0 0 0 # Wtlen_2_Fem_GP_1
# Sex: 1  BioPattern: 1  Maturity&Fecundity
 10 50 36.3 36.3 0 0 -3 0 0 0 0 0 0 0 # Mat50%_Fem_GP_1
 -2 2 -0.276 0 0 0 -3 0 0 0 0 0 0 0 # Mat_slope_Fem_GP_1
 -3 3 1 0 0 0 -3 0 0 0 0 0 0 0 # Eggs/kg_inter_Fem_GP_1
 -3 4 0 0 0 0 -3 0 0 0 0 0 0 0 # Eggs/kg_slope_wt_Fem_GP_1
# Hermaphroditism
#  Recruitment Distribution  
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_GP_1
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_Area_1
 -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 # RecrDist_month_1
#  Cohort growth dev base
 -4 4 1 0 0 0 -4 0 0 0 0 0 0 0 # CohortGrowDev
#  Movement
#  Age Error from parameters
#  catch multiplier
#  fraction female, by GP
 1e-06 0.999999 0.5 0.5 0.5 0 -99 0 0 0 0 0 0 0 # FracFemale_GP_1
#
#_no timevary MG parameters
#
#_seasonal_effects_on_biology_parms
 0 0 0 0 0 0 0 0 0 0 #_femwtlen1,femwtlen2,mat1,mat2,fec1,fec2,Malewtlen1,malewtlen2,L1,K
#_ LO HI INIT PRIOR PR_SD PR_type PHASE
#_Cond -2 2 0 0 -1 99 -2 #_placeholder when no seasonal MG parameters
#
3 #_Spawner-Recruitment; Options: 2=Ricker; 3=std_B-H; 4=SCAA; 5=Hockey; 6=B-H_flattop; 7=survival_3Parm; 8=Shepherd_3Parm; 9=RickerPower_3parm
0  # 0/1 to use steepness in initial equ recruitment calculation
0  #  future feature:  0/1 to make realized sigmaR a function of SR curvature
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn #  parm_name
             5            20            10            10            10             0          1          0          0          0          0          0          0          0 # SR_LN(R0)
           0.2             1           0.7           0.7          0.05             0         -4          0          0          0          0          0          0          0 # SR_BH_steep
             0             2           0.8           0.8           0.8             0         -5          0          0          0          0          0          0          0 # SR_sigmaR
            -5             5             0             0             1             0         -4          0          0          0          0          0          0          0 # SR_regime
             0             0             0             0             0             0        -99          0          0          0          0          0          0          0 # SR_autocorr
#_no timevary SR parameters
1 #do_recdev:  0=none; 1=devvector (R=F(SSB)+dev); 2=deviations (R=F(SSB)+dev); 3=deviations (R=R0*dev; dev2=R-f(SSB)); 4=like 3 with sum(dev2) adding penalty
1 # first year of main recr_devs; early devs can preceed this era
100 # last year of main recr_devs; forecast devs start in following year
-2 #_recdev phase 
1 # (0/1) to read 13 advanced options
 -29 #_recdev_early_start (0=none; neg value makes relative to recdev_start)
 -4 #_recdev_early_phase
 0 #_forecast_recruitment phase (incl. late recr) (0 value resets to maxphase+1)
 1 #_lambda for Fcast_recr_like occurring before endyr+1
 1 #_last_yr_nobias_adj_in_MPD; begin of ramp
 1 #_first_yr_fullbias_adj_in_MPD; begin of plateau
 100 #_last_yr_fullbias_adj_in_MPD
 100 #_end_yr_for_ramp_in_MPD (can be in forecast to shape ramp, but SS sets bias_adj to 0.0 for fcast yrs)
 1 #_max_bias_adj_in_MPD (-1 to override ramp and set biasadj=1.0 for all estimated recdevs)
 0 #_period of cycles in recruitment (N parms read below)
 -5 #min rec_dev
 5 #max rec_dev
 140 #_read_recdevs
#_end of advanced SR options
#
#_placeholder for full parameter lines for recruitment cycles
# Specified recr devs to read
#_Yr Input_value # Final_value
 -29 0.561427 #  not used 
 -28 -0.209758 # -0.209758
 -27 -1.25772 # -1.25772
 -26 -1.21173 # -1.21173
 -25 -1.28123 # -1.28123
 -24 -0.424725 # -0.424725
 -23 -1.1694 # -1.1694
 -22 0.550333 # 0.550333
 -21 1.68009 # 1.68009
 -20 -1.02962 # -1.02962
 -19 0.630191 # 0.630191
 -18 0.615234 # 0.615234
 -17 0.265762 # 0.265762
 -16 -0.806701 # -0.806701
 -15 -0.0955621 # -0.0955621
 -14 -0.224316 # -0.224316
 -13 0.450392 # 0.450392
 -12 -0.297951 # -0.297951
 -11 0.781579 # 0.781579
 -10 -0.299665 # -0.299665
 -9 0.842169 # 0.842169
 -8 -0.839342 # -0.839342
 -7 -1.00812 # -1.00812
 -6 2.59283 # 2.59283
 -5 -0.333486 # -0.333486
 -4 0.238582 # 0.238582
 -3 0.509256 # 0.509256
 -2 -0.387025 # -0.387025
 -1 0.41349 # 0.41349
 0 0.295172 # 0.295172
 1 -0.172304 # -0.172304
 2 0.0522344 # 0.0522344
 3 -0.0272538 # -0.0272538
 4 1.70276 # 1.70276
 5 -0.593069 # -0.593069
 6 -0.876797 # -0.876797
 7 0.0302307 # 0.0302307
 8 0.248385 # 0.248385
 9 0.349219 # 0.349219
 10 -0.366692 # -0.366692
 11 -0.850661 # -0.850661
 12 1.01055 # 1.01055
 13 -0.27972 # -0.27972
 14 -0.69241 # -0.69241
 15 -0.189024 # -0.189024
 16 -0.157741 # -0.157741
 17 0.887936 # 0.887936
 18 0.0677898 # 0.0677898
 19 0.603243 # 0.603243
 20 -0.399434 # -0.399434
 21 0.171556 # 0.171556
 22 -0.259749 # -0.259749
 23 0.0756668 # 0.0756668
 24 -0.716291 # -0.716291
 25 -1.04864 # -1.04864
 26 1.59777 # 1.59777
 27 0.480567 # 0.480567
 28 -1.00102 # -1.00102
 29 -0.488933 # -0.488933
 30 -0.948384 # -0.948384
 31 1.75905 # 1.75905
 32 1.04993 # 1.04993
 33 -0.212116 # -0.212116
 34 0.434555 # 0.434555
 35 -0.331472 # -0.331472
 36 -0.380998 # -0.380998
 37 -0.630882 # -0.630882
 38 -0.475694 # -0.475694
 39 1.32073 # 1.32073
 40 -0.0432225 # -0.0432225
 41 0.0953962 # 0.0953962
 42 0.19495 # 0.19495
 43 0.985981 # 0.985981
 44 -0.412851 # -0.412851
 45 -0.794006 # -0.794006
 46 1.34056 # 1.34056
 47 -0.352931 # -0.352931
 48 -0.578453 # -0.578453
 49 -0.989018 # -0.989018
 50 -1.02777 # -1.02777
 51 -0.459179 # -0.459179
 52 0.494389 # 0.494389
 53 0.887879 # 0.887879
 54 0.566071 # 0.566071
 55 -0.290926 # -0.290926
 56 0.0477999 # 0.0477999
 57 -0.563677 # -0.563677
 58 -0.573775 # -0.573775
 59 0.70772 # 0.70772
 60 -0.812474 # -0.812474
 61 1.56424 # 1.56424
 62 -0.0722557 # -0.0722557
 63 0.171631 # 0.171631
 64 -0.590822 # -0.590822
 65 -0.459511 # -0.459511
 66 -1.05361 # -1.05361
 67 -0.14634 # -0.14634
 68 0.335186 # 0.335186
 69 0.259443 # 0.259443
 70 -0.625229 # -0.625229
 71 -0.630898 # -0.630898
 72 -0.401759 # -0.401759
 73 1.19685 # 1.19685
 74 -0.909843 # -0.909843
 75 -0.143241 # -0.143241
 76 1.52189 # 1.52189
 77 -0.0807799 # -0.0807799
 78 -1.08787 # -1.08787
 79 -0.531816 # -0.531816
 80 0.388368 # 0.388368
 81 -0.300482 # -0.300482
 82 -0.449501 # -0.449501
 83 -0.275134 # -0.275134
 84 0.0723973 # 0.0723973
 85 1.27881 # 1.27881
 86 -0.0708521 # -0.0708521
 87 0.86464 # 0.86464
 88 0.504603 # 0.504603
 89 -0.0909119 # -0.0909119
 90 -1.22632 # -1.22632
 91 -0.416894 # -0.416894
 92 -0.391896 # -0.391896
 93 0.0377235 # 0.0377235
 94 1.04016 # 1.04016
 95 1.83446 # 1.83446
 96 1.23806 # 1.23806
 97 -0.106521 # -0.106521
 98 -1.40522 # -1.40522
 99 -0.311024 # -0.311024
 100 0.0713658 # 0.0713658
 101 0.67601 # 0.67601
 102 0.770022 # 0.770022
 103 0.547448 # 0.547448
 104 -1.11622 # -1.11622
 105 0.679714 # 0.679714
 106 -0.357246 # -0.357246
 107 0.139842 # 0.139842
 108 0.0596409 # 0.0596409
 109 0.342533 # 0.342533
 110 0.01974 # 0.01974
#
# all recruitment deviations
#  -28E -27E -26E -25E -24E -23E -22E -21E -20E -19E -18E -17E -16E -15E -14E -13E -12E -11E -10E -9E -8E -7E -6E -5E -4E -3E -2E -1E 0E 1R 2R 3R 4R 5R 6R 7R 8R 9R 10R 11R 12R 13R 14R 15R 16R 17R 18R 19R 20R 21R 22R 23R 24R 25R 26R 27R 28R 29R 30R 31R 32R 33R 34R 35R 36R 37R 38R 39R 40R 41R 42R 43R 44R 45R 46R 47R 48R 49R 50R 51R 52R 53R 54R 55R 56R 57R 58R 59R 60R 61R 62R 63R 64R 65R 66R 67R 68R 69R 70R 71R 72R 73R 74R 75R 76R 77R 78R 79R 80R 81R 82R 83R 84R 85R 86R 87R 88R 89R 90R 91R 92R 93R 94R 95R 96R 97R 98R 99R 100R 101F 102F 103F 104F 105F 106F 107F 108F 109F 110F
#  -0.209758 -1.25772 -1.21173 -1.28123 -0.424725 -1.1694 0.550333 1.68009 -1.02962 0.630191 0.615234 0.265762 -0.806701 -0.0955621 -0.224316 0.450392 -0.297951 0.781579 -0.299665 0.842169 -0.839342 -1.00812 2.59283 -0.333486 0.238582 0.509256 -0.387025 0.41349 0.295172 -0.172304 0.0522344 -0.0272538 1.70276 -0.593069 -0.876797 0.0302307 0.248385 0.349219 -0.366692 -0.850661 1.01055 -0.27972 -0.69241 -0.189024 -0.157741 0.887936 0.0677898 0.603243 -0.399434 0.171556 -0.259749 0.0756668 -0.716291 -1.04864 1.59777 0.480567 -1.00102 -0.488933 -0.948384 1.75905 1.04993 -0.212116 0.434555 -0.331472 -0.380998 -0.630882 -0.475694 1.32073 -0.0432225 0.0953962 0.19495 0.985981 -0.412851 -0.794006 1.34056 -0.352931 -0.578453 -0.989018 -1.02777 -0.459179 0.494389 0.887879 0.566071 -0.290926 0.0477999 -0.563677 -0.573775 0.70772 -0.812474 1.56424 -0.0722557 0.171631 -0.590822 -0.459511 -1.05361 -0.14634 0.335186 0.259443 -0.625229 -0.630898 -0.401759 1.19685 -0.909843 -0.143241 1.52189 -0.0807799 -1.08787 -0.531816 0.388368 -0.300482 -0.449501 -0.275134 0.0723973 1.27881 -0.0708521 0.86464 0.504603 -0.0909119 -1.22632 -0.416894 -0.391896 0.0377235 1.04016 1.83446 1.23806 -0.106521 -1.40522 -0.311024 0.0713658 0.67601 0.770022 0.547448 -1.11622 0.679714 -0.357246 0.139842 0.0596409 0.342533 0.01974
# implementation error by year in forecast:  0 0 0 0 0 0 0 0 0 0
#
#Fishing Mortality info 
0.3 # F ballpark
-2001 # F ballpark year (neg value to disable)
2 # F_Method:  1=Pope; 2=instan. F; 3=hybrid (hybrid is recommended)
4 # max F or harvest rate, depends on F_Method
# no additional F input needed for Fmethod 1
# if Fmethod=2; read overall start F value; overall phase; N detailed inputs to read
# if Fmethod=3; read N iterations for tuning for Fmethod 3
 0 1 100 # overall start F value; overall phase; N detailed inputs to read
#Fleet Yr Seas F_value se phase (for detailed setup of F_Method=2; -Yr to fill remaining years)
 1 1 1 0.0016 0.1 1
 1 2 1 0.00186667 0.1 1
 1 3 1 0.00213333 0.1 1
 1 4 1 0.0024 0.1 1
 1 5 1 0.00266667 0.1 1
 1 6 1 0.00293333 0.1 1
 1 7 1 0.0032 0.1 1
 1 8 1 0.00346667 0.1 1
 1 9 1 0.00373333 0.1 1
 1 10 1 0.004 0.1 1
 1 11 1 0.00426667 0.1 1
 1 12 1 0.00453333 0.1 1
 1 13 1 0.0048 0.1 1
 1 14 1 0.00506667 0.1 1
 1 15 1 0.00533333 0.1 1
 1 16 1 0.0056 0.1 1
 1 17 1 0.00586667 0.1 1
 1 18 1 0.00613333 0.1 1
 1 19 1 0.0064 0.1 1
 1 20 1 0.00666667 0.1 1
 1 21 1 0.00693333 0.1 1
 1 22 1 0.0072 0.1 1
 1 23 1 0.00746667 0.1 1
 1 24 1 0.00773333 0.1 1
 1 25 1 0.008 0.1 1
 1 26 1 0.008 0.1 1
 1 27 1 0.0187586 0.1 1
 1 28 1 0.0295172 0.1 1
 1 29 1 0.0402759 0.1 1
 1 30 1 0.0510345 0.1 1
 1 31 1 0.0617931 0.1 1
 1 32 1 0.0725517 0.1 1
 1 33 1 0.0833103 0.1 1
 1 34 1 0.094069 0.1 1
 1 35 1 0.104828 0.1 1
 1 36 1 0.115586 0.1 1
 1 37 1 0.126345 0.1 1
 1 38 1 0.137103 0.1 1
 1 39 1 0.147862 0.1 1
 1 40 1 0.158621 0.1 1
 1 41 1 0.169379 0.1 1
 1 42 1 0.180138 0.1 1
 1 43 1 0.190897 0.1 1
 1 44 1 0.201655 0.1 1
 1 45 1 0.212414 0.1 1
 1 46 1 0.223172 0.1 1
 1 47 1 0.233931 0.1 1
 1 48 1 0.24469 0.1 1
 1 49 1 0.255448 0.1 1
 1 50 1 0.266207 0.1 1
 1 51 1 0.276966 0.1 1
 1 52 1 0.287724 0.1 1
 1 53 1 0.298483 0.1 1
 1 54 1 0.309241 0.1 1
 1 55 1 0.32 0.1 1
 1 56 1 0.32 0.1 1
 1 57 1 0.32 0.1 1
 1 58 1 0.32 0.1 1
 1 59 1 0.32 0.1 1
 1 60 1 0.32 0.1 1
 1 61 1 0.32 0.1 1
 1 62 1 0.308211 0.1 1
 1 63 1 0.296421 0.1 1
 1 64 1 0.284632 0.1 1
 1 65 1 0.272842 0.1 1
 1 66 1 0.261053 0.1 1
 1 67 1 0.249263 0.1 1
 1 68 1 0.237474 0.1 1
 1 69 1 0.225684 0.1 1
 1 70 1 0.213895 0.1 1
 1 71 1 0.202105 0.1 1
 1 72 1 0.190316 0.1 1
 1 73 1 0.178526 0.1 1
 1 74 1 0.166737 0.1 1
 1 75 1 0.154947 0.1 1
 1 76 1 0.143158 0.1 1
 1 77 1 0.131368 0.1 1
 1 78 1 0.119579 0.1 1
 1 79 1 0.107789 0.1 1
 1 80 1 0.096 0.1 1
 1 81 1 0.096 0.1 1
 1 82 1 0.096 0.1 1
 1 83 1 0.096 0.1 1
 1 84 1 0.096 0.1 1
 1 85 1 0.096 0.1 1
 1 86 1 0.096 0.1 1
 1 87 1 0.096 0.1 1
 1 88 1 0.096 0.1 1
 1 89 1 0.096 0.1 1
 1 90 1 0.096 0.1 1
 1 91 1 0.096 0.1 1
 1 92 1 0.096 0.1 1
 1 93 1 0.096 0.1 1
 1 94 1 0.096 0.1 1
 1 95 1 0.096 0.1 1
 1 96 1 0.096 0.1 1
 1 97 1 0.096 0.1 1
 1 98 1 0.096 0.1 1
 1 99 1 0.096 0.1 1
 1 100 1 0.096 0.1 1
#
#_initial_F_parms; count = 0
#_ LO HI INIT PRIOR PR_SD  PR_type  PHASE
#110 121
# F rates by fleet
# Yr:  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
# seas:  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
# Fishery 0.0016 0.00186667 0.00213333 0.0024 0.00266667 0.00293333 0.0032 0.00346667 0.00373333 0.004 0.00426667 0.00453333 0.0048 0.00506667 0.00533333 0.0056 0.00586667 0.00613333 0.0064 0.00666667 0.00693333 0.0072 0.00746667 0.00773333 0.008 0.008 0.0187586 0.0295172 0.0402759 0.0510345 0.0617931 0.0725517 0.0833103 0.094069 0.104828 0.115586 0.126345 0.137103 0.147862 0.158621 0.169379 0.180138 0.190897 0.201655 0.212414 0.223172 0.233931 0.24469 0.255448 0.266207 0.276966 0.287724 0.298483 0.309241 0.32 0.32 0.32 0.32 0.32 0.32 0.32 0.308211 0.296421 0.284632 0.272842 0.261053 0.249263 0.237474 0.225684 0.213895 0.202105 0.190316 0.178526 0.166737 0.154947 0.143158 0.131368 0.119579 0.107789 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.096 0.098561 0.0983974 0.0971389 0.0930496 0.0861457 0.0792724 0.0745558 0.0717949 0.0703151 0.0697428
#
#_Q_setup for fleets with cpue or survey data
#_1:  fleet number
#_2:  link type: (1=simple q, 1 parm; 2=mirror simple q, 1 mirrored parm; 3=q and power, 2 parm; 4=mirror with offset, 2 parm)
#_3:  extra input for link, i.e. mirror fleet# or dev index number
#_4:  0/1 to select extra sd parameter
#_5:  0/1 for biasadj or not
#_6:  0/1 to float
#_   fleet      link link_info  extra_se   biasadj     float  #  fleetname
         1         1         0         0         0         0  #  Fishery
         2         1         0         0         0         0  #  Survey
-9999 0 0 0 0 0
#
#_Q_parms(if_any);Qunits_are_ln(q)
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn  #  parm_name
            -3             3             0             0            99             0         -5          0          0          0          0          0          0          0  #  LnQ_base_Fishery(1)
            -3             3             0             0            99             0         -5          0          0          0          0          0          0          0  #  LnQ_base_Survey(2)
#_no timevary Q parameters
#
#_size_selex_patterns
#Pattern:_0; parm=0; selex=1.0 for all sizes
#Pattern:_1; parm=2; logistic; with 95% width specification
#Pattern:_5; parm=2; mirror another size selex; PARMS pick the min-max bin to mirror
#Pattern:_15; parm=0; mirror another age or length selex
#Pattern:_6; parm=2+special; non-parm len selex
#Pattern:_43; parm=2+special+2;  like 6, with 2 additional param for scaling (average over bin range)
#Pattern:_8; parm=8; New doublelogistic with smooth transitions and constant above Linf option
#Pattern:_9; parm=6; simple 4-parm double logistic with starting length; parm 5 is first length; parm 6=1 does desc as offset
#Pattern:_21; parm=2+special; non-parm len selex, read as pairs of size, then selex
#Pattern:_22; parm=4; double_normal as in CASAL
#Pattern:_23; parm=6; double_normal where final value is directly equal to sp(6) so can be >1.0
#Pattern:_24; parm=6; double_normal with sel(minL) and sel(maxL), using joiners
#Pattern:_25; parm=3; exponential-logistic in size
#Pattern:_27; parm=3+special; cubic spline 
#Pattern:_42; parm=2+special+3; // like 27, with 2 additional param for scaling (average over bin range)
#_discard_options:_0=none;_1=define_retention;_2=retention&mortality;_3=all_discarded_dead;_4=define_dome-shaped_retention
#_Pattern Discard Male Special
 24 0 0 0 # 1 Fishery
 24 0 0 0 # 2 Survey
#
#_age_selex_patterns
#Pattern:_0; parm=0; selex=1.0 for ages 0 to maxage
#Pattern:_10; parm=0; selex=1.0 for ages 1 to maxage
#Pattern:_11; parm=2; selex=1.0  for specified min-max age
#Pattern:_12; parm=2; age logistic
#Pattern:_13; parm=8; age double logistic
#Pattern:_14; parm=nages+1; age empirical
#Pattern:_15; parm=0; mirror another age or length selex
#Pattern:_16; parm=2; Coleraine - Gaussian
#Pattern:_17; parm=nages+1; empirical as random walk  N parameters to read can be overridden by setting special to non-zero
#Pattern:_41; parm=2+nages+1; // like 17, with 2 additional param for scaling (average over bin range)
#Pattern:_18; parm=8; double logistic - smooth transition
#Pattern:_19; parm=6; simple 4-parm double logistic with starting age
#Pattern:_20; parm=6; double_normal,using joiners
#Pattern:_26; parm=3; exponential-logistic in age
#Pattern:_27; parm=3+special; cubic spline in age
#Pattern:_42; parm=2+special+3; // cubic spline; with 2 additional param for scaling (average over bin range)
#_Pattern Discard Male Special
 11 0 0 0 # 1 Fishery
 11 0 0 0 # 2 Survey
#
#_          LO            HI          INIT         PRIOR         PR_SD       PR_type      PHASE    env-var    use_dev   dev_mnyr   dev_mxyr     dev_PH      Block    Blk_Fxn  #  parm_name
# 1   Fishery LenSelex
            20           199            42            42          0.05             0          2          0          0          0          0        0.5          0          0  #  Size_DblN_peak_Fishery(1)
            -5             3            -3            -3          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_top_logit_Fishery(1)
            -4            12           5.1           5.1          0.05             0          3          0          0          0          0        0.5          0          0  #  Size_DblN_ascend_se_Fishery(1)
            -2            16            15            15          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_descend_se_Fishery(1)
           -15             5          -999          -999          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_start_logit_Fishery(1)
            -5          1000           999           999          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_end_logit_Fishery(1)
# 2   Survey LenSelex
            20           199            42            42          0.05             0         -2          0          0          0          0        0.5          0          0  #  Size_DblN_peak_Survey(2)
            -5             3            -3            -3          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_top_logit_Survey(2)
            -4            12           5.1           5.1          0.05             0         -3          0          0          0          0        0.5          0          0  #  Size_DblN_ascend_se_Survey(2)
            -2            16            15            15          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_descend_se_Survey(2)
           -15             5          -999          -999          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_start_logit_Survey(2)
            -5          1000           999           999          0.05             0        -99          0          0          0          0        0.5          0          0  #  Size_DblN_end_logit_Survey(2)
# 1   Fishery AgeSelex
             0             1           0.1           0.1            99             0         -3          0          0          0          0        0.5          0          0  #  minage@sel=1_Fishery(1)
             0           101           100           100            99             0         -3          0          0          0          0        0.5          0          0  #  maxage@sel=1_Fishery(1)
# 2   Survey AgeSelex
             0             1           0.1           0.1            99             0         -3          0          0          0          0        0.5          0          0  #  minage@sel=1_Survey(2)
             0           101           100           100            99             0         -3          0          0          0          0        0.5          0          0  #  maxage@sel=1_Survey(2)
#_no timevary selex parameters
#
0   #  use 2D_AR1 selectivity(0/1):  experimental feature
#_no 2D_AR1 selex offset used
#
# Tag loss and Tag reporting parameters go next
0  # TG_custom:  0=no read and autogen if tag data exist; 1=read
#_Cond -6 6 1 1 2 0.01 -4 0 0 0 0 0 0 0  #_placeholder if no parameters
#
# no timevary parameters
#
#
# Input variance adjustments factors: 
 #_1=add_to_survey_CV
 #_2=add_to_discard_stddev
 #_3=add_to_bodywt_CV
 #_4=mult_by_lencomp_N
 #_5=mult_by_agecomp_N
 #_6=mult_by_size-at-age_N
 #_7=mult_by_generalized_sizecomp
#_Factor  Fleet  Value
 -9999   1    0  # terminator
#
4 #_maxlambdaphase
1 #_sd_offset; must be 1 if any growthCV, sigmaR, or survey extraSD is an estimated parameter
# read 0 changes to default Lambdas (default value is 1.0)
# Like_comp codes:  1=surv; 2=disc; 3=mnwt; 4=length; 5=age; 6=SizeFreq; 7=sizeage; 8=catch; 9=init_equ_catch; 
# 10=recrdev; 11=parm_prior; 12=parm_dev; 13=CrashPen; 14=Morphcomp; 15=Tag-comp; 16=Tag-negbin; 17=F_ballpark; 18=initEQregime
#like_comp fleet  phase  value  sizefreq_method
-9999  1  1  1  1  #  terminator
#
# lambdas (for info only; columns are phases)
#  1 1 1 1 #_CPUE/survey:_1
#  1 1 1 1 #_CPUE/survey:_2
#  1 1 1 1 #_lencomp:_1
#  0 0 0 0 #_lencomp:_2
#  1 1 1 1 #_agecomp:_1
#  0 0 0 0 #_agecomp:_2
#  1 1 1 1 #_init_equ_catch
#  1 1 1 1 #_recruitments
#  1 1 1 1 #_parameter-priors
#  1 1 1 1 #_parameter-dev-vectors
#  1 1 1 1 #_crashPenLambda
#  0 0 0 0 # F_ballpark_lambda
0 # (0/1) read specs for more stddev reporting 
 # 0 0 0 0 0 0 0 0 0 # placeholder for # selex_fleet, 1=len/2=age/3=both, year, N selex bins, 0 or Growth pattern, N growth ages, 0 or NatAge_area(-1 for all), NatAge_yr, N Natages
 # placeholder for vector of selex bins to be reported
 # placeholder for vector of growth ages to be reported
 # placeholder for vector of NatAges ages to be reported
999

