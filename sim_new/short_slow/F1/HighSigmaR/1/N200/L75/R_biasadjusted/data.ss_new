#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sat Apr 25 19:09:28 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-25 19:02:58
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 83.9067 0.1
2 1 1 97.3541 0.1
3 1 1 112.943 0.1
4 1 1 130.856 0.1
5 1 1 149.506 0.1
6 1 1 168.005 0.1
7 1 1 186.963 0.1
8 1 1 206.706 0.1
9 1 1 226.471 0.1
10 1 1 244.747 0.1
11 1 1 259.708 0.1
12 1 1 270.046 0.1
13 1 1 275.587 0.1
14 1 1 277.112 0.1
15 1 1 276.635 0.1
16 1 1 280.51 0.1
17 1 1 297.77 0.1
18 1 1 327.654 0.1
19 1 1 357.703 0.1
20 1 1 377.955 0.1
21 1 1 388.804 0.1
22 1 1 395.555 0.1
23 1 1 401.194 0.1
24 1 1 405.686 0.1
25 1 1 408.988 0.1
26 1 1 400.744 0.1
27 1 1 930.852 0.1
28 1 1 1463.48 0.1
29 1 1 1999.42 0.1
30 1 1 2508.02 0.1
31 1 1 2945.48 0.1
32 1 1 3290.94 0.1
33 1 1 3546.59 0.1
34 1 1 3715.5 0.1
35 1 1 3787.32 0.1
36 1 1 3749.4 0.1
37 1 1 3607.9 0.1
38 1 1 3408.58 0.1
39 1 1 3236.67 0.1
40 1 1 3156.09 0.1
41 1 1 3196.38 0.1
42 1 1 3445.04 0.1
43 1 1 3931.1 0.1
44 1 1 4387.89 0.1
45 1 1 4536.59 0.1
46 1 1 4417.43 0.1
47 1 1 4164.54 0.1
48 1 1 3874.16 0.1
49 1 1 3652.11 0.1
50 1 1 3471.95 0.1
51 1 1 3233.88 0.1
52 1 1 2961.64 0.1
53 1 1 2731.82 0.1
54 1 1 2572.51 0.1
55 1 1 2473.25 0.1
56 1 1 2338.3 0.1
57 1 1 2246.45 0.1
58 1 1 2179.28 0.1
59 1 1 2157.93 0.1
60 1 1 2213.51 0.1
61 1 1 2278.25 0.1
62 1 1 2223.81 0.1
63 1 1 2212.56 0.1
64 1 1 2264.92 0.1
65 1 1 2289.94 0.1
66 1 1 2222.56 0.1
67 1 1 2117.65 0.1
68 1 1 2083.41 0.1
69 1 1 2204.83 0.1
70 1 1 2526.27 0.1
71 1 1 2887.25 0.1
72 1 1 3013.75 0.1
73 1 1 2835.72 0.1
74 1 1 2502.11 0.1
75 1 1 2172.17 0.1
76 1 1 1899.27 0.1
77 1 1 1666.67 0.1
78 1 1 1457.92 0.1
79 1 1 1271.87 0.1
80 1 1 1100.9 0.1
81 1 1 1066.72 0.1
82 1 1 1050.04 0.1
83 1 1 1080.17 0.1
84 1 1 1146.6 0.1
85 1 1 1214.36 0.1
86 1 1 1256.91 0.1
87 1 1 1280.37 0.1
88 1 1 1312.83 0.1
89 1 1 1362.59 0.1
90 1 1 1407.27 0.1
91 1 1 1418.87 0.1
92 1 1 1388.7 0.1
93 1 1 1334.5 0.1
94 1 1 1281.48 0.1
95 1 1 1237.28 0.1
96 1 1 1209.22 0.1
97 1 1 1245.41 0.1
98 1 1 1386.5 0.1
99 1 1 1572.9 0.1
100 1 1 1710.84 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200 2 2 0 0 1 1 1 6 3 5 8 9 10 14 17 21 8 16 17 13 17 14 8 5 0 1 0 0 0 0 1 0
 27 1 1 0 0 200 0 0 0 0 3 3 3 3 4 13 15 8 14 16 10 9 15 19 11 10 11 16 4 6 4 3 0 0 0 0 0 0
 28 1 1 0 0 200 0 0 0 0 2 1 3 6 7 5 13 12 14 20 15 18 14 8 9 17 15 7 5 2 2 2 1 1 1 0 0 0
 29 1 1 0 0 200 0 0 0 1 1 1 1 1 7 7 14 12 16 19 14 12 8 21 17 11 9 7 9 6 3 2 1 0 0 0 0 0
 30 1 1 0 0 200 0 0 0 1 0 1 2 1 2 3 9 18 24 16 22 12 20 14 17 10 10 4 3 3 6 2 0 0 0 0 0 0
 31 1 1 0 0 200 1 0 0 0 4 1 2 0 5 11 2 13 10 15 18 16 18 19 13 16 10 7 7 6 4 1 1 0 0 0 0 0
 32 1 1 0 0 200 0 0 0 0 1 2 0 1 5 7 8 14 9 20 15 26 11 21 10 15 8 9 4 6 3 3 1 1 0 0 0 0
 33 1 1 0 0 200 0 1 0 0 0 1 2 3 9 6 6 15 15 20 21 16 21 13 11 14 10 4 3 5 2 1 0 1 0 0 0 0
 34 1 1 0 0 200 0 0 0 0 1 1 2 2 1 8 4 12 14 19 16 30 15 20 12 10 12 6 5 4 4 0 2 0 0 0 0 0
 35 1 1 0 0 200 1 1 1 0 0 0 0 4 4 7 5 13 13 14 19 18 23 15 16 11 8 11 4 5 6 0 0 1 0 0 0 0
 36 1 1 0 0 200 0 0 0 0 1 0 0 5 3 6 9 9 13 12 17 20 17 15 14 15 10 12 7 6 5 2 1 0 1 0 0 0
 37 1 1 0 0 200 0 2 0 0 1 1 1 1 1 4 6 8 13 13 14 25 20 13 14 13 15 10 8 8 4 5 0 0 0 0 0 0
 38 1 1 0 0 200 0 1 0 0 5 1 3 4 8 4 9 12 8 16 15 12 19 7 18 16 16 6 8 7 4 0 1 0 0 0 0 0
 39 1 1 0 0 200 0 2 0 0 2 0 5 5 9 14 16 16 11 10 6 20 15 13 14 8 10 5 8 4 3 2 1 0 0 1 0 0
 40 1 1 0 0 200 0 0 1 1 1 3 3 4 11 20 13 16 11 11 11 12 14 16 11 13 8 7 3 5 1 2 0 2 0 0 0 0
 41 1 1 0 0 200 0 1 1 3 6 5 8 8 9 15 5 16 16 22 18 12 12 11 7 3 5 8 5 1 3 0 0 0 0 0 0 0
 42 1 1 0 0 200 0 0 0 0 3 2 5 14 22 13 25 8 12 12 17 12 12 12 6 7 5 5 3 1 2 1 0 0 1 0 0 0
 43 1 1 0 0 200 0 0 0 0 0 1 2 4 11 15 24 26 19 18 16 10 8 10 11 7 8 5 3 1 0 0 1 0 0 0 0 0
 44 1 1 0 0 200 0 0 1 1 3 3 2 3 3 14 12 27 32 27 25 14 8 6 4 5 1 2 4 1 0 0 2 0 0 0 0 0
 45 1 1 0 0 200 0 0 0 0 4 0 4 6 3 4 10 12 16 33 28 28 18 13 4 4 4 6 2 0 0 1 0 0 0 0 0 0
 46 1 1 0 0 200 0 0 0 0 2 0 0 6 7 10 10 12 15 17 23 27 19 21 9 7 6 1 7 0 1 0 0 0 0 0 0 0
 47 1 1 0 0 200 0 1 0 3 5 1 3 1 0 3 6 18 18 18 19 19 28 14 13 14 6 3 3 1 3 0 0 0 0 0 0 0
 48 1 1 0 0 200 0 0 0 0 3 2 7 10 10 8 7 14 17 21 17 19 14 20 12 8 4 5 1 0 0 0 0 1 0 0 0 0
 49 1 1 0 0 200 0 1 1 0 0 2 3 4 9 9 14 12 25 18 13 19 16 12 15 10 3 6 4 3 1 0 0 0 0 0 0 0
 50 1 1 0 0 200 0 0 0 0 1 3 0 5 7 10 25 26 25 16 18 14 12 10 8 8 3 5 2 0 1 0 1 0 0 0 0 0
 51 1 1 0 0 200 1 0 0 0 2 1 2 6 4 4 11 14 20 25 29 12 24 9 5 9 13 4 3 1 1 0 0 0 0 0 0 0
 52 1 1 0 0 200 0 1 0 0 3 6 5 6 6 12 10 15 25 16 19 21 11 8 7 10 5 8 2 3 0 1 0 0 0 0 0 0
 53 1 1 0 0 200 0 0 1 1 1 4 3 7 11 10 16 17 15 23 20 21 17 10 4 6 4 4 3 1 0 0 1 0 0 0 0 0
 54 1 1 0 0 200 1 1 0 0 1 1 5 9 10 13 16 19 18 13 25 19 16 9 5 5 4 4 2 1 2 1 0 0 0 0 0 0
 55 1 1 0 0 200 0 0 0 2 1 3 4 7 12 13 18 24 17 15 13 15 16 16 5 4 7 4 1 1 1 1 0 0 0 0 0 0
 56 1 1 0 0 200 0 0 1 0 1 0 4 13 15 15 12 11 29 25 21 12 12 8 8 2 2 4 1 3 0 0 0 0 1 0 0 0
 57 1 1 0 0 200 0 0 1 2 6 3 1 5 9 7 19 25 30 15 16 12 10 11 9 5 8 1 2 3 0 0 0 0 0 0 0 0
 58 1 1 0 0 200 1 0 0 1 3 4 7 11 8 16 24 17 20 11 19 9 16 10 8 6 4 3 1 0 1 0 0 0 0 0 0 0
 59 1 1 0 0 200 0 0 0 0 0 5 6 10 14 11 12 25 18 20 18 15 18 8 6 5 4 1 3 0 0 0 1 0 0 0 0 0
 60 1 1 0 0 200 1 0 0 0 1 2 4 9 14 11 17 26 32 25 16 12 12 6 4 2 2 2 0 1 0 1 0 0 0 0 0 0
 61 1 1 0 0 200 0 1 0 1 2 7 6 8 8 11 19 18 27 29 15 12 15 5 4 3 6 3 0 0 0 0 0 0 0 0 0 0
 62 1 1 0 0 200 1 0 0 2 3 5 6 3 10 11 11 14 15 34 20 21 16 11 11 4 1 1 0 0 0 0 0 0 0 0 0 0
 63 1 1 0 0 200 0 0 0 1 1 2 2 9 15 21 18 24 21 22 13 14 12 6 8 5 2 2 0 1 0 1 0 0 0 0 0 0
 64 1 1 0 0 200 1 0 1 1 0 2 5 10 12 15 17 20 18 17 19 16 11 12 6 6 6 1 3 1 0 0 0 0 0 0 0 0
 65 1 1 0 0 200 0 0 0 2 0 0 5 6 10 10 24 22 28 22 19 12 13 9 8 4 1 0 4 0 1 0 0 0 0 0 0 0
 66 1 1 0 0 200 0 0 0 1 1 6 8 3 7 5 14 21 18 20 31 18 17 8 8 3 6 3 2 0 0 0 0 0 0 0 0 0
 67 1 1 0 0 200 0 0 0 0 1 6 9 16 19 6 9 7 15 22 26 18 22 10 4 5 1 2 1 1 0 0 0 0 0 0 0 0
 68 1 1 0 0 200 1 1 1 2 5 10 1 4 10 14 19 22 21 16 13 13 17 13 8 3 2 2 0 2 0 0 0 0 0 0 0 0
 69 1 1 0 0 200 0 0 0 2 5 3 11 9 18 19 17 19 20 14 13 14 7 12 6 4 3 2 2 0 0 0 0 0 0 0 0 0
 70 1 1 0 0 200 0 0 0 0 2 2 4 15 18 19 26 26 23 10 18 10 3 9 5 4 2 2 2 0 0 0 0 0 0 0 0 0
 71 1 1 0 0 200 0 0 0 0 0 1 2 4 7 21 26 30 29 26 17 12 10 6 5 1 1 1 1 0 0 0 0 0 0 0 0 0
 72 1 1 0 0 200 0 0 1 1 1 2 0 1 3 5 13 27 28 29 26 22 11 11 5 7 6 0 0 1 0 0 0 0 0 0 0 0
 73 1 1 0 0 200 0 0 0 0 1 2 1 2 1 6 7 16 18 33 24 27 22 18 7 5 5 2 1 2 0 0 0 0 0 0 0 0
 74 1 1 0 0 200 1 0 0 0 0 2 1 5 6 3 7 4 17 18 28 31 22 21 20 2 8 2 1 1 0 0 0 0 0 0 0 0
 75 1 1 0 0 200 0 0 0 0 1 4 3 5 6 7 11 14 11 16 19 13 24 17 25 14 6 1 2 1 0 0 0 0 0 0 0 0
 76 1 1 0 0 200 0 0 1 0 0 0 2 5 10 7 12 11 16 17 18 22 11 18 27 7 6 2 6 1 0 1 0 0 0 0 0 0
 77 1 1 0 0 200 0 0 0 0 1 6 1 3 7 7 6 12 25 18 23 14 10 17 16 11 7 7 6 2 1 0 0 0 0 0 0 0
 78 1 1 0 0 200 0 0 0 1 1 1 2 3 3 5 8 16 14 23 15 18 16 16 19 14 12 4 6 1 1 1 0 0 0 0 0 0
 79 1 1 0 0 200 0 0 0 0 1 1 1 5 2 17 17 14 9 18 19 18 18 17 13 11 5 4 6 3 1 0 0 0 0 0 0 0
 80 1 1 0 0 200 0 1 0 0 2 1 1 0 7 8 11 15 16 16 25 12 23 13 17 11 6 7 6 0 2 0 0 0 0 0 0 0
 81 1 1 0 0 200 0 1 1 1 3 6 2 3 1 4 6 16 11 18 21 19 12 13 20 19 9 4 4 3 2 1 0 0 0 0 0 0
 82 1 1 0 0 200 0 1 0 2 2 5 6 16 7 10 7 10 11 10 18 17 23 19 12 9 5 7 3 0 0 0 0 0 0 0 0 0
 83 1 1 0 0 200 0 0 0 1 2 3 2 8 15 6 19 16 18 10 16 13 22 12 10 10 6 5 1 1 1 2 1 0 0 0 0 0
 84 1 1 0 0 200 0 0 0 0 0 1 4 12 5 13 16 22 20 22 13 11 9 13 12 8 9 2 8 0 0 0 0 0 0 0 0 0
 85 1 1 0 0 200 0 0 0 0 1 0 1 3 4 7 19 16 18 22 30 18 14 10 6 9 6 7 3 1 2 1 1 1 0 0 0 0
 86 1 1 0 0 200 0 1 0 0 2 4 3 5 5 5 10 14 28 20 28 16 19 15 9 3 7 3 2 1 0 0 0 0 0 0 0 0
 87 1 1 0 0 200 0 0 0 0 1 3 3 11 6 11 12 10 17 15 20 23 23 13 10 10 4 4 3 0 1 0 0 0 0 0 0 0
 88 1 1 0 0 200 0 1 0 0 2 1 2 7 8 13 9 12 20 14 16 19 25 15 14 6 3 4 5 4 0 0 0 0 0 0 0 0
 89 1 1 0 0 200 0 0 0 0 1 1 3 3 12 12 18 17 17 12 13 16 16 12 15 9 7 8 3 4 1 0 0 0 0 0 0 0
 90 1 1 0 0 200 0 0 0 0 1 0 3 5 3 11 13 18 21 25 15 13 16 16 11 8 8 4 4 2 2 1 0 0 0 0 0 0
 91 1 1 0 0 200 1 0 0 0 0 0 2 3 5 11 10 16 11 24 28 22 21 14 8 7 4 4 5 2 0 2 0 0 0 0 0 0
 92 1 1 0 0 200 0 0 0 0 1 3 1 1 6 6 8 15 18 25 32 21 17 12 12 8 4 6 2 1 1 0 0 0 0 0 0 0
 93 1 1 0 0 200 1 1 0 1 0 1 3 5 5 6 6 10 9 14 22 23 18 18 18 11 13 5 3 2 4 1 0 0 0 0 0 0
 94 1 1 0 0 200 1 0 0 0 1 2 1 4 6 11 13 12 16 13 18 19 19 19 11 15 6 4 2 5 2 0 0 0 0 0 0 0
 95 1 1 0 0 200 0 2 0 0 1 3 2 8 4 9 11 11 19 13 12 13 16 15 12 15 11 12 5 3 2 1 0 0 0 0 0 0
 96 1 1 0 0 200 0 0 0 1 10 8 5 5 7 5 13 17 17 16 19 13 15 12 7 4 10 7 5 2 1 0 0 1 0 0 0 0
 97 1 1 0 0 200 0 1 0 0 0 2 7 21 19 15 8 10 16 11 23 10 6 9 13 9 10 2 1 2 4 1 0 0 0 0 0 0
 98 1 1 0 0 200 0 0 0 0 2 1 1 3 16 27 21 29 19 4 15 11 7 13 5 3 9 4 4 2 2 1 0 0 1 0 0 0
 99 1 1 0 0 200 1 0 0 0 2 2 2 1 7 13 14 28 30 16 11 13 14 13 13 8 5 3 2 1 0 0 1 0 0 0 0 0
 100 1 1 0 0 200 0 1 0 0 0 0 1 5 7 6 8 12 32 22 28 21 12 12 11 10 4 4 0 2 1 1 0 0 0 0 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 83.9067 0.1
2 1 1 97.3541 0.1
3 1 1 112.943 0.1
4 1 1 130.856 0.1
5 1 1 149.506 0.1
6 1 1 168.005 0.1
7 1 1 186.963 0.1
8 1 1 206.706 0.1
9 1 1 226.471 0.1
10 1 1 244.747 0.1
11 1 1 259.708 0.1
12 1 1 270.046 0.1
13 1 1 275.587 0.1
14 1 1 277.112 0.1
15 1 1 276.635 0.1
16 1 1 280.51 0.1
17 1 1 297.77 0.1
18 1 1 327.654 0.1
19 1 1 357.703 0.1
20 1 1 377.955 0.1
21 1 1 388.804 0.1
22 1 1 395.555 0.1
23 1 1 401.194 0.1
24 1 1 405.686 0.1
25 1 1 408.988 0.1
26 1 1 400.744 0.1
27 1 1 930.852 0.1
28 1 1 1463.48 0.1
29 1 1 1999.42 0.1
30 1 1 2508.02 0.1
31 1 1 2945.48 0.1
32 1 1 3290.94 0.1
33 1 1 3546.59 0.1
34 1 1 3715.5 0.1
35 1 1 3787.32 0.1
36 1 1 3749.4 0.1
37 1 1 3607.9 0.1
38 1 1 3408.58 0.1
39 1 1 3236.67 0.1
40 1 1 3156.09 0.1
41 1 1 3196.38 0.1
42 1 1 3445.04 0.1
43 1 1 3931.1 0.1
44 1 1 4387.89 0.1
45 1 1 4536.59 0.1
46 1 1 4417.43 0.1
47 1 1 4164.54 0.1
48 1 1 3874.16 0.1
49 1 1 3652.11 0.1
50 1 1 3471.95 0.1
51 1 1 3233.88 0.1
52 1 1 2961.64 0.1
53 1 1 2731.82 0.1
54 1 1 2572.51 0.1
55 1 1 2473.25 0.1
56 1 1 2338.3 0.1
57 1 1 2246.45 0.1
58 1 1 2179.28 0.1
59 1 1 2157.93 0.1
60 1 1 2213.51 0.1
61 1 1 2278.25 0.1
62 1 1 2223.81 0.1
63 1 1 2212.56 0.1
64 1 1 2264.92 0.1
65 1 1 2289.94 0.1
66 1 1 2222.56 0.1
67 1 1 2117.65 0.1
68 1 1 2083.41 0.1
69 1 1 2204.83 0.1
70 1 1 2526.27 0.1
71 1 1 2887.25 0.1
72 1 1 3013.75 0.1
73 1 1 2835.72 0.1
74 1 1 2502.11 0.1
75 1 1 2172.17 0.1
76 1 1 1899.27 0.1
77 1 1 1666.67 0.1
78 1 1 1457.92 0.1
79 1 1 1271.87 0.1
80 1 1 1100.9 0.1
81 1 1 1066.72 0.1
82 1 1 1050.04 0.1
83 1 1 1080.17 0.1
84 1 1 1146.6 0.1
85 1 1 1214.36 0.1
86 1 1 1256.91 0.1
87 1 1 1280.37 0.1
88 1 1 1312.83 0.1
89 1 1 1362.59 0.1
90 1 1 1407.27 0.1
91 1 1 1418.87 0.1
92 1 1 1388.7 0.1
93 1 1 1334.5 0.1
94 1 1 1281.48 0.1
95 1 1 1237.28 0.1
96 1 1 1209.22 0.1
97 1 1 1245.41 0.1
98 1 1 1386.5 0.1
99 1 1 1572.9 0.1
100 1 1 1710.84 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 54437.2 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 200  0.16976 0.449275 0.174124 0.246604 0.777714 1.3531 2.69527 5.00785 6.24561 6.59291 7.7149 9.46293 11.3618 13.1674 14.5537 15.3782 15.6909 15.8197 15.551 14.5722 12.7909 10.3956 7.76385 5.29882 3.28927 1.8488 0.93686 0.426274 0.173518 0.0629887 0.0203367 0.00771719
 27 1 1 0 0 200  0.035394 0.0965079 0.109374 0.670196 1.98871 2.29447 1.93843 3.10299 5.46519 8.4736 10.9902 11.9286 12.2698 13.0543 14.0369 14.688 14.8203 14.7657 14.4366 13.5813 12.0493 9.92055 7.49605 5.16008 3.21948 1.81335 0.91883 0.41749 0.169599 0.061431 0.0197923 0.00749323
 28 1 1 0 0 200  0.0744607 0.197226 0.0806813 0.148012 0.512979 1.20144 3.09484 5.91942 7.15464 7.45967 9.47436 12.6335 14.8745 15.3957 14.9536 14.4554 14.0423 13.7611 13.3408 12.5172 11.1425 9.24656 7.05537 4.90196 3.08087 1.74368 0.885731 0.402706 0.163487 0.0591338 0.0190187 0.00718341
 29 1 1 0 0 200  0.081267 0.215913 0.10489 0.299189 0.887895 1.07687 1.17474 2.51556 5.45309 9.53706 12.7795 14.0263 14.8764 16.1225 16.6197 15.8225 14.4315 13.3794 12.5892 11.6719 10.3639 8.62512 6.62158 4.6354 2.93498 1.67144 0.852851 0.38881 0.15803 0.0571597 0.0183688 0.00692575
 30 1 1 0 0 200  0.0588899 0.157 0.0899327 0.336138 1.01787 1.35539 1.73629 2.91846 3.98186 5.57021 9.21398 14.0143 17.5242 18.612 18.1559 17.0744 15.5308 13.9941 12.6229 11.328 9.89483 8.19522 6.30109 4.43158 2.8226 1.61712 0.829501 0.379726 0.154773 0.0560698 0.0180282 0.00679371
 31 1 1 0 0 200  0.0648975 0.172467 0.0849923 0.251226 0.775295 1.15847 1.89133 3.5177 4.92152 6.14979 8.00526 10.6639 14.3457 18.0655 19.8902 19.2352 17.1531 15.0618 13.2209 11.5085 9.7889 7.97445 6.08988 4.2816 2.73552 1.57441 0.811552 0.373196 0.152686 0.0554705 0.0178688 0.00674048
 32 1 1 0 0 200  0.0348285 0.0932148 0.0625428 0.278583 0.84678 1.14692 1.57346 2.94939 4.68542 6.77072 9.15418 11.1958 13.223 15.7279 18.1579 19.263 18.3981 16.4657 14.234 12.0575 9.98017 7.95199 5.98387 4.1761 2.66324 1.53523 0.793981 0.366552 0.15055 0.0548827 0.0177288 0.00670394
 33 1 1 0 0 200  0.0620922 0.164621 0.0712322 0.154804 0.486883 0.810816 1.55999 3.05962 4.49639 6.16357 8.7137 11.5476 14.0147 15.9138 17.332 18.1938 18.0537 16.9958 15.1427 12.8423 10.4458 8.13861 6.0077 4.13734 2.61893 1.50542 0.778804 0.360317 0.148436 0.0542881 0.0175909 0.0066739
 34 1 1 0 0 200  0.0298298 0.0800045 0.0578814 0.274598 0.822809 1.02259 1.13489 2.07467 3.65163 5.89172 8.60263 11.234 13.8113 16.1533 17.7044 18.2287 17.8389 16.976 15.5316 13.4712 11.0278 8.5179 6.18905 4.19601 2.62466 1.49759 0.772002 0.356906 0.147193 0.0539488 0.0175267 0.00667251
 35 1 1 0 0 200  0.0518467 0.137496 0.0604723 0.138118 0.439712 0.766365 1.53805 2.92176 3.91865 4.91604 7.09543 10.2273 13.4453 16.085 17.8232 18.5041 18.12 17.2088 15.8257 13.9059 11.5318 8.95352 6.47743 4.34566 2.68592 1.51699 0.776445 0.357497 0.147198 0.0539595 0.0175531 0.0067003
 36 1 1 0 0 200  0.106836 0.283141 0.119765 0.23978 0.71276 0.897136 1.04246 1.97784 3.55173 5.66253 7.87817 9.81558 12.1198 14.9437 17.3566 18.5297 18.369 17.5415 16.1937 14.3076 11.9565 9.34901 6.78304 4.53821 2.78498 1.55892 0.791191 0.361885 0.148354 0.0542567 0.0176377 0.00673883
 37 1 1 0 0 200  0.160539 0.426072 0.195531 0.492164 1.46076 1.77235 1.74694 2.63966 3.55332 4.61752 6.78295 9.6638 12.3693 14.5537 16.3539 17.6323 17.9405 17.4797 16.3183 14.5159 12.2006 9.59222 6.98844 4.68195 2.86702 1.59663 0.80487 0.365611 0.148993 0.0542486 0.0175849 0.00670899
 38 1 1 0 0 200  0.0721329 0.193687 0.145777 0.714191 2.15255 2.75435 3.17719 5.02991 6.18754 6.42244 7.26512 8.7799 10.8856 13.3326 15.3426 16.4406 16.6474 16.3786 15.535 14.004 11.8767 9.39551 6.87581 4.61926 2.83037 1.57343 0.79012 0.35705 0.144689 0.0524062 0.0169143 0.00642918
 39 1 1 0 0 200  0.261228 0.691064 0.260611 0.316744 1.00152 1.79305 3.72088 7.14348 9.43079 10.4792 11.4663 11.7006 11.5946 12.1512 13.262 14.237 14.5596 14.4053 13.7576 12.5318 10.7461 8.57776 6.31732 4.26157 2.617 1.45538 0.729819 0.328829 0.132714 0.0478492 0.0153734 0.00581414
 40 1 1 0 0 200  0.441031 1.16914 0.502105 1.0522 3.08009 3.48392 2.68561 4.06768 7.29932 11.6505 15.4798 16.7518 15.954 14.4981 13.2214 12.4982 12.1356 11.9103 11.4398 10.5071 9.09118 7.32192 5.43449 3.68768 2.27342 1.26694 0.635619 0.286103 0.115214 0.0414087 0.0132548 0.00498781
 41 1 1 0 0 200  0.0908039 0.247293 0.272965 1.65768 4.96595 6.06893 6.04945 8.70476 9.92407 9.58062 11.5603 15.3357 17.9179 17.7281 15.4742 12.8264 10.8105 9.68746 8.97311 8.19271 7.12492 5.78286 4.32521 2.95461 1.83105 1.02413 0.514877 0.231913 0.0933399 0.0334938 0.0106954 0.0040087
 42 1 1 0 0 200  0.0376301 0.100831 0.0708706 0.338385 1.17757 2.70624 6.93121 13.4797 16.7232 16.5621 16.3139 15.685 15.2799 15.646 15.2758 13.3207 10.6579 8.54855 7.16805 6.18862 5.27461 4.2729 3.21104 2.20711 1.37568 0.77303 0.389957 0.17602 0.0709106 0.0254424 0.00811611 0.00303438
 43 1 1 0 0 200  0.132147 0.349517 0.130021 0.144355 0.452583 0.813289 1.91604 5.04497 10.9171 18.9574 24.8875 25.0252 21.5471 17.8669 15.0197 12.6986 10.4034 8.28085 6.51916 5.18818 4.16335 3.27257 2.43605 1.67521 1.04835 0.591836 0.29978 0.135746 0.0548048 0.0196871 0.006282 0.00234655
 44 1 1 0 0 200  0.057754 0.154911 0.112366 0.532683 1.57142 1.76036 1.29714 1.9809 4.13769 8.7463 16.4242 24.7565 29.2081 27.4488 21.8124 15.9958 11.6279 8.72823 6.65453 5.06395 3.83013 2.85626 2.05679 1.39317 0.868409 0.490908 0.249455 0.113343 0.0458938 0.0165221 0.00527949 0.00197325
 45 1 1 0 0 200  0.0389582 0.104012 0.0634461 0.258805 0.828567 1.43396 2.80917 5.04115 5.829 5.86174 8.41156 14.4476 22.2059 27.9117 28.2041 23.3464 16.712 11.4045 7.87545 5.57501 3.98658 2.82372 1.9447 1.27614 0.781324 0.438345 0.222419 0.101206 0.0410805 0.0148264 0.00474765 0.00177763
 46 1 1 0 0 200  0.192187 0.508212 0.186312 0.185121 0.563585 0.889072 1.65391 3.58021 6.2636 9.33522 11.6698 12.8592 15.3075 20.1142 24.5082 25.0363 21.2188 15.7318 10.7198 7.04837 4.62843 3.05235 1.98877 1.25095 0.743076 0.409003 0.205438 0.0931031 0.0377735 0.01365 0.00437911 0.00164341
 47 1 1 0 0 200  0.120044 0.320959 0.20699 0.881883 2.59539 2.87144 1.93566 2.47348 4.16764 6.98337 10.9769 14.8028 17.2463 18.5987 20.0033 21.1726 20.4263 17.5047 13.282 9.0967 5.81771 3.59193 2.17761 1.28999 0.732988 0.391146 0.19252 0.0861973 0.0347533 0.0125283 0.00401856 0.0015102
 48 1 1 0 0 200  0.0577404 0.15489 0.112913 0.544102 1.71215 2.73476 4.81795 8.36261 9.2282 7.82185 8.37844 11.42 15.1884 18.039 19.1792 18.9246 17.7746 16.0005 13.3235 10.0032 6.77121 4.20641 2.4563 1.37244 0.736115 0.375086 0.178596 0.0781969 0.0310828 0.0111117 0.00354876 0.0013314
 49 1 1 0 0 200  0.119282 0.316054 0.131964 0.256146 0.814879 1.44365 3.0726 6.55942 10.6623 14.6765 16.8638 15.7622 14.233 14.7554 16.1595 16.592 15.6201 13.9738 11.8828 9.40195 6.7859 4.43537 2.64122 1.45287 0.748293 0.363064 0.165325 0.0699081 0.0271066 0.00952995 0.0030114 0.00112168
 50 1 1 0 0 200  0.098936 0.263554 0.14568 0.517015 1.53914 1.86496 1.91984 3.50041 6.5677 11.3869 17.203 21.3438 21.9556 19.5666 16.5961 14.69 13.4267 12.1523 10.4955 8.49069 6.34814 4.33375 2.68321 1.50779 0.774156 0.366294 0.160629 0.0652824 0.0244533 0.00836963 0.00259419 0.000951385
 51 1 1 0 0 200  0.15374 0.407902 0.184063 0.446835 1.36699 1.97515 2.99641 5.24338 6.74723 8.10628 11.7225 17.1915 22.0615 23.8128 21.7926 17.742 13.8985 11.3211 9.46254 7.70791 5.89091 4.14051 2.64805 1.53265 0.802049 0.380591 0.164558 0.0651063 0.0236039 0.0078244 0.00235954 0.000843199
 52 1 1 0 0 200  0.169523 0.450695 0.22658 0.691324 2.071 2.62726 3.02599 5.18005 7.70041 10.1938 12.7555 14.8998 17.5206 20.5416 21.843 20.0691 16.1994 12.3816 9.43304 7.23484 5.43751 3.86182 2.52554 1.49975 0.803521 0.387662 0.168576 0.0662442 0.02359 0.00762541 0.00223666 0.000773562
 53 1 1 0 0 200  0.117379 0.313262 0.187809 0.74333 2.25967 3.06825 4.12389 7.06078 9.29581 10.8501 13.4079 15.9846 17.6317 18.5047 18.7945 18.0952 15.9182 12.9089 9.81734 7.17842 5.12192 3.53513 2.30439 1.38568 0.75662 0.372024 0.164159 0.0649761 0.0230957 0.00738493 0.00212729 0.000714667
 54 1 1 0 0 200  0.238879 0.632933 0.263866 0.506349 1.56084 2.39225 4.07752 7.69824 10.8426 13.3706 16.0164 17.569 18.1328 18.2403 17.6077 16.1389 14.0451 11.75 9.31081 6.92845 4.86941 3.2569 2.06829 1.2306 0.674363 0.335542 0.15021 0.0602119 0.0215741 0.00690952 0.00197969 0.000654138
 55 1 1 0 0 200  0.0983535 0.264188 0.201158 0.992195 2.96001 3.56501 3.50662 5.75031 9.13326 13.2468 17.5686 20.1296 20.6093 19.6428 17.714 15.3095 12.7596 10.4435 8.29827 6.28283 4.47632 2.98823 1.86865 1.09185 0.591468 0.293726 0.132249 0.0535314 0.0193762 0.00625422 0.00179843 0.000592019
 56 1 1 0 0 200  0.297941 0.788454 0.304149 0.420892 1.33578 2.38899 4.9059 9.15548 11.4267 12.293 15.0078 18.7277 21.2204 21.3138 19.1543 15.8388 12.4387 9.67389 7.45182 5.58191 3.98762 2.67729 1.6748 0.971528 0.520483 0.25606 0.114815 0.0465496 0.0169465 0.00551151 0.00159619 0.000528121
 57 1 1 0 0 200  0.24261 0.646021 0.350422 1.20819 3.56668 4.09139 3.36991 5.31676 9.38195 14.5192 18.6625 19.9475 19.977 19.9934 18.9793 16.307 12.7463 9.54461 7.01335 5.06155 3.54229 2.36129 1.47577 0.85523 0.456286 0.222958 0.099285 0.0400732 0.0145763 0.00475274 0.001383 0.000460609
 58 1 1 0 0 200  0.1655 0.441296 0.254739 0.963979 2.95592 4.20642 6.15189 10.3481 12.1293 12.0099 14.4878 18.7001 21.2734 20.8763 18.5202 15.4966 12.2726 9.29776 6.74543 4.71514 3.18779 2.07149 1.27638 0.734895 0.390735 0.190247 0.0843262 0.0338663 0.0122698 0.00399322 0.00116268 0.000388713
 59 1 1 0 0 200  0.135357 0.360256 0.191179 0.642944 1.98724 2.97579 4.91706 9.39052 13.6978 17.1709 19.5809 19.5611 18.8759 18.8069 17.8884 15.2809 11.8574 8.81273 6.3506 4.40318 2.92045 1.84845 1.11121 0.628551 0.330635 0.159988 0.0706069 0.0282439 0.0101928 0.00330595 0.000960422 0.000321018
 60 1 1 0 0 200  0.239102 0.633662 0.267657 0.535524 1.62605 2.3055 3.48066 6.69694 10.6112 15.3171 20.5151 23.5799 23.461 21.0552 17.8152 14.6271 11.5075 8.65912 6.20554 4.24626 2.77681 1.72829 1.01789 0.563676 0.291211 0.139085 0.0608557 0.0242038 0.00869735 0.00281072 0.000814023 0.000271363
 61 1 1 0 0 200  0.251508 0.668393 0.329199 0.965209 2.86952 3.4804 3.47417 5.55444 8.33088 11.8094 16.6746 21.4062 24.3 24.1927 21.1176 16.5747 12.182 8.80745 6.25178 4.2712 2.77348 1.70369 0.98693 0.536581 0.272086 0.127761 0.0551354 0.0217063 0.00774398 0.00248978 0.000718274 0.000238554
 62 1 1 0 0 200  0.214453 0.570769 0.302743 1.01339 3.06798 4.10379 5.297 8.75414 10.8597 11.6 13.8659 17.2749 20.4799 22.2537 21.4644 18.1633 13.6768 9.65863 6.58262 4.36131 2.78727 1.69541 0.971202 0.520462 0.259576 0.119831 0.0508954 0.019763 0.00697322 0.00222325 0.00063742 0.000210536
 63 1 1 0 0 200  0.0906738 0.243168 0.175494 0.834495 2.55791 3.60863 5.29576 9.52072 13.0742 15.4613 17.5795 18.2509 18.2346 18.573 18.3984 16.6788 13.5182 10.0466 6.94984 4.53533 2.82185 1.67634 0.944167 0.499201 0.245627 0.111733 0.046732 0.0178783 0.00622405 0.0019619 0.000557347 0.000182524
 64 1 1 0 0 200  0.0948684 0.252063 0.122925 0.358329 1.14353 1.99371 4.07742 8.18277 12.1417 16.0262 20.0769 22.0923 21.6286 19.7526 17.3534 14.8671 12.2104 9.52883 6.93318 4.66991 2.92487 1.71629 0.947531 0.491326 0.237803 0.106615 0.0439708 0.016587 0.00569538 0.00177225 0.000497726 0.000161084
 65 1 1 0 0 200  0.365138 0.965755 0.359036 0.392871 1.16454 1.57054 2.18856 4.44112 8.09732 13.2991 19.0741 23.1623 24.6963 23.589 20.323 16.1973 12.3411 9.30594 6.83913 4.75764 3.07495 1.83582 1.01412 0.519918 0.247526 0.10912 0.044313 0.0164805 0.00558317 0.001715 0.000475784 0.000151865
 66 1 1 0 0 200  0.118596 0.31997 0.278775 1.50074 4.42911 4.9346 3.40207 4.11191 5.86739 8.47861 13.1088 18.8108 23.4154 25.0215 23.1958 19.0474 14.2513 10.2446 7.21162 4.93588 3.21948 1.96165 1.10302 0.569843 0.270422 0.117927 0.0472069 0.0172964 0.00577683 0.00175108 0.000479771 0.00015092
 67 1 1 0 0 200  0.605512 1.60076 0.576128 0.495633 1.58673 3.09736 6.86976 12.5222 13.8463 11.3312 10.7987 13.0931 16.68 19.9522 21.0326 19.1396 15.2389 11.1692 7.74576 5.14858 3.28391 1.9892 1.1269 0.589233 0.28211 0.123248 0.0490766 0.0177974 0.00586881 0.00175537 0.000474763 0.000147094
 68 1 1 0 0 200  0.425215 1.13252 0.620593 2.16943 6.36397 6.97559 4.54664 6.07364 11.094 17.2948 20.7297 18.9523 15.7344 14.7158 15.1312 14.8678 13.0479 10.3553 7.52001 5.06162 3.19715 1.90563 1.06823 0.557851 0.26847 0.118045 0.0471687 0.0170812 0.00559797 0.00165838 0.000443434 0.000135338
 69 1 1 0 0 200  0.0730971 0.199407 0.228616 1.41746 4.36845 6.26131 9.23089 15.2433 16.6848 14.1556 15.079 18.73 20.1572 17.8626 14.2068 11.4531 9.59761 7.9722 6.19777 4.40995 2.87322 1.72685 0.963182 0.498983 0.239038 0.105123 0.0421312 0.0153008 0.00501669 0.00148175 0.000393734 0.000118819
 70 1 1 0 0 200  0.0321108 0.0858844 0.0564101 0.253662 0.891412 2.12296 5.718 12.0597 17.7803 22.0919 24.1354 22.0379 18.865 17.0961 15.1449 12.043 8.84375 6.54244 4.92497 3.60069 2.4522 1.52834 0.869824 0.453335 0.216774 0.0949907 0.0379965 0.013803 0.00453163 0.00133946 0.000355521 0.000106733
 71 1 1 0 0 200  0.055507 0.147079 0.0615433 0.120024 0.377288 0.648238 1.46618 3.95065 9.03604 17.0111 25.0432 29.0504 27.9893 23.4268 17.9724 13.3771 9.74064 6.9501 4.86532 3.3604 2.25839 1.434 0.839528 0.447846 0.217026 0.095554 0.0382193 0.0138639 0.00454746 0.00134405 0.000356788 0.000106986
 72 1 1 0 0 200  0.098257 0.260454 0.111404 0.230963 0.683082 0.829229 0.860407 1.61454 3.37672 7.27821 14.4141 23.4316 30.3354 31.4799 26.9629 19.9313 13.458 8.9266 5.93179 3.90505 2.51045 1.55324 0.907558 0.490986 0.24239 0.108368 0.0437489 0.0159333 0.00523042 0.00154524 0.000409981 0.000122872
 73 1 1 0 0 200  0.0830255 0.221204 0.123119 0.441417 1.31679 1.60725 1.60942 2.41211 3.14177 4.13426 7.12879 13.076 21.2857 28.65 31.1914 27.6433 20.5738 13.7886 8.73966 5.39988 3.28248 1.9455 1.10535 0.591123 0.292589 0.132236 0.0540738 0.0199045 0.00657938 0.00195059 0.000518166 0.000155298
 74 1 1 0 0 200  0.100205 0.266275 0.130591 0.382082 1.17342 1.70848 2.62922 4.60315 5.72717 5.96736 6.84824 8.95744 13.1801 19.5517 25.5705 27.7515 24.8451 19.1295 13.052 8.13109 4.76682 2.68324 1.45567 0.753589 0.36644 0.164763 0.0676277 0.0251031 0.00837551 0.00250275 0.000668491 0.00020104
 75 1 1 0 0 200  0.0438043 0.11766 0.0895588 0.443157 1.34676 1.81299 2.43902 4.45561 6.73371 8.9487 10.8276 11.5284 12.1798 14.4588 18.3206 21.8487 22.672 20.4118 15.9763 10.9812 6.7554 3.80555 2.00342 0.996622 0.468127 0.205663 0.0834437 0.0308987 0.0103457 0.00311161 0.000837043 0.000253565
 76 1 1 0 0 200  0.14579 0.385762 0.147576 0.195229 0.620209 1.12287 2.3807 4.73218 6.82817 8.97422 11.9047 14.4228 15.6131 15.8372 16.2229 17.3518 18.3174 18.0647 15.9239 12.3156 8.35777 5.02713 2.72114 1.34698 0.617284 0.263196 0.104122 0.0379206 0.012595 0.00378284 0.00102055 0.000311167
 77 1 1 0 0 200  0.0769343 0.205925 0.13853 0.615418 1.81979 2.08022 1.69302 2.7014 4.99882 8.38194 12.1259 15.0814 17.12 18.119 17.9082 17.0625 16.2455 15.6201 14.4018 12.0979 9.01661 5.91617 3.42776 1.76918 0.822584 0.348142 0.135045 0.048094 0.015678 0.00465064 0.00124695 0.000379965
 78 1 1 0 0 200  0.0426603 0.114099 0.0747032 0.327673 1.03801 1.71464 3.17932 5.69541 6.76558 6.96321 9.10242 13.0229 16.7875 18.9706 19.2763 18.1725 16.3897 14.7791 13.2345 11.3303 8.91364 6.27693 3.90935 2.14897 1.04663 0.454769 0.177644 0.0627878 0.0201549 0.00587797 0.00155357 0.000468212
 79 1 1 0 0 200  0.0723485 0.19182 0.0831724 0.181759 0.570276 0.945631 1.87219 4.03283 6.86486 10.0576 12.5731 13.6108 14.8266 17.0655 18.8039 18.7176 17.0413 14.9872 12.956 10.8819 8.6456 6.31153 4.14177 2.41262 1.2415 0.564585 0.227711 0.0818635 0.0263673 0.00763918 0.00199501 0.00059176
 80 1 1 0 0 200  0.310707 0.821686 0.302806 0.310488 0.906328 1.12792 1.2584 2.32627 4.24407 7.35993 11.6067 15.5342 17.8358 18.4798 18.4447 18.1325 17.0598 15.3587 13.2501 10.9664 8.63709 6.35647 4.28094 2.59334 1.39726 0.665693 0.279997 0.104096 0.0343049 0.0100568 0.00263161 0.000774685
 81 1 1 0 0 200  0.17619 0.470982 0.301415 1.27425 3.75148 4.15669 2.76131 3.09978 3.99416 5.13188 7.7561 11.8019 16.1078 19.1086 19.8998 18.8938 17.0567 15.2072 13.2335 11.0173 8.66962 6.38156 4.33655 2.6812 1.48902 0.735859 0.321768 0.124172 0.0422775 0.0127159 0.0033859 0.00100603
 82 1 1 0 0 200  0.194155 0.515692 0.247047 0.691856 2.16567 3.45695 6.0857 10.5523 11.5137 9.06249 7.95848 9.03191 11.5187 14.7123 17.1819 17.7436 16.4729 14.5406 12.466 10.329 8.14505 6.01774 4.11192 2.56884 1.4516 0.734992 0.331011 0.131931 0.0464025 0.0143861 0.00393209 0.00119645
 83 1 1 0 0 200  0.0437028 0.118596 0.120515 0.707297 2.14695 2.85898 3.80537 7.22946 11.7523 16.2453 18.4597 16.4013 13.146 12.0805 12.9224 13.8948 13.8139 12.7908 11.1526 9.22875 7.247 5.35209 3.67044 2.30918 1.31905 0.678223 0.311652 0.127253 0.0459769 0.0146583 0.00411762 0.00129173
 84 1 1 0 0 200  0.10631 0.281403 0.110446 0.168771 0.569167 1.25184 3.15798 6.4619 9.39251 12.6861 17.52 21.498 21.8947 18.7763 14.8606 12.4323 11.3534 10.6658 9.64589 8.18711 6.49456 4.80638 3.29989 2.08341 1.19818 0.622345 0.289884 0.120395 0.0443821 0.0144717 0.0041636 0.00134626
 85 1 1 0 0 200  0.161591 0.428483 0.186981 0.411376 1.2107 1.41886 1.33668 2.59511 5.57422 10.2656 15.4701 19.7608 22.8017 23.5767 21.1416 16.7439 12.7004 10.2307 8.74191 7.43945 6.00665 4.50587 3.11563 1.97512 1.14087 0.596385 0.28031 0.117796 0.0440544 0.0146088 0.00428313 0.00142141
 86 1 1 0 0 200  0.194134 0.51548 0.242796 0.649461 1.93553 2.39526 2.49881 3.77346 4.76986 5.97239 9.53366 15.1769 20.6434 23.8243 23.8483 20.9755 16.5117 12.4279 9.44969 7.39246 5.78574 4.33979 3.0278 1.93546 1.12492 0.591285 0.279676 0.118477 0.0447585 0.0150242 0.0044677 0.00151366
 87 1 1 0 0 200  0.111895 0.298927 0.186732 0.773175 2.33477 3.04478 3.70369 6.04282 7.60837 8.09964 9.18342 11.2089 14.6703 19.0257 21.9691 21.7676 18.7571 14.817 11.1102 8.14679 5.94058 4.26415 2.92889 1.87273 1.09467 0.579064 0.275571 0.117481 0.0447069 0.0151378 0.00454786 0.00156511
 88 1 1 0 0 200  0.106721 0.283722 0.142568 0.438133 1.36917 2.16703 3.85921 7.24863 9.8245 11.4294 13.0199 13.7181 14.0519 15.2882 17.2305 18.4438 17.676 15.2991 12.1209 8.96612 6.3324 4.32786 2.85299 1.78302 1.03448 0.547844 0.261923 0.1123 0.0429975 0.0146566 0.00443674 0.00154463
 89 1 1 0 0 200  0.0573227 0.1532 0.0973125 0.410783 1.25134 1.72214 2.47173 4.83143 8.06606 12.0406 15.9216 17.8323 17.8512 17.0691 16.2908 15.823 15.1785 13.9541 11.8918 9.28913 6.7009 4.52697 2.89367 1.75019 0.991775 0.518925 0.247281 0.106215 0.0408414 0.0139965 0.00426247 0.00149713
 90 1 1 0 0 200  0.0413533 0.110206 0.0621374 0.228986 0.718911 1.15448 2.12115 4.1625 6.29727 9.05835 13.3247 17.8361 20.7701 21.1235 19.3833 16.9335 14.7026 12.9828 11.256 9.19385 6.92501 4.79328 3.06568 1.82285 1.00878 0.516887 0.242929 0.103662 0.0398135 0.0136742 0.00418123 0.00147862
 91 1 1 0 0 200  0.145057 0.383742 0.144728 0.174547 0.528937 0.789445 1.32968 2.75194 4.76416 7.60571 11.3066 15.2637 19.1621 21.9877 22.3596 20.208 16.8592 13.8834 11.4703 9.29116 7.13973 5.08341 3.31945 1.98573 1.09042 0.550026 0.254176 0.107003 0.0407493 0.0139435 0.00426304 0.00151274
 92 1 1 0 0 200  0.081772 0.218668 0.141938 0.608999 1.79743 2.02773 1.51009 2.06479 3.33899 5.3922 8.64911 12.7166 16.9484 20.5102 22.4323 21.9998 19.4088 16.0905 12.8837 10.0663 7.60469 5.43677 3.60416 2.18794 1.21001 0.608917 0.278728 0.115869 0.0435998 0.014783 0.00449456 0.00159157
 93 1 1 0 0 200  0.127528 0.338254 0.150073 0.34997 1.09529 1.76717 3.16726 5.57792 6.37241 5.85431 6.74091 9.49289 13.3561 17.3993 20.4269 21.4298 20.1696 17.603 14.4353 11.2243 8.32392 5.86443 3.87552 2.36684 1.32042 0.668385 0.30602 0.126547 0.0472007 0.0158475 0.00477591 0.00167835
 94 1 1 0 0 200  0.0897707 0.239379 0.138392 0.522489 1.56701 1.97993 2.29567 4.16818 6.85965 9.7446 11.6791 11.7736 11.944 13.862 16.6856 18.6781 18.8124 17.4433 14.9971 11.9958 8.96924 6.28577 4.11892 2.50437 1.39871 0.711013 0.326808 0.135287 0.0503286 0.0168009 0.00502552 0.00174927
 95 1 1 0 0 200  0.647244 1.71043 0.598723 0.376738 1.11399 1.67058 2.72463 4.96979 6.73547 8.40791 11.3487 14.353 15.7567 15.5974 15.3088 15.6878 16.0154 15.6404 14.204 11.8794 9.14987 6.50549 4.27493 2.59206 1.44334 0.733204 0.337519 0.140018 0.0521425 0.0173871 0.00518304 0.00179159
 96 1 1 0 0 200  0.0594092 0.167785 0.332794 2.38576 7.01481 7.52692 4.14732 3.95632 5.84873 8.33766 11.0774 13.2894 15.0735 16.2258 16.1148 15.0522 13.8822 13.061 12.0779 10.508 8.41377 6.15863 4.11821 2.51624 1.40329 0.712248 0.32762 0.135937 0.0506623 0.0169018 0.00503515 0.00173464
 97 1 1 0 0 200  0.100984 0.267544 0.111338 0.226086 0.916618 2.99325 9.05791 17.0249 17.9048 12.7128 10.2061 11.3783 13.2393 14.358 14.4675 13.6599 12.2529 10.9018 9.68679 8.39196 6.86121 5.16923 3.54662 2.20673 1.24362 0.634173 0.292111 0.12122 0.0451806 0.015078 0.00449337 0.00154731
 98 1 1 0 0 200  0.109882 0.291661 0.134705 0.344312 1.02442 1.29188 1.75542 4.81816 12.0635 21.7054 26.4882 22.7522 16.6202 13.5773 12.7971 12.0875 10.8322 9.47584 8.17172 6.89583 5.58905 4.24967 2.97164 1.88717 1.08163 0.557999 0.258757 0.107726 0.0401997 0.01342 0.00399939 0.00137685
 99 1 1 0 0 200  0.0511095 0.136763 0.0910769 0.402227 1.21262 1.56243 1.85662 3.16026 4.97172 8.83598 16.7615 25.7415 29.3049 25.3418 18.5074 13.4512 10.6467 8.97753 7.60469 6.29358 5.01577 3.78647 2.65872 1.70913 0.994695 0.520609 0.244183 0.102451 0.0384074 0.012851 0.00383307 0.00131945
 100 1 1 0 0 200  0.11906 0.315252 0.126135 0.206997 0.64685 1.06941 2.02072 3.84125 5.26943 6.68086 9.74775 15.2491 22.5093 27.8877 27.425 21.7802 15.1952 10.6941 8.07868 6.3589 4.95321 3.69109 2.57755 1.66035 0.974097 0.51562 0.244726 0.10376 0.039216 0.013196 0.00394979 0.00136246
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
