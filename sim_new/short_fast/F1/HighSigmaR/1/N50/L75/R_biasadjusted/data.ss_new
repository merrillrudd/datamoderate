#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
#_user_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_user_info_available_at:https://vlab.ncep.noaa.gov/group/stock-synthesis
#_Start_time: Sun Apr 26 15:52:34 2020
#_Number_of_datafiles: 2
#C data file created using the SS_writedat function in the R package r4ss
#C should work with SS version: 
#C file write time: 2020-04-26 15:45:55
#_observed data: 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_Catch data: yr, seas, fleet, catch, catch_se
#_catch_se:  standard error of log(catch)
#_NOTE:  catch data is ignored for survey fleets
-999 1 1 0 0
1 1 1 160.306 0.1
2 1 1 198.038 0.1
3 1 1 236.897 0.1
4 1 1 271.74 0.1
5 1 1 308.332 0.1
6 1 1 347.879 0.1
7 1 1 388.01 0.1
8 1 1 425.897 0.1
9 1 1 457.429 0.1
10 1 1 478.071 0.1
11 1 1 487.923 0.1
12 1 1 489.019 0.1
13 1 1 484.328 0.1
14 1 1 477.941 0.1
15 1 1 499.448 0.1
16 1 1 577.775 0.1
17 1 1 657.536 0.1
18 1 1 699.95 0.1
19 1 1 714.284 0.1
20 1 1 720.952 0.1
21 1 1 732.378 0.1
22 1 1 740.46 0.1
23 1 1 745.048 0.1
24 1 1 746.612 0.1
25 1 1 763.789 0.1
26 1 1 779.658 0.1
27 1 1 1876.63 0.1
28 1 1 3021 0.1
29 1 1 4050.11 0.1
30 1 1 4928.04 0.1
31 1 1 5633.22 0.1
32 1 1 6175.84 0.1
33 1 1 6538.79 0.1
34 1 1 6645.8 0.1
35 1 1 6513.79 0.1
36 1 1 6172.68 0.1
37 1 1 5815.03 0.1
38 1 1 5693.93 0.1
39 1 1 5750.01 0.1
40 1 1 5980.9 0.1
41 1 1 6986.99 0.1
42 1 1 8444.71 0.1
43 1 1 8771.64 0.1
44 1 1 8388.18 0.1
45 1 1 8056.96 0.1
46 1 1 7398.56 0.1
47 1 1 6865.12 0.1
48 1 1 6729.34 0.1
49 1 1 6261.01 0.1
50 1 1 5572.98 0.1
51 1 1 5085.22 0.1
52 1 1 4725.22 0.1
53 1 1 4512.45 0.1
54 1 1 4362.41 0.1
55 1 1 4225.04 0.1
56 1 1 4062.78 0.1
57 1 1 3864.98 0.1
58 1 1 3956.69 0.1
59 1 1 4268.98 0.1
60 1 1 4254.05 0.1
61 1 1 4228.35 0.1
62 1 1 4494.52 0.1
63 1 1 4729.09 0.1
64 1 1 4627.12 0.1
65 1 1 4250.61 0.1
66 1 1 4094.58 0.1
67 1 1 4293.92 0.1
68 1 1 4899.56 0.1
69 1 1 6261.13 0.1
70 1 1 6939.69 0.1
71 1 1 6453.11 0.1
72 1 1 5471.12 0.1
73 1 1 4619.38 0.1
74 1 1 4052.21 0.1
75 1 1 3578.39 0.1
76 1 1 3117.13 0.1
77 1 1 2707.39 0.1
78 1 1 2384.6 0.1
79 1 1 2052.03 0.1
80 1 1 1739.49 0.1
81 1 1 1805 0.1
82 1 1 2012.22 0.1
83 1 1 2195.27 0.1
84 1 1 2328.2 0.1
85 1 1 2348.6 0.1
86 1 1 2409.64 0.1
87 1 1 2570.36 0.1
88 1 1 2733.54 0.1
89 1 1 2807.2 0.1
90 1 1 2749.87 0.1
91 1 1 2604.56 0.1
92 1 1 2473.72 0.1
93 1 1 2401.51 0.1
94 1 1 2313.26 0.1
95 1 1 2259.17 0.1
96 1 1 2528.7 0.1
97 1 1 3114.08 0.1
98 1 1 3451.68 0.1
99 1 1 3577.33 0.1
100 1 1 3556.06 0.1
-9999 0 0 0 0
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_yr month fleet obs stderr
1 7 1 1 1 #_ Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins; then enter lower edge of each length bin
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50 0 0 0 1 1 0 0 1 0 1 0 1 8 3 4 3 2 2 3 2 8 5 2 0 2 0 1 0 0 0 0 0
 27 1 1 0 0 50 0 0 0 0 0 0 0 1 3 0 2 3 1 4 6 5 6 1 3 3 4 4 2 0 1 0 0 1 0 0 0 0
 28 1 1 0 0 50 0 0 0 0 0 1 0 0 0 1 0 0 3 7 3 2 3 8 2 5 4 1 1 3 4 1 0 1 0 0 0 0
 29 1 1 0 0 50 0 0 0 0 0 0 0 1 1 2 2 0 0 4 6 4 3 1 2 6 5 4 3 3 2 0 0 1 0 0 0 0
 30 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 0 0 4 4 3 2 2 6 6 5 4 2 1 5 3 2 0 0 0 0 0 0
 31 1 1 0 0 50 0 0 0 0 0 0 0 1 2 0 2 0 3 2 6 3 5 2 2 2 8 3 6 1 1 1 0 0 0 0 0 0
 32 1 1 0 0 50 0 0 0 0 0 1 0 1 0 0 1 0 1 3 2 5 4 3 4 5 7 3 4 3 1 1 0 1 0 0 0 0
 33 1 1 0 0 50 0 0 0 0 0 0 1 0 1 0 3 0 3 1 4 2 3 2 5 4 5 6 3 3 4 0 0 0 0 0 0 0
 34 1 1 0 0 50 0 0 0 0 0 0 1 0 0 2 2 3 4 2 5 2 2 5 5 2 2 5 3 2 2 0 1 0 0 0 0 0
 35 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 1 1 3 2 9 2 6 3 2 5 3 3 3 4 2 0 0 0 0 0 1 0
 36 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 1 3 1 2 2 1 5 2 4 10 5 5 2 3 1 0 1 0 0 0 0 0
 37 1 1 0 0 50 0 0 0 1 0 1 1 0 1 0 2 2 1 1 1 2 1 4 3 5 7 5 4 4 2 1 0 0 1 0 0 0
 38 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 1 5 4 1 1 1 3 2 3 5 4 2 6 5 0 2 0 3 0 0 0 0
 39 1 1 0 0 50 0 0 0 0 1 3 0 1 1 0 3 0 4 4 6 1 4 5 4 4 1 1 4 1 1 1 0 0 0 0 0 0
 40 1 1 0 0 50 0 0 0 0 2 4 3 1 1 0 6 3 2 3 2 3 1 3 2 2 4 2 3 2 0 0 1 0 0 0 0 0
 41 1 1 0 0 50 0 0 0 0 0 0 1 4 2 5 3 3 3 4 5 5 2 4 2 2 0 2 0 1 2 0 0 0 0 0 0 0
 42 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 5 0 6 7 10 7 4 3 3 1 0 0 2 1 0 0 0 0 0 0 0 0
 43 1 1 0 0 50 0 0 0 0 1 0 2 0 0 0 1 0 6 1 3 5 8 5 6 6 2 2 1 1 0 0 0 0 0 0 0 0
 44 1 1 0 0 50 0 0 0 0 1 0 0 1 0 2 2 3 2 2 2 4 2 5 6 4 4 3 1 1 2 1 1 0 0 0 0 1
 45 1 1 0 0 50 0 0 0 0 0 1 0 0 1 2 4 2 7 2 4 4 3 6 4 2 2 1 3 0 0 1 1 0 0 0 0 0
 46 1 1 0 0 50 0 0 0 0 0 0 0 3 0 1 1 0 2 5 4 2 6 5 4 4 3 5 2 2 1 0 0 0 0 0 0 0
 47 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 3 6 1 1 6 4 4 3 4 5 2 3 3 1 2 1 0 0 0 0 0 0
 48 1 1 0 0 50 0 0 0 1 0 1 0 1 0 4 4 1 6 3 1 2 1 5 4 3 3 2 5 0 1 0 1 1 0 0 0 0
 49 1 1 0 0 50 0 0 0 0 0 0 0 1 0 1 2 2 3 3 8 7 7 3 4 2 4 2 1 0 0 0 0 0 0 0 0 0
 50 1 1 0 0 50 0 0 0 0 0 1 1 0 2 3 5 1 1 4 4 3 4 1 3 2 8 3 1 2 0 1 0 0 0 0 0 0
 51 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 1 3 6 2 7 6 4 8 5 3 1 2 1 0 0 0 0 0 0 0 0 0
 52 1 1 0 0 50 0 0 0 0 0 2 0 1 2 3 1 5 1 2 4 5 3 2 4 2 2 4 2 2 1 0 2 0 0 0 0 0
 53 1 1 0 0 50 0 0 0 0 1 0 1 1 0 3 4 2 3 6 8 5 3 1 3 1 3 4 0 1 0 0 0 0 0 0 0 0
 54 1 1 0 0 50 0 0 0 0 1 0 1 0 0 4 2 5 3 7 5 2 5 3 3 3 1 2 1 0 2 0 0 0 0 0 0 0
 55 1 1 0 0 50 0 0 0 0 0 0 0 1 2 3 5 4 3 5 6 4 3 2 2 4 2 1 1 1 1 0 0 0 0 0 0 0
 56 1 1 0 0 50 0 0 0 0 1 0 0 0 0 2 2 2 3 6 6 6 5 5 2 3 3 2 1 0 1 0 0 0 0 0 0 0
 57 1 1 0 0 50 0 0 0 0 0 2 3 0 0 3 4 2 2 4 4 5 4 7 3 1 0 1 3 2 0 0 0 0 0 0 0 0
 58 1 1 0 0 50 0 0 0 1 1 1 0 1 2 5 2 2 5 3 7 9 3 2 4 0 1 0 1 0 0 0 0 0 0 0 0 0
 59 1 1 0 0 50 0 0 0 0 0 0 0 0 2 6 2 3 3 3 6 5 3 7 1 3 4 2 0 0 0 0 0 0 0 0 0 0
 60 1 1 0 0 50 0 0 0 0 0 2 2 0 2 5 1 2 0 5 2 8 5 5 3 3 3 1 0 0 0 1 0 0 0 0 0 0
 61 1 1 0 0 50 0 0 0 0 0 0 0 0 1 7 4 4 2 2 7 4 4 4 4 1 3 2 1 0 0 0 0 0 0 0 0 0
 62 1 1 0 0 50 0 0 0 0 0 0 0 1 2 4 5 1 3 7 11 6 3 2 3 1 0 0 0 0 1 0 0 0 0 0 0 0
 63 1 1 0 0 50 0 0 0 0 0 0 0 0 3 5 5 4 3 6 3 6 7 1 1 3 0 1 0 2 0 0 0 0 0 0 0 0
 64 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 3 2 2 1 10 4 7 6 5 6 1 1 0 0 0 0 0 0 0 0 0 0
 65 1 1 0 0 50 0 0 0 0 1 1 0 0 0 1 3 2 6 6 7 2 4 4 2 4 3 1 2 1 0 0 0 0 0 0 0 0
 66 1 1 0 0 50 0 0 0 1 0 1 0 0 2 6 7 4 2 1 2 1 2 4 4 2 4 1 2 3 1 0 0 0 0 0 0 0
 67 1 1 0 0 50 0 0 0 0 0 6 1 0 2 1 2 2 8 5 6 3 2 1 3 2 3 1 0 0 2 0 0 0 0 0 0 0
 68 1 1 0 0 50 0 0 0 0 0 1 0 2 9 4 6 1 3 3 1 2 6 2 3 1 2 0 2 1 1 0 0 0 0 0 0 0
 69 1 1 0 0 50 0 0 0 0 0 1 1 2 4 1 4 1 5 7 9 4 6 2 0 1 0 1 1 0 0 0 0 0 0 0 0 0
 70 1 1 0 0 50 0 0 0 0 0 0 0 0 0 1 1 2 6 10 7 4 4 6 5 2 0 1 0 1 0 0 0 0 0 0 0 0
 71 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 2 2 3 4 4 6 8 4 8 3 2 1 1 0 1 0 1 0 0 0 0 0
 72 1 1 0 0 50 0 0 0 0 1 0 0 0 1 2 0 3 1 0 5 4 6 5 7 4 4 2 3 1 1 0 0 0 0 0 0 0
 73 1 1 0 0 50 0 0 0 0 1 0 0 0 2 3 3 3 2 4 2 2 3 2 4 6 7 4 2 0 0 0 0 0 0 0 0 0
 74 1 1 0 0 50 0 0 0 0 0 0 1 2 2 0 3 1 7 2 3 2 3 2 5 9 1 4 0 2 0 1 0 0 0 0 0 0
 75 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 3 2 2 3 4 6 2 3 6 3 4 1 5 2 0 0 1 0 0 0 0 0
 76 1 1 0 0 50 0 0 0 0 0 1 0 1 0 1 2 1 3 8 0 7 3 4 2 2 5 3 0 3 3 0 0 1 0 0 0 0
 77 1 1 0 0 50 0 0 0 0 0 0 0 0 0 5 4 3 4 1 2 3 4 8 3 2 2 3 3 2 0 1 0 0 0 0 0 0
 78 1 1 0 0 50 0 0 0 0 0 0 0 3 0 0 0 1 5 5 3 5 5 5 4 2 7 1 1 2 0 1 0 0 0 0 0 0
 79 1 1 0 0 50 0 0 0 0 0 0 0 0 0 0 1 1 3 1 2 3 3 8 5 4 4 3 2 2 3 2 2 0 1 0 0 0
 80 1 1 0 0 50 0 0 0 0 1 2 0 0 2 2 2 2 1 2 4 4 4 3 5 1 8 4 1 0 1 0 1 0 0 0 0 0
 81 1 1 0 0 50 0 0 0 0 0 0 1 0 1 4 5 4 1 4 2 2 0 6 5 4 3 2 2 3 0 0 1 0 0 0 0 0
 82 1 1 0 0 50 0 0 0 0 1 2 0 0 1 3 2 2 6 4 3 1 3 3 6 1 3 3 2 0 1 1 0 1 1 0 0 0
 83 1 1 0 0 50 0 0 0 0 0 0 0 2 2 5 2 5 0 3 3 5 5 2 4 3 5 3 1 0 0 0 0 0 0 0 0 0
 84 1 1 0 0 50 0 0 0 1 0 0 1 0 0 0 1 4 7 0 4 4 7 3 5 3 6 2 1 1 0 0 0 0 0 0 0 0
 85 1 1 0 0 50 0 0 0 0 1 0 0 0 0 2 3 0 2 3 7 2 7 5 5 3 4 1 1 1 2 0 1 0 0 0 0 0
 86 1 1 0 0 50 0 0 1 0 0 1 0 0 0 2 3 2 1 4 2 2 3 8 4 5 3 1 3 1 2 2 0 0 0 0 0 0
 87 1 1 0 0 50 0 0 0 0 0 0 1 1 1 2 4 3 4 4 3 4 3 7 2 5 1 3 2 0 0 0 0 0 0 0 0 0
 88 1 1 0 0 50 0 0 0 0 0 0 0 0 1 1 1 3 3 8 3 7 6 2 4 2 2 3 3 1 0 0 0 0 0 0 0 0
 89 1 1 0 0 50 0 0 0 0 0 0 0 0 2 1 1 2 1 2 6 4 6 2 3 7 3 3 3 3 1 0 0 0 0 0 0 0
 90 1 1 0 0 50 0 0 0 0 0 1 0 0 0 1 2 1 2 1 7 5 7 4 4 1 2 3 3 1 3 2 0 0 0 0 0 0
 91 1 1 0 0 50 0 0 0 1 0 0 1 0 0 1 0 3 3 1 4 4 5 5 6 2 2 4 4 1 1 1 1 0 0 0 0 0
 92 1 1 0 0 50 0 0 0 0 1 0 0 0 0 1 3 2 3 5 3 4 1 5 6 5 5 3 1 1 0 1 0 0 0 0 0 0
 93 1 1 0 0 50 0 0 0 0 0 0 0 0 0 2 1 1 5 4 4 5 4 6 8 3 2 2 2 1 0 0 0 0 0 0 0 0
 94 1 1 0 0 50 0 0 0 0 0 2 1 1 2 0 1 2 2 2 4 3 4 2 3 5 4 2 3 3 1 1 2 0 0 0 0 0
 95 1 1 0 0 50 0 0 0 0 3 2 1 0 1 1 1 2 2 3 4 3 5 3 4 4 4 3 1 2 0 1 0 0 0 0 0 0
 96 1 1 0 0 50 0 0 0 0 0 0 0 1 5 5 10 3 4 2 1 3 1 1 1 2 2 1 3 1 3 1 0 0 0 0 0 0
 97 1 1 0 0 50 0 0 0 0 0 0 0 1 0 1 2 5 4 10 10 5 3 3 1 2 1 0 0 1 1 0 0 0 0 0 0 0
 98 1 1 0 0 50 0 0 0 0 0 0 0 1 1 1 0 1 2 6 6 8 4 5 6 2 5 0 0 0 1 0 0 1 0 0 0 0
 99 1 1 0 0 50 0 0 0 0 0 0 0 0 1 0 1 1 4 6 2 8 7 0 8 3 2 4 0 0 2 1 0 0 0 0 0 0
 100 1 1 0 0 50 0 0 0 0 1 1 0 2 0 2 0 3 2 3 1 5 7 3 5 5 1 0 2 4 2 0 0 0 0 1 0 0
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

#_expected values with no error added 
#V3.30.15.00-safe;_2020_03_26;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
1 #_StartYr
100 #_EndYr
1 #_Nseas
 12 #_months/season
2 #_Nsubseasons (even number, minimum is 2)
1 #_spawn_month
1 #_Ngenders: 1, 2, -1  (use -1 for 1 sex setup with SSB multiplied by female_frac parameter)
30 #_Nages=accumulator age, first age is always age 0
1 #_Nareas
2 #_Nfleets (including surveys)
#_fleet_type: 1=catch fleet; 2=bycatch only fleet; 3=survey; 4=ignore 
#_sample_timing: -1 for fishing fleet to use season-long catch-at-age for observations, or 1 to use observation month;  (always 1 for surveys)
#_fleet_area:  area the fleet/survey operates in 
#_units of catch:  1=bio; 2=num (ignored for surveys; their units read later)
#_catch_mult: 0=no; 1=yes
#_rows are fleets
#_fleet_type fishery_timing area catch_units need_catch_mult fleetname
 1 -1 1 1 0 Fishery  # 1
 3 1 1 2 0 Survey  # 2
#Bycatch_fleet_input_goes_next
#a:  fleet index
#b:  1=include dead bycatch in total dead catch for F0.1 and MSY optimizations and forecast ABC; 2=omit from total catch for these purposes (but still include the mortality)
#c:  1=Fmult scales with other fleets; 2=bycatch F constant at input value; 3=bycatch F from range of years
#d:  F or first year of range
#e:  last year of range
#f:  not used
# a   b   c   d   e   f 
#_catch:_columns_are_year,season,fleet,catch,catch_se
#_Catch data: yr, seas, fleet, catch, catch_se
-999 1 1 0 0
1 1 1 160.306 0.1
2 1 1 198.038 0.1
3 1 1 236.897 0.1
4 1 1 271.74 0.1
5 1 1 308.332 0.1
6 1 1 347.879 0.1
7 1 1 388.01 0.1
8 1 1 425.897 0.1
9 1 1 457.429 0.1
10 1 1 478.071 0.1
11 1 1 487.923 0.1
12 1 1 489.019 0.1
13 1 1 484.328 0.1
14 1 1 477.941 0.1
15 1 1 499.448 0.1
16 1 1 577.775 0.1
17 1 1 657.536 0.1
18 1 1 699.95 0.1
19 1 1 714.284 0.1
20 1 1 720.952 0.1
21 1 1 732.378 0.1
22 1 1 740.46 0.1
23 1 1 745.048 0.1
24 1 1 746.612 0.1
25 1 1 763.789 0.1
26 1 1 779.658 0.1
27 1 1 1876.63 0.1
28 1 1 3021 0.1
29 1 1 4050.11 0.1
30 1 1 4928.04 0.1
31 1 1 5633.22 0.1
32 1 1 6175.84 0.1
33 1 1 6538.79 0.1
34 1 1 6645.8 0.1
35 1 1 6513.79 0.1
36 1 1 6172.68 0.1
37 1 1 5815.03 0.1
38 1 1 5693.93 0.1
39 1 1 5750.01 0.1
40 1 1 5980.9 0.1
41 1 1 6986.99 0.1
42 1 1 8444.71 0.1
43 1 1 8771.64 0.1
44 1 1 8388.18 0.1
45 1 1 8056.96 0.1
46 1 1 7398.56 0.1
47 1 1 6865.12 0.1
48 1 1 6729.34 0.1
49 1 1 6261.01 0.1
50 1 1 5572.98 0.1
51 1 1 5085.22 0.1
52 1 1 4725.22 0.1
53 1 1 4512.45 0.1
54 1 1 4362.41 0.1
55 1 1 4225.04 0.1
56 1 1 4062.78 0.1
57 1 1 3864.98 0.1
58 1 1 3956.69 0.1
59 1 1 4268.98 0.1
60 1 1 4254.05 0.1
61 1 1 4228.35 0.1
62 1 1 4494.52 0.1
63 1 1 4729.09 0.1
64 1 1 4627.12 0.1
65 1 1 4250.61 0.1
66 1 1 4094.58 0.1
67 1 1 4293.92 0.1
68 1 1 4899.56 0.1
69 1 1 6261.13 0.1
70 1 1 6939.69 0.1
71 1 1 6453.11 0.1
72 1 1 5471.12 0.1
73 1 1 4619.38 0.1
74 1 1 4052.21 0.1
75 1 1 3578.39 0.1
76 1 1 3117.13 0.1
77 1 1 2707.39 0.1
78 1 1 2384.6 0.1
79 1 1 2052.03 0.1
80 1 1 1739.49 0.1
81 1 1 1805 0.1
82 1 1 2012.22 0.1
83 1 1 2195.27 0.1
84 1 1 2328.2 0.1
85 1 1 2348.6 0.1
86 1 1 2409.64 0.1
87 1 1 2570.36 0.1
88 1 1 2733.54 0.1
89 1 1 2807.2 0.1
90 1 1 2749.87 0.1
91 1 1 2604.56 0.1
92 1 1 2473.72 0.1
93 1 1 2401.51 0.1
94 1 1 2313.26 0.1
95 1 1 2259.17 0.1
96 1 1 2528.7 0.1
97 1 1 3114.08 0.1
98 1 1 3451.68 0.1
99 1 1 3577.33 0.1
100 1 1 3556.06 0.1
-9999 0 0 0 0
#
#
 #_CPUE_and_surveyabundance_observations
#_Units:  0=numbers; 1=biomass; 2=F; 30=spawnbio; 31=recdev; 32=spawnbio*recdev; 33=recruitment; 34=depletion(&see Qsetup); 35=parm_dev(&see Qsetup)
#_Errtype:  -1=normal; 0=lognormal; >0=T
#_SD_Report: 0=no sdreport; 1=enable sdreport
#_Fleet Units Errtype SD_Report
1 1 0 0 # Fishery
2 1 0 0 # Survey
#_year month index obs err
1 7 1 94724 1 #_orig_obs: 1 Fishery
-9999 1 1 1 1 # terminator for survey observations 
#
0 #_N_fleets_with_discard
#_discard_units (1=same_as_catchunits(bio/num); 2=fraction; 3=numbers)
#_discard_errtype:  >0 for DF of T-dist(read CV below); 0 for normal with CV; -1 for normal with se; -2 for lognormal; -3 for trunc normal with CV
# note, only have units and errtype for fleets with discard 
#_Fleet units errtype
# -9999 0 0 0.0 0.0 # terminator for discard data 
#
0 #_use meanbodysize_data (0/1)
#_COND_0 #_DF_for_meanbodysize_T-distribution_like
# note:  type=1 for mean length; type=2 for mean body weight 
#_yr month fleet part type obs stderr
#  -9999 0 0 0 0 0 0 # terminator for mean body size data 
#
# set up population length bin structure (note - irrelevant if not using size data and using empirical wtatage
2 # length bin method: 1=use databins; 2=generate from binwidth,min,max below; 3=read vector
1 # binwidth for population size comp 
10 # minimum size in the population (lower edge of first bin and size at age 0.00) 
72 # maximum size in the population (lower edge of last bin) 
1 # use length composition data (0/1)
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
32 #_N_LengthBins
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72
#_yr month fleet sex part Nsamp datavector(female-male)
 26 1 1 0 0 50  2.96931e-06 0.000242075 0.00725768 0.0803933 0.333646 0.526679 0.33844 0.199517 0.410852 0.879777 1.54231 2.48903 3.57653 4.17596 3.94946 3.36206 3.01827 3.08586 3.34244 3.55021 3.55619 3.2951 2.79148 2.14447 1.48461 0.921627 0.511004 0.252247 0.110572 0.0429527 0.0147622 0.00604057
 27 1 1 0 0 50  5.93301e-07 4.8049e-05 0.00144087 0.0159815 0.0668567 0.113039 0.134091 0.356827 0.993308 1.77689 2.08591 1.9533 2.11803 2.85689 3.74317 4.25745 4.22541 3.93105 3.65083 3.484 3.33865 3.06992 2.61532 2.02474 1.4105 0.879262 0.488678 0.241497 0.105892 0.0411267 0.0141282 0.00577666
 28 1 1 0 0 50  2.25313e-06 0.00018359 0.00550418 0.0609684 0.252996 0.398902 0.252489 0.131403 0.25387 0.564244 1.05599 1.82437 2.78597 3.5339 3.84971 3.96566 4.09879 4.23741 4.21456 3.9916 3.62672 3.16146 2.6066 1.99111 1.38398 0.86476 0.482234 0.239005 0.105014 0.0408363 0.0140369 0.0057399
 29 1 1 0 0 50  8.73911e-07 7.09634e-05 0.00212778 0.0235854 0.0982869 0.160851 0.149981 0.298348 0.803789 1.4287 1.6515 1.49575 1.59238 2.23819 3.15831 3.93867 4.3504 4.49749 4.47415 4.2995 3.94786 3.41704 2.75833 2.05728 1.40381 0.867721 0.481683 0.23856 0.104935 0.0408737 0.014072 0.00576265
 30 1 1 0 0 50  1.31117e-06 0.000106669 0.00319805 0.0354285 0.14713 0.233598 0.161195 0.145869 0.353131 0.717519 1.13872 1.67882 2.36372 2.9228 3.19748 3.41708 3.78001 4.23512 4.54154 4.55077 4.2477 3.68881 2.96589 2.19151 1.47663 0.900866 0.494554 0.242997 0.106382 0.0413475 0.0142286 0.00583151
 31 1 1 0 0 50  8.80242e-07 7.14796e-05 0.00214312 0.0237481 0.0987817 0.159085 0.128026 0.191828 0.501414 0.919006 1.16329 1.28531 1.63848 2.30195 3.04013 3.62985 4.00392 4.29006 4.51727 4.60372 4.42966 3.9446 3.21456 2.38307 1.60029 0.969465 0.527658 0.257022 0.111654 0.0431282 0.0147749 0.00603559
 32 1 1 0 0 50  2.53887e-06 0.000206924 0.00620382 0.0687204 0.28522 0.450478 0.291274 0.177711 0.355571 0.679402 0.969304 1.27063 1.7297 2.26382 2.74015 3.2 3.68562 4.18139 4.55838 4.70705 4.56182 4.104 3.38722 2.53945 1.71722 1.0425 0.566358 0.274643 0.118618 0.0455354 0.0155081 0.00629423
 33 1 1 0 0 50  1.32249e-06 0.000107595 0.0032261 0.035753 0.148824 0.241176 0.206067 0.351242 0.928137 1.65394 1.91818 1.70128 1.61836 1.92186 2.40223 2.88807 3.33811 3.79612 4.20438 4.44675 4.40663 4.0306 3.36653 2.54764 1.73611 1.06024 0.578129 0.280708 0.121122 0.0463723 0.0157328 0.00634799
 34 1 1 0 0 50  6.55668e-07 5.31406e-05 0.00159329 0.0176581 0.0735196 0.119392 0.104237 0.187856 0.519558 1.02321 1.51158 2.03894 2.69734 3.18008 3.23457 3.10876 3.1501 3.45274 3.84169 4.12171 4.15008 3.85646 3.2678 2.50299 1.72218 1.05963 0.58109 0.283303 0.122556 0.0469727 0.0159322 0.00641384
 35 1 1 0 0 50  8.23133e-07 6.68154e-05 0.00200317 0.0221926 0.0921941 0.146821 0.104935 0.110295 0.27668 0.554517 0.868123 1.31467 2.0343 2.88766 3.57938 3.94408 4.01428 4.01728 4.07013 4.15056 4.12279 3.84918 3.29638 2.55357 1.77519 1.10197 0.608762 0.298552 0.129748 0.0498983 0.0169635 0.00683804
 36 1 1 0 0 50  1.83098e-06 0.000149118 0.00447072 0.0495247 0.2056 0.325447 0.216304 0.158103 0.340359 0.627174 0.821399 0.97262 1.33365 1.97962 2.77822 3.54882 4.12221 4.48811 4.65036 4.63376 4.44051 4.03965 3.42175 2.65028 1.85227 1.15819 0.644552 0.318238 0.139112 0.0537619 0.0183499 0.00742528
 37 1 1 0 0 50  3.06919e-06 0.000250232 0.0075024 0.0831116 0.34512 0.5475 0.373669 0.315354 0.71002 1.26877 1.50658 1.41034 1.42342 1.71471 2.1657 2.72236 3.34664 3.9769 4.45946 4.66882 4.55352 4.12674 3.4547 2.64799 1.84047 1.15002 0.641718 0.318258 0.139836 0.0543188 0.018628 0.0075781
 38 1 1 0 0 50  1.82537e-06 0.000148661 0.00445738 0.0493943 0.205497 0.331487 0.271083 0.421423 1.10431 1.9992 2.41989 2.33502 2.32942 2.49577 2.56785 2.59199 2.77295 3.17729 3.64959 3.99051 4.04834 3.76455 3.18821 2.44786 1.69625 1.05593 0.587797 0.2914 0.128219 0.0499423 0.017187 0.00702719
 39 1 1 0 0 50  6.42067e-06 0.000523918 0.0157078 0.173992 0.722014 1.13857 0.721443 0.372818 0.670796 1.2772 1.8211 2.35347 3.0545 3.61277 3.65872 3.34469 3.04638 2.98445 3.10656 3.27452 3.3287 3.14929 2.71658 2.11407 1.47609 0.921533 0.513047 0.254103 0.111714 0.0435085 0.0149847 0.00614159
 40 1 1 0 0 50  9.52324e-06 0.000777281 0.0233044 0.258159 1.07182 1.69775 1.1374 0.867086 1.86793 3.27682 3.70051 3.03721 2.5105 2.6469 2.99982 3.1631 3.06933 2.87605 2.693 2.56259 2.44136 2.24574 1.92726 1.50796 1.06165 0.667704 0.373654 0.185608 0.0817053 0.0318319 0.0109633 0.00449477
 41 1 1 0 0 50  9.6093e-07 7.8074e-05 0.00234173 0.0259932 0.109235 0.191649 0.280748 0.879752 2.4894 4.48294 5.30294 4.82372 4.37391 4.22467 3.78551 3.08995 2.54239 2.26872 2.10811 1.94753 1.75744 1.53106 1.26476 0.969963 0.678112 0.426609 0.239553 0.119484 0.0527855 0.0206191 0.00711348 0.00291976
 42 1 1 0 0 50  7.35319e-07 5.96445e-05 0.0017882 0.0198131 0.0823593 0.131899 0.100779 0.137903 0.402668 0.9791 2.02246 3.7378 5.7675 6.98339 6.69153 5.4108 4.0434 3.05359 2.3949 1.95418 1.6325 1.35151 1.0729 0.797025 0.544571 0.337808 0.188384 0.09377 0.0414566 0.0162266 0.00561124 0.00230936
 43 1 1 0 0 50  3.50613e-06 0.000285912 0.00857193 0.0949482 0.393974 0.620803 0.389487 0.182988 0.304374 0.580079 0.869897 1.34641 2.38157 4.02031 5.73936 6.72333 6.51482 5.48718 4.19625 3.06158 2.22331 1.6295 1.18604 0.832396 0.547927 0.331421 0.181673 0.0894209 0.039272 0.0153213 0.00529309 0.00218036
 44 1 1 0 0 50  1.92088e-06 0.000156461 0.00469133 0.0519906 0.216395 0.350412 0.297217 0.498437 1.30858 2.30422 2.57795 2.07691 1.74473 2.12305 3.05834 4.1988 5.10608 5.47507 5.15327 4.29132 3.22735 2.25244 1.49494 0.953982 0.581777 0.333394 0.176254 0.0846892 0.0365985 0.0141249 0.00484556 0.00198616
 45 1 1 0 0 50  1.69122e-06 0.000137705 0.00412873 0.0457454 0.190141 0.304254 0.229273 0.289258 0.749958 1.46108 2.11464 2.7597 3.52475 4.00465 3.90219 3.63375 3.68082 4.03328 4.28626 4.13324 3.54654 2.71122 1.86523 1.17022 0.677429 0.363998 0.181251 0.0830174 0.0346332 0.0130375 0.00439563 0.00177572
 46 1 1 0 0 50  2.92794e-06 0.000238697 0.00715654 0.0792796 0.329193 0.522019 0.354669 0.293856 0.668279 1.25175 1.69155 2.06995 2.75087 3.64002 4.30838 4.53239 4.3919 4.16909 3.97368 3.7523 3.37541 2.78675 2.06852 1.37204 0.814939 0.435758 0.21089 0.0926789 0.0369933 0.0133766 0.00436224 0.00170696
 47 1 1 0 0 50  3.12344e-06 0.000254663 0.00763543 0.0845937 0.351485 0.560574 0.406936 0.448099 1.09414 1.97405 2.39051 2.34446 2.49625 3.01443 3.57684 3.9837 4.18117 4.20734 4.04563 3.71659 3.25229 2.67656 2.03369 1.40271 0.868354 0.47982 0.236372 0.103943 0.0408876 0.0144132 0.00455664 0.00171118
 48 1 1 0 0 50  2.092e-06 0.000170435 0.00511019 0.0566252 0.235503 0.378807 0.30117 0.438445 1.14424 2.11226 2.69724 2.91039 3.28172 3.73411 3.88101 3.78378 3.69238 3.69466 3.64901 3.44363 3.05488 2.52192 1.91998 1.33536 0.840618 0.47514 0.239724 0.107576 0.0428683 0.0151665 0.00476665 0.00175368
 49 1 1 0 0 50  3.40204e-06 0.000277413 0.00831735 0.0921395 0.382603 0.606891 0.413838 0.350056 0.806584 1.53257 2.12853 2.66695 3.45157 4.22205 4.52672 4.37637 4.04141 3.74622 3.48459 3.19917 2.83195 2.35906 1.81512 1.27432 0.809634 0.462639 0.236552 0.107782 0.0436243 0.0156502 0.00497002 0.00183757
 50 1 1 0 0 50  1.75383e-06 0.00014282 0.00428232 0.0474588 0.197557 0.320258 0.274584 0.472219 1.2566 2.27618 2.76639 2.73914 2.95246 3.56512 4.13478 4.38192 4.29292 4.02095 3.63948 3.20277 2.7319 2.22592 1.69957 1.19533 0.764405 0.440492 0.227337 0.104631 0.0428098 0.0155337 0.00498952 0.00186916
 51 1 1 0 0 50  4.18891e-06 0.00034167 0.0102438 0.113474 0.471021 0.744738 0.488203 0.328901 0.696973 1.3537 1.98494 2.66878 3.57329 4.33032 4.54513 4.37531 4.13362 3.93754 3.6701 3.27153 2.76686 2.2092 1.65246 1.14561 0.727659 0.41909 0.217079 0.100521 0.0414364 0.01516 0.00491216 0.00186186
 52 1 1 0 0 50  4.09906e-06 0.000334335 0.0100243 0.111061 0.461489 0.73647 0.538237 0.60638 1.48245 2.64245 3.09217 2.80812 2.75285 3.25784 3.86839 4.19533 4.15505 3.90516 3.53974 3.10738 2.62008 2.0895 1.55399 1.06662 0.670162 0.382638 0.197197 0.0911888 0.0376518 0.0138285 0.00450469 0.00172183
 53 1 1 0 0 50  4.13268e-06 0.000337079 0.0101065 0.111969 0.465191 0.741383 0.533951 0.57238 1.39923 2.57825 3.29168 3.53424 3.91437 4.30082 4.23334 3.85192 3.51699 3.32614 3.11352 2.78347 2.34754 1.85798 1.37073 0.934357 0.583188 0.330705 0.169305 0.0778561 0.0320249 0.0117416 0.00382588 0.00146691
 54 1 1 0 0 50  5.47547e-06 0.000446734 0.013394 0.148381 0.616207 0.978325 0.67417 0.598275 1.38231 2.53341 3.21425 3.44275 3.89601 4.49531 4.67625 4.35162 3.79921 3.28244 2.83248 2.42441 2.02086 1.60135 1.18283 0.804327 0.499523 0.281589 0.14331 0.0655377 0.0268239 0.00979355 0.00318104 0.00121712
 55 1 1 0 0 50  2.10613e-06 0.00017159 0.00514511 0.0570265 0.237533 0.387151 0.348661 0.656924 1.77163 3.21497 3.91283 3.84252 3.96941 4.4144 4.59932 4.35823 3.8825 3.36907 2.84016 2.32184 1.8408 1.40404 1.01453 0.682861 0.422098 0.237147 0.120245 0.054754 0.0223084 0.00810865 0.00262297 0.000999146
 56 1 1 0 0 50  4.76682e-06 0.000388862 0.0116587 0.129147 0.536069 0.847439 0.554386 0.36906 0.782945 1.54708 2.35081 3.30359 4.5251 5.45128 5.53058 4.96893 4.24708 3.61911 3.03214 2.45442 1.9048 1.40873 0.984964 0.644572 0.390428 0.216525 0.108924 0.0493449 0.0200249 0.00725211 0.00233743 0.000886271
 57 1 1 0 0 50  5.41545e-06 0.000441833 0.0132472 0.146761 0.609621 0.969908 0.684829 0.675467 1.5944 2.8379 3.32154 3.02887 3.01582 3.64868 4.39626 4.74858 4.55545 4.018 3.32495 2.62435 1.98901 1.43941 0.983751 0.628231 0.37143 0.20161 0.0996847 0.0445833 0.0179287 0.00645151 0.00206961 0.000780976
 58 1 1 0 0 50  4.12477e-06 0.000336434 0.0100873 0.111764 0.464521 0.742893 0.555961 0.680352 1.70906 3.11643 3.86079 3.90686 4.0806 4.38219 4.31586 3.9559 3.61411 3.35708 3.01489 2.52683 1.96109 1.4138 0.94952 0.593289 0.343069 0.182286 0.0883635 0.0388295 0.0153829 0.00546864 0.00173774 0.000649939
 59 1 1 0 0 50  3.378e-06 0.000275452 0.00825879 0.0915035 0.380283 0.607749 0.451497 0.540845 1.3625 2.53713 3.32444 3.7653 4.43766 5.10313 5.15137 4.61491 3.90246 3.29685 2.78106 2.30023 1.82353 1.35487 0.929077 0.583744 0.335132 0.175478 0.0835726 0.0360693 0.0140488 0.00491825 0.00154191 0.000568484
 60 1 1 0 0 50  8.87347e-06 0.000724218 0.0217132 0.240518 0.998209 1.57595 1.01362 0.591769 1.13853 2.09507 2.74171 3.12483 3.78284 4.57606 4.95905 4.79508 4.27074 3.63258 2.96562 2.33472 1.7753 1.29139 0.883778 0.559843 0.324322 0.170507 0.0809872 0.0346591 0.0133363 0.0046045 0.00142332 0.000515862
 61 1 1 0 0 50  4.22038e-06 0.000344244 0.0103218 0.114381 0.475855 0.767485 0.626468 0.967138 2.51219 4.45117 5.07032 4.23546 3.52553 3.56461 3.78098 3.77744 3.53913 3.17057 2.69111 2.15248 1.6238 1.15505 0.771611 0.480392 0.276001 0.144886 0.0689148 0.029519 0.0113396 0.00389608 0.00119504 0.000427508
 62 1 1 0 0 50  3.89385e-06 0.000317576 0.00952171 0.10549 0.438248 0.698136 0.500534 0.529871 1.3102 2.50936 3.51104 4.37072 5.39437 5.97698 5.49258 4.38158 3.40309 2.80182 2.36782 1.94394 1.50525 1.08598 0.725908 0.447856 0.253991 0.131735 0.06212 0.0264761 0.0101458 0.00348079 0.00106567 0.000379448
 63 1 1 0 0 50  1.93141e-06 0.000157321 0.00471709 0.052275 0.217552 0.351931 0.29591 0.490109 1.30544 2.40841 3.07973 3.39013 4.05791 5.03294 5.63731 5.51571 4.78503 3.83619 2.91977 2.16804 1.58696 1.12671 0.755748 0.469321 0.266756 0.137921 0.0646046 0.0273203 0.0103944 0.00354588 0.00108117 0.00038355
 64 1 1 0 0 50  1.61128e-06 0.000131177 0.00393302 0.0435776 0.181148 0.290102 0.220545 0.285765 0.744566 1.45095 2.11411 2.843 3.88452 4.90808 5.44102 5.46272 5.13393 4.5867 3.82358 2.95064 2.12228 1.43732 0.920658 0.554993 0.311192 0.160208 0.0749419 0.03163 0.011991 0.0040708 0.00123464 0.000435237
 65 1 1 0 0 50  8.08116e-06 0.000659515 0.0197731 0.219018 0.908749 1.43144 0.89375 0.399036 0.628413 1.16047 1.57966 1.96405 2.67022 3.6463 4.52398 5.04431 5.11379 4.83668 4.27023 3.50584 2.66424 1.86611 1.20292 0.71419 0.390676 0.19644 0.0903214 0.0377214 0.0142158 0.00480826 0.00145375 0.000510187
 66 1 1 0 0 50  2.75365e-06 0.000224469 0.00673082 0.0746063 0.310865 0.508172 0.469226 0.917998 2.45978 4.32215 4.78327 3.67883 2.65554 2.53756 2.9047 3.31678 3.59448 3.69219 3.532 3.1102 2.50798 1.84588 1.23689 0.753253 0.416445 0.208871 0.0949601 0.039073 0.0145148 0.00485217 0.00145447 0.000506775
 67 1 1 0 0 50  1.45018e-05 0.00118383 0.0354928 0.393132 1.63101 2.56678 1.58349 0.619617 0.864124 1.68433 2.58579 3.62455 4.78552 5.32245 4.74444 3.64786 2.8468 2.53484 2.41481 2.2365 1.91968 1.49937 1.05784 0.671924 0.383624 0.196694 0.0905168 0.0373701 0.0138336 0.00458798 0.00136169 0.000468552
 68 1 1 0 0 50  5.28954e-06 0.000431555 0.0129399 0.143398 0.596702 0.964181 0.801201 1.2856 3.34541 5.853 6.41225 4.79204 3.27935 3.01891 3.3095 3.36654 3.00372 2.45478 1.93231 1.53298 1.23047 0.961613 0.701052 0.46436 0.276052 0.146553 0.0693469 0.0292255 0.0109665 0.00366326 0.00108914 0.000373252
 69 1 1 0 0 50  1.42403e-06 0.000115889 0.00347496 0.0385203 0.160576 0.26355 0.252328 0.529037 1.48193 2.87045 4.07537 5.15283 6.3431 6.82361 5.90186 4.28094 2.99079 2.28274 1.84183 1.45894 1.10461 0.800266 0.553538 0.360202 0.216062 0.117399 0.057129 0.0247429 0.00950929 0.00323886 0.000977179 0.000338725
 70 1 1 0 0 50  7.31587e-07 5.93402e-05 0.00177916 0.0197169 0.0820615 0.132847 0.112751 0.193541 0.541885 1.12174 1.84972 2.93109 4.52304 6.11714 6.95308 6.71485 5.61914 4.24188 2.9814 2.03644 1.39462 0.952243 0.63042 0.394628 0.229778 0.12294 0.0597801 0.0261621 0.0102267 0.00355202 0.00109266 0.000387057
 71 1 1 0 0 50  1.50552e-06 0.00012254 0.00367388 0.040698 0.168969 0.26764 0.179422 0.138987 0.314454 0.62263 0.966947 1.49088 2.45936 3.84972 5.32191 6.39463 6.65467 6.13032 5.03153 3.71825 2.51939 1.59936 0.968073 0.561624 0.3096 0.159617 0.0757681 0.0327118 0.0127299 0.0044353 0.00137648 0.000495786
 72 1 1 0 0 50  3.04211e-06 0.00024802 0.00743605 0.0823745 0.342006 0.541804 0.363627 0.280607 0.61198 1.09828 1.33262 1.34565 1.59396 2.30149 3.35911 4.53548 5.49136 5.98254 5.81097 5.00782 3.83594 2.62902 1.62884 0.923176 0.483518 0.235192 0.106071 0.0440501 0.016692 0.00572077 0.00176045 0.000633391
 73 1 1 0 0 50  2.46689e-06 0.000201049 0.00602802 0.0667909 0.277664 0.444947 0.340109 0.443303 1.12239 2.01737 2.40205 2.24151 2.18329 2.42508 2.76949 3.22179 3.83098 4.48713 4.88007 4.76998 4.13849 3.17617 2.15872 1.30454 0.705044 0.343001 0.15109 0.0604923 0.022034 0.00728739 0.00217969 0.000765486
 74 1 1 0 0 50  2.72204e-06 0.000221884 0.00665258 0.0737027 0.306186 0.487671 0.348843 0.365111 0.893563 1.67958 2.25538 2.65328 3.2003 3.67385 3.71272 3.49471 3.39796 3.56828 3.82073 3.90691 3.65987 3.07074 2.28318 1.49876 0.868587 0.445322 0.202618 0.0821095 0.0297392 0.0096537 0.00281317 0.000953349
 75 1 1 0 0 50  1.56462e-06 0.000127368 0.00381893 0.0423195 0.176071 0.284126 0.233281 0.366823 0.969495 1.78969 2.29109 2.51764 2.98511 3.65974 4.10589 4.16813 3.97871 3.77195 3.61431 3.46609 3.2183 2.78441 2.18254 1.52528 0.942903 0.513908 0.246766 0.104467 0.0390509 0.0129149 0.00378663 0.00127208
 76 1 1 0 0 50  3.34952e-06 0.000273123 0.00818865 0.0907091 0.376548 0.595662 0.392899 0.275349 0.592293 1.14163 1.64933 2.19516 2.98731 3.78923 4.24576 4.35454 4.26802 4.11812 3.88883 3.57503 3.17614 2.68184 2.10525 1.50532 0.965588 0.55021 0.276946 0.122789 0.0479008 0.0164409 0.00496782 0.001712
 77 1 1 0 0 50  1.22126e-06 9.9329e-05 0.00297838 0.0330146 0.1376 0.225458 0.212419 0.43009 1.16593 2.09448 2.48368 2.33451 2.40729 2.95484 3.62066 4.09602 4.2771 4.2498 4.05072 3.70962 3.24902 2.69208 2.08152 1.4808 0.956667 0.555182 0.287015 0.131414 0.0530886 0.0188805 0.00590425 0.00211661
 78 1 1 0 0 50  1.08618e-06 8.82965e-05 0.00264728 0.0293309 0.121906 0.194955 0.146103 0.182371 0.48083 0.982166 1.56716 2.32746 3.28888 4.02872 4.23054 4.13685 4.07885 4.12832 4.10031 3.87157 3.43399 2.84372 2.18376 1.54209 0.992335 0.576894 0.300716 0.139693 0.0575548 0.0209571 0.00672717 0.00249888
 79 1 1 0 0 50  2.3923e-06 0.000194956 0.00584503 0.064748 0.268784 0.425253 0.280958 0.198337 0.423619 0.796694 1.10121 1.42852 2.07429 3.0273 3.96714 4.58415 4.76383 4.68564 4.47453 4.16252 3.71463 3.1132 2.41063 1.70697 1.09766 0.63734 0.332398 0.154971 0.0643178 0.0236793 0.0077112 0.00293186
 80 1 1 0 0 50  5.41215e-06 0.000441561 0.0132387 0.14665 0.608731 0.962434 0.630253 0.417796 0.850177 1.51184 1.79335 1.68526 1.74002 2.17678 2.81771 3.4932 4.05935 4.43884 4.53378 4.32588 3.86591 3.22819 2.49881 1.77454 1.14522 0.666728 0.348299 0.162617 0.0676393 0.0249959 0.0081874 0.00314868
 81 1 1 0 0 50  2.14956e-06 0.000175137 0.00525142 0.0582021 0.242363 0.394085 0.347329 0.628579 1.67702 2.99625 3.48608 3.06181 2.70126 2.72285 2.78864 2.83958 3.01334 3.3247 3.58928 3.63812 3.40361 2.91957 2.28812 1.63257 1.05574 0.615703 0.322273 0.150772 0.0628381 0.0232705 0.00764148 0.00295285
 82 1 1 0 0 50  5.64152e-06 0.000460292 0.0138002 0.152865 0.634409 1.00136 0.642361 0.369822 0.72428 1.42578 2.16004 3.00423 4.02566 4.67248 4.48477 3.8028 3.21868 2.98241 2.95501 2.94484 2.80851 2.48332 2.0008 1.45643 0.953657 0.5601 0.294316 0.138027 0.0576348 0.0213814 0.00703394 0.0027255
 83 1 1 0 0 50  9.2071e-07 7.47875e-05 0.00224285 0.0248807 0.104185 0.177543 0.221249 0.614744 1.7157 3.05595 3.52369 3.08685 2.89879 3.39682 4.04041 4.30486 4.0758 3.60989 3.13105 2.74921 2.43376 2.09659 1.69284 1.24935 0.831219 0.494982 0.262814 0.124141 0.0520829 0.019383 0.00639104 0.00248229
 84 1 1 0 0 50  2.21252e-06 0.000180275 0.00540482 0.0598702 0.248498 0.39265 0.255608 0.167515 0.3752 0.851419 1.62346 2.82686 4.25747 5.17131 5.15978 4.6522 4.18453 3.88111 3.54999 3.11337 2.61728 2.11511 1.62921 1.17453 0.777175 0.464912 0.248987 0.118699 0.050209 0.0188088 0.00623275 0.00243179
 85 1 1 0 0 50  2.82639e-06 0.000230405 0.00690801 0.0765299 0.317863 0.505295 0.353316 0.334299 0.780859 1.39878 1.68563 1.71203 2.11614 3.13632 4.35062 5.15363 5.23951 4.8432 4.24667 3.61898 2.99799 2.37908 1.78125 1.24364 0.801228 0.471292 0.250572 0.119419 0.0507057 0.0191025 0.00636834 0.00250231
 86 1 1 0 0 50  4.45492e-06 0.000363393 0.0108952 0.120696 0.501145 0.794413 0.537339 0.433529 0.966504 1.757 2.18736 2.2536 2.46602 2.89887 3.33339 3.76489 4.185 4.46791 4.4132 3.99551 3.34464 2.61445 1.91356 1.3049 0.821681 0.473302 0.247325 0.116422 0.0490776 0.0184383 0.00615051 0.00242639
 87 1 1 0 0 50  1.69161e-06 0.000137739 0.00413006 0.045776 0.190669 0.310746 0.279647 0.52602 1.41675 2.56299 3.09195 2.97547 3.00027 3.31126 3.51444 3.54054 3.55658 3.65523 3.70764 3.56952 3.18319 2.5992 1.93733 1.31855 0.819287 0.463667 0.237998 0.110241 0.0458527 0.01705 0.00564692 0.00221759
 88 1 1 0 0 50  1.97599e-06 0.00016096 0.00482587 0.0534635 0.222071 0.353214 0.248897 0.247066 0.61141 1.22648 1.89883 2.72887 3.78899 4.594 4.70445 4.33336 3.91636 3.67415 3.51645 3.31878 2.99401 2.51634 1.93606 1.35043 0.850064 0.481945 0.245792 0.112595 0.0462351 0.0169774 0.00556011 0.00215852
 89 1 1 0 0 50  1.49403e-06 0.000121603 0.00364595 0.040398 0.167956 0.269333 0.207467 0.277273 0.711534 1.31245 1.69149 1.92747 2.49529 3.44476 4.36858 4.88644 4.87435 4.54714 4.09385 3.62235 3.13575 2.59674 2.00637 1.41938 0.908377 0.522214 0.268628 0.12338 0.0505338 0.0184384 0.00598715 0.00229599
 90 1 1 0 0 50  2.22892e-06 0.000181615 0.0054451 0.0603216 0.250502 0.397647 0.273569 0.241694 0.564011 1.06657 1.46551 1.81922 2.39253 3.10562 3.72849 4.22373 4.57435 4.74129 4.6154 4.20068 3.59352 2.89676 2.18844 1.53153 0.979887 0.566848 0.294146 0.136224 0.0561307 0.0205403 0.0066679 0.00254498
 91 1 1 0 0 50  2.37831e-06 0.000193815 0.00581099 0.0643798 0.267479 0.426339 0.307438 0.330536 0.804371 1.46227 1.81127 1.87353 2.13431 2.69268 3.29143 3.7885 4.15676 4.42502 4.50704 4.32092 3.85382 3.1747 2.4058 1.6714 1.05958 0.609241 0.315663 0.146517 0.0606378 0.0223003 0.00727078 0.00278382
 92 1 1 0 0 50  1.52736e-06 0.000124325 0.00372763 0.0413056 0.171796 0.276432 0.220574 0.324131 0.847907 1.56872 2.01672 2.21437 2.57329 3.05415 3.37488 3.55869 3.75104 4.00212 4.17333 4.1301 3.81024 3.23737 2.51217 1.77045 1.12871 0.648826 0.335233 0.155174 0.0641381 0.0235999 0.00770987 0.00296303
 93 1 1 0 0 50  1.81688e-06 0.000147966 0.00443629 0.0491481 0.20416 0.32492 0.230423 0.233508 0.570969 1.09629 1.55372 2.01332 2.69342 3.39928 3.80744 3.92789 3.93998 3.99394 4.0429 3.98603 3.73001 3.24055 2.57393 1.85146 1.19909 0.696586 0.362012 0.167949 0.0694263 0.0255267 0.00833386 0.00320365
 94 1 1 0 0 50  2.95807e-06 0.000241157 0.00723031 0.0800968 0.332584 0.52737 0.358026 0.294796 0.664103 1.21903 1.56443 1.7461 2.16105 2.8417 3.50065 3.95217 4.16065 4.23132 4.19316 4.03845 3.73029 3.24021 2.59782 1.89544 1.24656 0.734412 0.386088 0.180656 0.0751077 0.0277087 0.00906106 0.00348526
 95 1 1 0 0 50  1.46072e-05 0.00119244 0.035751 0.395994 1.64296 2.5865 1.60287 0.656913 0.931738 1.64075 1.99178 1.95635 2.05721 2.4121 2.77863 3.07119 3.31137 3.51661 3.60556 3.52089 3.24881 2.80646 2.24383 1.64103 1.08664 0.646321 0.343354 0.16229 0.0680744 0.0252972 0.00831854 0.00321473
 96 1 1 0 0 50  1.18981e-06 9.67671e-05 0.0029026 0.0322264 0.135622 0.240609 0.371786 1.19954 3.37139 5.91913 6.49506 4.82835 3.1223 2.46996 2.32629 2.24375 2.20448 2.25026 2.30467 2.28502 2.14248 1.86985 1.50188 1.10047 0.730123 0.435808 0.23277 0.110771 0.046814 0.0175285 0.00580498 0.0022611
 97 1 1 0 0 50  1.94741e-06 0.000158625 0.00475576 0.052682 0.218703 0.346165 0.230582 0.178645 0.451905 1.12142 2.37113 4.38839 6.58631 7.50609 6.48212 4.53555 2.9922 2.24387 1.96141 1.82859 1.68567 1.47267 1.19045 0.877844 0.585262 0.350641 0.18792 0.0897653 0.0381058 0.0143413 0.00477618 0.00187457
 98 1 1 0 0 50  1.13647e-06 9.24038e-05 0.00277052 0.0307011 0.127718 0.205894 0.167348 0.256517 0.671728 1.22825 1.56692 1.84687 2.71742 4.34511 6.04476 6.82336 6.25854 4.92527 3.543 2.53403 1.91547 1.51082 1.17425 0.856778 0.571223 0.343327 0.184695 0.0885453 0.0377188 0.0142458 0.00476216 0.00187927
 99 1 1 0 0 50  1.85099e-06 0.000150752 0.00451976 0.0500697 0.207909 0.329763 0.224682 0.189609 0.439134 0.847794 1.22361 1.64061 2.31095 3.18411 4.12214 5.05194 5.71905 5.85191 5.29423 4.25186 3.11634 2.16636 1.47011 0.974865 0.61729 0.362798 0.193741 0.0928158 0.0396114 0.0150013 0.00502966 0.00199296
 100 1 1 0 0 50  3.63859e-06 0.00029673 0.00889643 0.0985508 0.409133 0.647661 0.430716 0.315358 0.674716 1.21804 1.50256 1.55405 1.8142 2.42059 3.19033 3.97257 4.64701 5.13155 5.23519 4.8394 4.01795 3.00277 2.04282 1.28418 0.754136 0.414147 0.210846 0.0982029 0.0413198 0.015558 0.00520956 0.00206746
-9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
#
30 #_N_age_bins
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
1 #_N_ageerror_definitions
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_Error2:  parm number  for dirichlet
#_minsamplesize: minimum sample size; set to 1 to match 3.24, minimum value is 0.001
#_mintailcomp addtocomp combM+F CompressBins CompError ParmSelect minsamplesize
-1 1e-10 0 0 0 0 1 #_fleet:1_Fishery
-1 1e-10 0 0 0 0 1 #_fleet:2_Survey
3 #_Lbin_method_for_Age_Data: 1=poplenbins; 2=datalenbins; 3=lengths
# sex codes:  0=combined; 1=use female only; 2=use male only; 3=use both as joint sexxlength distribution
# partition codes:  (0=combined; 1=discard; 2=retained
#_yr month fleet sex part ageerr Lbin_lo Lbin_hi Nsamp datavector(female-male)
-9999  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
#
0 #_Use_MeanSize-at-Age_obs (0/1)
#
0 #_N_environ_variables
#Yr Variable Value
#
0 # N sizefreq methods to read 
#
0 # do tags (0/1)
#
0 #    morphcomp data(0/1) 
#  Nobs, Nmorphs, mincomp
#  yr, seas, type, partition, Nsamp, datavector_by_Nmorphs
#
0  #  Do dataread for selectivity priors(0/1)
# Yr, Seas, Fleet,  Age/Size,  Bin,  selex_prior,  prior_sd
# feature not yet implemented
#
999

ENDDATA
