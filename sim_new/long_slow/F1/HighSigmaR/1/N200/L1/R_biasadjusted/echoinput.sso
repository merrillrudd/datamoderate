#V3.30.14.00-safe;_2019_07_19;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.0
#Stock Synthesis (SS) is a work of the U.S. Government and is not subject to copyright protection in the United States.
#Foreign copyrights may apply. See copyright.txt for more information.
Sun Jul 19 13:26:08 2020

ss3.dat  datfilename
ss3.ctl  ctlfilename
0  readparfile
0  rundetail
1  reportdetail
0  docheckup
0  Do_ParmTrace
0  Do_CumReport
0  Do_all_priors
1  SoftBound
2  N_nudata
10  Turn_off_phase
0  MCeval burn_intvl
1  MCeval thin_intvl
0.01  jitter fraction for initial parm values
-1  STD_Yr_min
-2  STD_Yr_max
0  N extra STD years to read
0.0001  final_conv
0  retro_yr
1  Smry_Age
1  depletion_basis
1  depletion_level
4  SPR_reporting
1  F_reporting
0  F_std_basis
For Kobe plot, set depletion_basis=2; depletion_level=1.0; F_reporting=your choose; F_std_basis=2
0
Read files in 3.30 format
Now read MCMC output detail.MCMC_bump;  separate values will be parsed from input
MCMC output detail:  0
Now read ALK tolerance (suggest 0.0001)
ALK tolerance:  0
  finish reading starter.ss

1 start year 
100 end year 
1 N seasons 
 12 months/seas (fractions OK) 
2 Number of subseasons (even number only; min 2) for calculation of ALK 
 1 processed season duration (frac. of year) 
 0.5 processed subseason duration (frac. of year) 
 processed subseason cumulative annual time within season 
 0 0.5
SPAWN month: 1; seas: 1; subseas_for_ALK: 1; timing_in_season: 0
1 N sexes 
Accumulator age 60
1 N_areas 
2 total number of fishing fleets and surveys 
rows are fleets; columns are: Fleet_#, fleet_type, timing, area, units, need_catch_mult
1 #  1 -1 1 1 0 # Fishery
2 #  3 1 1 2 0 # Survey
YPR_optimize_mask:  1 0
101 records
first catch record:  -999 1 1 0 0
last catch record:  100 1 1 1846.09 0.01
 equ, seas:   -1 1 catches:  0 0
year, seas: 1 1 catches:  79.2058 0
year, seas: 2 1 catches:  92.3334 0
year, seas: 3 1 catches:  105.428 0
year, seas: 4 1 catches:  118.475 0
year, seas: 5 1 catches:  131.453 0
year, seas: 6 1 catches:  144.339 0
year, seas: 7 1 catches:  157.146 0
year, seas: 8 1 catches:  169.972 0
year, seas: 9 1 catches:  182.993 0
year, seas: 10 1 catches:  196.441 0
year, seas: 11 1 catches:  210.522 0
year, seas: 12 1 catches:  225.296 0
year, seas: 13 1 catches:  240.573 0
year, seas: 14 1 catches:  255.939 0
year, seas: 15 1 catches:  270.944 0
year, seas: 16 1 catches:  285.311 0
year, seas: 17 1 catches:  299.004 0
year, seas: 18 1 catches:  312.191 0
year, seas: 19 1 catches:  325.104 0
year, seas: 20 1 catches:  337.995 0
year, seas: 21 1 catches:  351.138 0
year, seas: 22 1 catches:  364.742 0
year, seas: 23 1 catches:  378.799 0
year, seas: 24 1 catches:  392.998 0
year, seas: 25 1 catches:  406.754 0
year, seas: 26 1 catches:  405.859 0
year, seas: 27 1 catches:  943.576 0
year, seas: 28 1 catches:  1458.2 0
year, seas: 29 1 catches:  1935.56 0
year, seas: 30 1 catches:  2364.26 0
year, seas: 31 1 catches:  2737.23 0
year, seas: 32 1 catches:  3052.88 0
year, seas: 33 1 catches:  3314.99 0
year, seas: 34 1 catches:  3531.64 0
year, seas: 35 1 catches:  3713.42 0
year, seas: 36 1 catches:  3871.11 0
year, seas: 37 1 catches:  4013.74 0
year, seas: 38 1 catches:  4148.13 0
year, seas: 39 1 catches:  4279.43 0
year, seas: 40 1 catches:  4411.04 0
year, seas: 41 1 catches:  4543.3 0
year, seas: 42 1 catches:  4671.3 0
year, seas: 43 1 catches:  4783.6 0
year, seas: 44 1 catches:  4864.18 0
year, seas: 45 1 catches:  4896.36 0
year, seas: 46 1 catches:  4870.48 0
year, seas: 47 1 catches:  4790.27 0
year, seas: 48 1 catches:  4678.05 0
year, seas: 49 1 catches:  4572.18 0
year, seas: 50 1 catches:  4510.49 0
year, seas: 51 1 catches:  4508.41 0
year, seas: 52 1 catches:  4547.63 0
year, seas: 53 1 catches:  4587.18 0
year, seas: 54 1 catches:  4587.95 0
year, seas: 55 1 catches:  4531.33 0
year, seas: 56 1 catches:  4287.94 0
year, seas: 57 1 catches:  4044.55 0
year, seas: 58 1 catches:  3819.07 0
year, seas: 59 1 catches:  3627.13 0
year, seas: 60 1 catches:  3480.89 0
year, seas: 61 1 catches:  3384.11 0
year, seas: 62 1 catches:  3213.11 0
year, seas: 63 1 catches:  3079.65 0
year, seas: 64 1 catches:  2959.27 0
year, seas: 65 1 catches:  2835.61 0
year, seas: 66 1 catches:  2701.52 0
year, seas: 67 1 catches:  2555.79 0
year, seas: 68 1 catches:  2399.66 0
year, seas: 69 1 catches:  2235.51 0
year, seas: 70 1 catches:  2067.67 0
year, seas: 71 1 catches:  1903.18 0
year, seas: 72 1 catches:  1751.73 0
year, seas: 73 1 catches:  1623.27 0
year, seas: 74 1 catches:  1525.53 0
year, seas: 75 1 catches:  1460.66 0
year, seas: 76 1 catches:  1421.9 0
year, seas: 77 1 catches:  1394.54 0
year, seas: 78 1 catches:  1361.76 0
year, seas: 79 1 catches:  1310.6 0
year, seas: 80 1 catches:  1235.25 0
year, seas: 81 1 catches:  1292.22 0
year, seas: 82 1 catches:  1335.49 0
year, seas: 83 1 catches:  1366.55 0
year, seas: 84 1 catches:  1387.15 0
year, seas: 85 1 catches:  1399.1 0
year, seas: 86 1 catches:  1404.71 0
year, seas: 87 1 catches:  1406.71 0
year, seas: 88 1 catches:  1407.93 0
year, seas: 89 1 catches:  1410.89 0
year, seas: 90 1 catches:  1417.64 0
year, seas: 91 1 catches:  1429.9 0
year, seas: 92 1 catches:  1449.28 0
year, seas: 93 1 catches:  1476.88 0
year, seas: 94 1 catches:  1513.03 0
year, seas: 95 1 catches:  1557.56 0
year, seas: 96 1 catches:  1609.58 0
year, seas: 97 1 catches:  1667.38 0
year, seas: 98 1 catches:  1727.76 0
year, seas: 99 1 catches:  1787.62 0
year, seas: 100 1 catches:  1846.09 0

#_show_total_catch_by_fleet
1 type: 1 Fishery catch: 211732
2 type: 3 Survey catch: 0

#_  now read survey characteristics:  fleet_#, svyunits, svyerrtype for each fleet 
Units:  0=numbers; 1=biomass; 2=F; >=30 for special patterns
Errtype:  -1=normal; 0=lognormal; >0=T
SD_Report: 0=no sdreport; 1=enable sdreport
Fleet Units Err_Type SD_Report
 1 1 0 0
 2 1 0 0
1 nobs_survey 
 1 1 1 1 1
 processed survey data 
1 Fishery  1
2 Survey 
Successful read of index data; N= 1
Number of survey superperiods by fleet:  0 0
Number of sdreport index values: 0
 note order of discard read is now: N fleets with disc, then if Ndisc_fleets>0 read:  fleet, disc_units, disc_error(for 1,Ndisc_fleets), then read obs 
0 N fleets with discard 
Successful read of discard data, N by fleet =  0 0
N superperiods by fleet =  0 0
0 Use mean body size (weight or length); If 0, then no additional input in 3.30 
Successful pre-processing of mean-bodysize data
2 LenBin_option:  1=set to data bins; 2 generate uniform; 3 = read custom
 1 10 82 input for setup of pop length bins 
1 indicator for length data  
#_now read for each fleet info for processing the length comps:
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=Dirichlet
#_Comp_ERR-2:  index of Dirichlet parameter to use
#_minsamplesize: minimum sample size; set to 1 to match 3.24, set to 0 for no minimum
-1 1e-10 0 0 0 0 1  #_fleet: 1 Fishery
-1 1e-10 0 0 0 0 1  #_fleet: 2 Survey
37 nlen_bin_for_data 
 len_bins_dat 
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82

Processed Population length bin info 
 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82

Processed Data length bin info 
 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82

Processed Population to Data length bin conversion matrix
len_obs_#:1 #  100 1 1 0 0 200 0 0 3 0 2 2 1 6 9 13 13 19 14 21 21 17 18 15 9 10 4 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
len_obs_#:2 #  -9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 N length comp observations 
len_obs_#:1 #  100 1 1 0 0 200 0 0 3 0 2 2 1 6 9 13 13 19 14 21 21 17 18 15 9 10 4 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
Lendata Nobs by fleet  1 0
Lendata superperiods by fleet  0 0
process length comps 
Overall_Compositions
Fleet len_bins  10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82
1 freq 1e-10 1e-10 0.015 1e-10 0.01 0.01 0.005 0.03 0.045 0.065 0.065 0.095 0.07 0.105 0.105 0.085 0.09 0.075 0.045 0.05 0.02 0.01 1e-10 0.005 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10 1e-10
1 cuml 1e-10 2e-10 0.015 0.015 0.025 0.035 0.04 0.07 0.115 0.18 0.245 0.34 0.41 0.515 0.62 0.705 0.795 0.87 0.915 0.965 0.985 0.995 0.995 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 female 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027
1 male 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027 0.027027
Successful processing of length data

Enter the number of agebins, or 0 if no age data
60 N age bins 
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 agebins 
1 N age error defs 
ageerror_definitions_as_read
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001
#_now read for each fleet info for processing the age comps:
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_ERR-2:  index of parameter to use
#_minsamplesize: minimum sample size; set to 1 to match 3.24, set to 0 for no minimum
-1 1e-10 0 0 0 0 1  #_fleet: 1 Fishery
-1 1e-10 0 0 0 0 1  #_fleet: 2 Survey
3 Lbin method for defined size ranges 
age_obs_#:1 #  -9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 N age comp observations 

Age_Data Nobs by fleet  0 0
Age_Data superperiods by fleet  0 0
0 (0/1) use mean size-at-age data 
Successful read of size-at-age data; N kept =  0 0
0 N_envvar 
0 N sizefreq methods to read 
 finished processing sizefreq data 
0 Do_TagData(0/1) 
0 Do_Morphcomp(0/1) 
Do dataread for selectivity priors(0/1):  0
Yr  Seas Fleet  Age/Size  Bin  selex_prior  prior_sd
feature not yet implemented
 data read successful

read Do_Benchmark(0/1), then MSY basis(1=F_SPR,2=F_Btarget,3=calcMSY,4=mult*F_endyr)
1 echoed Do_Benchmark 
2 echoed MSY basis
next read SPR target and Biomass target as fractions
0.5 echoed SPR_target 
0.4 echoed B_target 
next read 10 Benchmark years for:  beg-end bio; beg-end selex; beg-end relF; beg-end recr_dist; beg-end SRparm
codes: -999 means start year; >0 is an actual year; <=0 is relative to endyr
 0 0 0 0 0 0 -999 0 -999 0 echoed Benchmark years
 100 100 100 100 100 100 1 100 1 100 Benchmark years as processed
next read:  1=use range of years for relF; 2 = set same as forecast relF below
2  echoed Bmark_RelF_Basis

next read forecast basis: 0=none; 1=F(SPR); 2=F(MSY) 3=F(Btgt); 4=Ave F (enter yrs); 5=read Fmult
1 echoed Forecast basis

#next read N forecast years
10 #echoed N_Fcast_Yrs 

# next read Fmult value to be used only if Forecast basis==5
0 # echoed Fmult value

# next enter Fcast_years:  beg_selex, end_selex, beg_relF, end_relF, beg_recruits, end_recruits
# enter actual year, or values of 0 or -integer to be relative to endyr)
 0 0 0 0 -999 0 # echoed Fcast years as read
 100 100 100 100 1 100  # After Transformation

# next read flag for specifying selectivity used in forecasts; 0 is value that mimics 3.24, 1 is experimental
0 # echoed Fcast_Specify_Selex value

next read 4 values for:  control rule shape(1, 2, 3 or 4), inflection (like 0.40), cutoff(like 0.10), scale(like 0.75)
3  # echoed HarvestPolicy 
0.4   # echoed harvest policy inflection 
0.1   # echoed harvest policy cutoff 
1   # echoed harvest policy scalar 

# next enter 2 values that control looping through the forecast (see manual), then 3 placeholder values
# first does F_msy or proxy; 2nd applies control rule; 3rd applies caps and allocations
3 #echoed N forecast loops (1-3) (recommend 3)
3 #echoed First forecast loop with stochastic recruitment (recommend 3)
0 #echoed Forecast recruitment:  0=spawn_recr; 1=value*spawn_recr; 2=value*VirginRecr; 3=mean from year range
1 #echoed Forecast loop control #4 (not used) 
0 #echoed Forecast loop control #5 (reserved for future use) 

#next enter year in which Fcast loop 3 caps and allocations begin to be applied
101 # echoed value

#next enter 0, or stddev of implementation error
0 # echoed value

#next select rebuilding program output (0/1)
0 # echoed value

#next select rebuilding program:  year declared overfished
100 # echoed value

#next select rebuilding program:  year rebuilding plan started
100 # echoed value

#next select fleet relative F:  1=use first-last alloc year read above; 2=read list of seas, fleet, relF below
# Note that fleet allocation is used directly as average F if Do_Forecast=4 
1 # echoed value

#next read Catch Basis for caps and allocations;  Same for all fleets
2=dead catch bio, 3=retained catch bio, 5= dead catch numbers 6=retained catch numbers
2 # echoed value

# next read list of fleet ID and max annual catch;  end with fleet=-9999
 -9999 -1
 Processed Max totalcatch by fleet 
 -1 -1

Read list of area ID and max annual catch;  end with area=-9999
 -9999 -1
 processed Max totalcatch by area 
 -1

Read list of fleet ID and assignment to allocation group;  end with fleet ID=-9999
fishing fleets not assigned to allocation group are processed normally
 -9999 -1
 Processed Fleet allocation group assignments 
 0 0
2 # basis for input Fcast catch:  -1= read with each obs; 2=dead catch; 3=retained catch; 99=input Hrate(F); -1=read fleet/time specific (bio/num units are from fleetunits; note new codes in SSV3.20)
# yr seas fleet catch
 -9999 1 1 0
Now fill H4010_scale_vec
H4010_scale:  1 1 1 1 1 1 1 1 1 1
 done reading forecast 

Finished creating STD containers and indexes 

 Begin reading control file 
1 N growth patterns 
1  N platoons (1, 3 or 5)
  do not read sd_ratio or platoon_distr
2  # Recruitment distribution method; where: 2=parms for main effects for GP, Area, Settle timing; 3=one parm for each Settle event
1  # future option for recr_dist_area: 1 is hardwired to do global SRR; 2 in future will do area-specific SRR
1 Number of settlement events: GP/area/month to read (>=0) 
0  # unused option 
 settlement pattern as read 
GPat  Month  Area Age
* 1 1 1 0*
Now calculate the number of unique settle timings, which will dictate the number of recr_dist_timing parameters 
N settle timings: 1
 unique_settle_times: 
 1 0
settle events use these settle_times:  1
 Need to read N_GP * Narea * N_settletimings=1  recruitment distribution parameters 
Calculated assignments in which settlement occurs 
Settle_event / Month / Seas / Seas_from_spawn / time_from_seas_start / age_at_settle
1 / 1  /  1 / 0 / 0  / 0

MORPH_INDEXING
g Sex GP Settlement Season Platoon Platoon% Sex*GP Sex*GP*settle_time Used(0/1) SettleTime_frac_yr
1   1  1       1       1       1       100       1        1               1       0
calen_age is elapsed years since beginning of year in which spawning occurred
real_age is elapsed years since settlement
g  s  subseas  ALK_idx settle_time age@settle age real_age calen_age
1 1 1 1 1 0 0 0 0
1 1 1 1 1 0 1 1 1
1 1 1 1 1 0 2 2 2
1 1 1 1 1 0 3 3 3
1 1 2 2 1 0 0 0.5 0.5
1 1 2 2 1 0 1 1.5 1.5
1 1 2 2 1 0 2 2.5 2.5
1 1 2 2 1 0 3 3.5 3.5
 only 1 area, so no read of do_migration or migr_firstage 
0 N_Block_Designs
1  timevarying parameter constraint method
 0 0 0 0 0  timevarying parameter autogenerate (0) or read (1) for each parm type
0 natM_type
1 growth model 
 0 999 -999 0 # growth specifications: AFIX1 AFIX2 LINF_decay placeholder  age-specific_K_ages
 N_growparms  5
g a seas subseas ALK_idx real_age calen_age lin_grow first_grow_age
1 0 1 1 1 0 0 1 0
1 0 1 2 2 0.5 0.5 -1 0
1 1 1 1 1 1 1 -1 0
1 1 1 2 2 1.5 1.5 -1 1
1 2 1 1 1 2 2 -2 1
1 2 1 2 2 2.5 2.5 -2 1
1 3 1 1 1 3 3 -2 1
1 3 1 2 2 3.5 3.5 -2 1
0  SD_add_to_LAA
0  CV_depvar
1  Maturity_Option
0  First_Mature_Age
1  Fecundity option
0  Hermaphro_Option 
1  MGparm_def
 Biology base parameter setup 17
1  0.01 1.8 0.09 -2.48 0.5 3 -3 0 0 0 0 0 0 0 NatM_p_1_Fem_GP_1
2  1 50 4.63 4.63 0.2 0 -4 0 0 0 0 0 0 0 L_at_Amin_Fem_GP_1
3  25 150 55 55 0.2 0 -4 0 0 0 0 0 0 0 L_at_Amax_Fem_GP_1
4  0.01 1 0.088 0.088 0.8 0 -4 0 0 0 0 0 0 0 VonBert_K_Fem_GP_1
5  0.01 0.5 0.1 0.1 0.8 0 -5 0 0 0 0 0 0 0 CV_young_Fem_GP_1
6  0.01 0.5 0.1 0.1 0.8 0 -5 0 0 0 0 0 0 0 CV_old_Fem_GP_1
7  0 3 6.8e-06 6.8e-06 0 0 -1 0 0 0 0 0 0 0 Wtlen_1_Fem_GP_1
8  2.5 3.5 3.101 3.101 0.2 0 -3 0 0 0 0 0 0 0 Wtlen_2_Fem_GP_1
9  10 50 36.3 36.3 0 0 -3 0 0 0 0 0 0 0 Mat50%_Fem_GP_1
10  -2 2 -0.276 0 0 0 -3 0 0 0 0 0 0 0 Mat_slope_Fem_GP_1
11  -3 3 1 0 0 0 -3 0 0 0 0 0 0 0 Eggs/kg_inter_Fem_GP_1
12  -3 4 0 0 0 0 -3 0 0 0 0 0 0 0 Eggs/kg_slope_wt_Fem_GP_1
13  -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 RecrDist_GP_1
14  -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 RecrDist_Area_1
15  -4 4 0 0 0 0 -4 0 0 0 0 0 0 0 RecrDist_month_1
16  -4 4 1 0 0 0 -4 0 0 0 0 0 0 0 CohortGrowDev
17  1e-06 0.999999 0.5 0.5 0.5 0 -99 0 0 0 0 0 0 0 FracFemale_GP_1
mgparm_type for each parm: 1=M; 2=growth; 3=wtlen,mat,fec,hermo; 4=recr&femfrac; 5=migr; 6=ageerror; 7=catchmult
 1 2 2 2 2 2 3 3 3 3 3 3 4 4 4 2 4
Now read env, block/trend, and dev adjustments to MGparms 
MG_active  0 0 0 0 0 0 0 0
3 #_SR_function: 1=NA; 2=Ricker(2 parms); 3=BevHolt(2); 4=SCAA(2); 5=Hockey(3); 6=B-H_flattop(2); 7=Survival(3); 8=Shepherd(3); 9=Ricker_Power(3) 
0  # 0/1 to use steepness in initial equ recruitment calculation
0  #  future feature:  0/1 to make realized sigmaR a function of SR curvature
 SR parms 
 4 20 10 10 10 0 1 0 0 0 0 0 0 0
 0.2 1 0.7 0.7 0.05 0 -4 0 0 0 0 0 0 0
 0 2 0.8 0.8 0.8 0 -5 0 0 0 0 0 0 0
 -5 5 0 0 1 0 -4 0 0 0 0 0 0 0
 0 0 0 0 0 0 -99 0 0 0 0 0 0 0
 Do recruitment_autocorr: 0
SR_Npar and N_SRparm2 and N_SRparm3:  2 5 5
SR_parm_RD:  10 0.7 0.8 0 0
1 do_recdev
40 recdev_start
94 recdev_end
3 recdev_PH
1 recdev_adv
#_start of advanced SR options
-29 #_recdev_early_start (0=none; neg value makes relative to recdev_start)
4 #_recdev_early_phase
0 #_forecast_recruitment phase (incl. late recr) (0 value resets to maxphase+1)
1 #_lambda for Fcast_recr_like occurring before endyr+1
11.9191 #_last_early_yr_nobias_adj_in_MPD
57.6656 #_first_yr_fullbias_adj_in_MPD
98.0014 #_last_yr_fullbias_adj_in_MPD
113.159 #_first_recent_yr_nobias_adj_in_MPD
0.0607 #_max_bias_adj_in_MPD
 #_NOTE: biasadjustment forced to 0.0 after year recdev_end
0 # period of cycle in recruitment 
-5 #min rec_dev
5 #max rec_dev
0 #_read_recdevs
#_end of advanced SR options
#_recruitment bias adjustment
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.000107344 0.00143422 0.0027611 0.00408798 0.00541485 0.00674173 0.00806861 0.00939549 0.0107224 0.0120492 0.0133761 0.014703 0.0160299 0.0173568 0.0186836 0.0200105 0.0213374 0.0226643 0.0239911 0.025318 0.0266449 0.0279718 0.0292986 0.0306255 0.0319524 0.0332793 0.0346062 0.035933 0.0372599 0.0385868 0.0399137 0.0412405 0.0425674 0.0438943 0.0452212 0.0465481 0.0478749 0.0492018 0.0505287 0.0518556 0.0531824 0.0545093 0.0558362 0.0571631 0.05849 0.0598168 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0607 0.0567011 0.0526966 0 0 0 0 0 0 0 0 0 0
0.3 F ballpark is annual F for fleet 1 for specified year
-2001 F_ballpark_yr (<0 to ignore)  
3 F_Method 
4 max_harvest_rate 
4 N iterations for tuning hybrid F 
 detailed F_setups 

 ready to read init_F setup for: 0 fleet x season with initial equilibrium catch
 initial equil F parameter setup

# read Q setup only for fleets with survey/CPUE/effort observations, end with fleet_ID<0 #  fleet_ID link_type link_info  extra_se(0/1)   biasadj(0/1)  float(0/1)
q setup 
 1 0 0 0 0
 0 0 0 0 0
q setup 
 1 0 0 0 0
 0 0 0 0 0
q setup parms 
 1 0 0 0 0
 0 0 0 0 0
fleet 1 base index 1
Q_Npar and Q_Npar2:  1 1
Q_parm_RD: 
1 0 LnQ_base_Fishery(1)
#
 selex types 
 24 0 0 0
 24 0 0 0
 11 0 0 0
 11 0 0 0
#Now count parameters for variance of composition data; CANNOT be time-varying
 selex and composition base parameters 
1 ##  11.5 120.5 42 42 0.05 0 2 0 0 0 0 0 0 0 ## Size_DblN_peak_Fishery(1)
2 ##  -5 3 -3 -3 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_top_logit_Fishery(1)
3 ##  0 25.5 5.1 5.1 0.05 0 3 0 0 0 0 0 0 0 ## Size_DblN_ascend_se_Fishery(1)
4 ##  -2 16 15 15 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_descend_se_Fishery(1)
5 ##  -15 5 -999 -999 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_start_logit_Fishery(1)
6 ##  -5 1000 999 999 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_end_logit_Fishery(1)
7 ##  11.5 120.5 42 42 0.05 0 -2 0 0 0 0 0 0 0 ## Size_DblN_peak_Survey(2)
8 ##  -5 3 -3 -3 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_top_logit_Survey(2)
9 ##  0 25.5 5.1 5.1 0.05 0 -3 0 0 0 0 0 0 0 ## Size_DblN_ascend_se_Survey(2)
10 ##  -2 16 15 15 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_descend_se_Survey(2)
11 ##  -15 5 -999 -999 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_start_logit_Survey(2)
12 ##  -5 1000 999 999 0.05 0 -99 0 0 0 0 0 0 0 ## Size_DblN_end_logit_Survey(2)
13 ##  0 1 0.1 0.1 99 0 -3 0 0 0 0 0.5 0 0 ## minage@sel=1_Fishery(1)
14 ##  0 101 100 100 99 0 -3 0 0 0 0 0.5 0 0 ## maxage@sel=1_Fishery(1)
15 ##  0 1 0.1 0.1 99 0 -3 0 0 0 0 0.5 0 0 ## minage@sel=1_Survey(2)
16 ##  0 101 100 100 99 0 -3 0 0 0 0 0.5 0 0 ## maxage@sel=1_Survey(2)
 now read 0/1 for 2D_AR
0  #_ 0/1 to request experimental 2D_AR selectivity smoother options  
N_selparm: 16 with timevary: 16 with TV and 2D_AR: 16 timevary parm range for sel: 0 0 0
0 TG_custom (need to read even if no tag data )  1
 read var_adjust list until -9999
 -9999 1 0
 number of variance adjustment records = 0
4 max_lambda_phase 
1 sd_offset (adds log(s)); needed if variance parameters are estimated 
 read lambda changes list until -9999
 number of lambda change records = 2
2 N lambda changes 
 lambda changes 
 1 1 1 0 1
 1 2 1 0 1
0 # (0/1) read specs for reporting stdev for selectivity, size, and numbers
999  If you see 999, we got to the end of the control file successfully! 
N parameters: 149
Parameters plus derived quant: 742
Adjust the phases 
 requested turn_off phase: 10
ParCount 149   Active parameters: 103
Turn_off_phase 10
 max_phase 4
742
parm 149 covar 103
parm 261 covar 215
parm 373 covar 327
parm 483 covar 437
parm 593 covar 547
parm 702 covar 656
parm 719 covar 673
Active parameters plus derived quantities:  696
 N_WTage_rd 0
now in PARAMETER_SECTION 
 now dimension the selectivity arrays 16
 11.5 -5 0 -2 -15 -5 11.5 -5 0 -2 -15 -5 0 0 0 0
 120.5 3 25.5 16 5 1000 120.5 3 25.5 16 5 1000 1 101 1 101
 2 -99 3 -99 -99 -99 -2 -99 -3 -99 -99 -99 -3 -3 -3 -3
 OK after dimension the selectivity arrays 
 check 0 
 OK after dimension the 2dar arrays 
end of parameter section
 do variance adjustment for surveys 
 survey stderr has been set-up 
 discard stderr has been set-up 
 mean bodywt stderr has been set-up 
 length comp var adjust has been set-up 
 age comp var adjust has been set-up 
 setup stderr for mean size-at-age: 
 set parms to init values in CTL file 
 MGparms read from ctl  0.09 4.63 55 0.088 0.1 0.1 6.8e-06 3.101 36.3 -0.276 1 0 0 0 0 1 0.5
 SRR_parms read from ctl  10 0.7 0.8 0 0
 rec_devs read from ctl  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 Q_parms read from ctl  0
 selex_parms read from ctl  42 -3 5.1 15 -999 999 42 -3 5.1 15 -999 999 0.1 100 0.1 100

 now check MGparm bounds and priors and do jitter if requested 
 MG_parms after check  0.09 4.63 55 0.088 0.1 0.1 6.8e-06 3.101 36.3 -0.276 1 0 0 0 0 1 0.5

 now check SR_parm bounds and priors and do jitter if requested 
jitter (min, max, old, new):  4 20 10 10.0065
 SRR_parms after check  10.0065 0.7 0.8 0 0
jitter (min, max, old, new):  -5 5 0 0.024873
jitter (min, max, old, new):  -5 5 0 -0.0223716
jitter (min, max, old, new):  -5 5 0 -0.0197514
jitter (min, max, old, new):  -5 5 0 0.013983
jitter (min, max, old, new):  -5 5 0 0.0086979
jitter (min, max, old, new):  -5 5 0 0.00522146
jitter (min, max, old, new):  -5 5 0 -0.00140638
jitter (min, max, old, new):  -5 5 0 -0.036661
jitter (min, max, old, new):  -5 5 0 -0.0158415
jitter (min, max, old, new):  -5 5 0 -0.0327303
jitter (min, max, old, new):  -5 5 0 0.0353411
jitter (min, max, old, new):  -5 5 0 0.0257045
jitter (min, max, old, new):  -5 5 0 0.00157256
jitter (min, max, old, new):  -5 5 0 -0.00905386
jitter (min, max, old, new):  -5 5 0 -0.00456132
jitter (min, max, old, new):  -5 5 0 -0.0277311
jitter (min, max, old, new):  -5 5 0 0.0310482
jitter (min, max, old, new):  -5 5 0 0.0213062
jitter (min, max, old, new):  -5 5 0 -0.0276271
jitter (min, max, old, new):  -5 5 0 0.0391727
jitter (min, max, old, new):  -5 5 0 -0.0202535
jitter (min, max, old, new):  -5 5 0 0.0181723
jitter (min, max, old, new):  -5 5 0 0.0203013
jitter (min, max, old, new):  -5 5 0 0.0281252
jitter (min, max, old, new):  -5 5 0 -0.00529905
jitter (min, max, old, new):  -5 5 0 -0.0124358
jitter (min, max, old, new):  -5 5 0 0.0275145
jitter (min, max, old, new):  -5 5 0 0.033194
jitter (min, max, old, new):  -5 5 0 -0.00237925

 now check recdev bounds and priors and do jitter if requested 
jitter (min, max, old, new):  -5 5 0 0.0315106
jitter (min, max, old, new):  -5 5 0 0.00138853
jitter (min, max, old, new):  -5 5 0 -0.0166721
jitter (min, max, old, new):  -5 5 0 -0.0282632
jitter (min, max, old, new):  -5 5 0 0.0143253
jitter (min, max, old, new):  -5 5 0 -0.025349
jitter (min, max, old, new):  -5 5 0 0.00658125
jitter (min, max, old, new):  -5 5 0 0.0272769
jitter (min, max, old, new):  -5 5 0 0.0136889
jitter (min, max, old, new):  -5 5 0 0.0342345
jitter (min, max, old, new):  -5 5 0 0.00550686
jitter (min, max, old, new):  -5 5 0 0.0258059
jitter (min, max, old, new):  -5 5 0 0.0173065
jitter (min, max, old, new):  -5 5 0 0.0238339
jitter (min, max, old, new):  -5 5 0 -0.00995006
jitter (min, max, old, new):  -5 5 0 0.00281383
jitter (min, max, old, new):  -5 5 0 -0.0268336
jitter (min, max, old, new):  -5 5 0 0.0286089
jitter (min, max, old, new):  -5 5 0 -0.0107824
jitter (min, max, old, new):  -5 5 0 0.0338875
jitter (min, max, old, new):  -5 5 0 -0.0145837
jitter (min, max, old, new):  -5 5 0 0.0303733
jitter (min, max, old, new):  -5 5 0 -0.00914979
jitter (min, max, old, new):  -5 5 0 -0.00326437
jitter (min, max, old, new):  -5 5 0 -0.015312
jitter (min, max, old, new):  -5 5 0 -0.0120732
jitter (min, max, old, new):  -5 5 0 -0.0235771
jitter (min, max, old, new):  -5 5 0 -0.0122397
jitter (min, max, old, new):  -5 5 0 0.0142783
jitter (min, max, old, new):  -5 5 0 0.0174626
jitter (min, max, old, new):  -5 5 0 0.01916
jitter (min, max, old, new):  -5 5 0 -0.029256
jitter (min, max, old, new):  -5 5 0 0.0255113
jitter (min, max, old, new):  -5 5 0 0.000942868
jitter (min, max, old, new):  -5 5 0 -0.0261094
jitter (min, max, old, new):  -5 5 0 0.00671426
jitter (min, max, old, new):  -5 5 0 -0.0113734
jitter (min, max, old, new):  -5 5 0 0.00422811
jitter (min, max, old, new):  -5 5 0 -0.0391191
jitter (min, max, old, new):  -5 5 0 -0.0319734
jitter (min, max, old, new):  -5 5 0 -0.0277901
jitter (min, max, old, new):  -5 5 0 -0.0175203
jitter (min, max, old, new):  -5 5 0 0.0377185
jitter (min, max, old, new):  -5 5 0 0.0165914
jitter (min, max, old, new):  -5 5 0 -0.036384
jitter (min, max, old, new):  -5 5 0 0.0267918
jitter (min, max, old, new):  -5 5 0 -0.0192052
jitter (min, max, old, new):  -5 5 0 0.00574363
jitter (min, max, old, new):  -5 5 0 -0.0367823
jitter (min, max, old, new):  -5 5 0 -0.0218045
jitter (min, max, old, new):  -5 5 0 -0.00779235
jitter (min, max, old, new):  -5 5 0 0.00210657
jitter (min, max, old, new):  -5 5 0 0.0259171
jitter (min, max, old, new):  -5 5 0 0.00484923
jitter (min, max, old, new):  -5 5 0 0.0252172
 rec_devs after check  0.024873 -0.0223716 -0.0197514 0.013983 0.0086979 0.00522146 -0.00140638 -0.036661 -0.0158415 -0.0327303 0.0353411 0.0257045 0.00157256 -0.00905386 -0.00456132 -0.0277311 0.0310482 0.0213062 -0.0276271 0.0391727 -0.0202535 0.0181723 0.0203013 0.0281252 -0.00529905 -0.0124358 0.0275145 0.033194 -0.00237925 0.0311976 0.00107552 -0.0169851 -0.0285762 0.0140123 -0.025662 0.00626824 0.0269639 0.0133759 0.0339215 0.00519385 0.0254929 0.0169935 0.0235209 -0.0102631 0.00250082 -0.0271466 0.0282959 -0.0110954 0.0335745 -0.0148967 0.0300603 -0.0094628 -0.00357738 -0.015625 -0.0123862 -0.0238901 -0.0125527 0.0139653 0.0171496 0.018847 -0.029569 0.0251983 0.000629859 -0.0264224 0.00640125 -0.0116865 0.0039151 -0.0394321 -0.0322864 -0.0281031 -0.0178333 0.0374055 0.0162784 -0.036697 0.0264787 -0.0195182 0.00543063 -0.0370953 -0.0221175 -0.00810536 0.00179356 0.0256041 0.00453622 0.0249042 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

 now check Qparm bounds and priors and do jitter if requested 
 Q_parms after check  0

 now check sel_parm bounds and priors and do jitter if requested 
jitter (min, max, old, new):  11.5 120.5 42 41.6813
jitter (min, max, old, new):  0 25.5 5.1 5.30607
 selex_parms after check   41.6813 -3 5.30607 15 -999 999 42 -3 5.1 15 -999 999 0.1 100 0.1 100
 ready to evaluate once 

**********************
number of parameters with timevary:  0
 did MG setup
 did growth1
GROWTH,  yr= 1
sex: 1 GP: 1 Lmin: 4.63 Linf: 55 VBK_temp: -0.088 VBK@age:  0.088
  settlement: 1 g: 1
  L@A initial_year (w/o lin):  4.63 8.87312 12.7588 16.3172 19.5758 22.5599 25.2926 plusgroup: 54.7435
  adjusted size at maxage 54.7628  using decay of: -999
  seas: 1  size@t+1:   0 8.87312 12.7588 16.3172 19.5758 22.5599 25.2926 plusgroup: 54.7628
 did growth2 in prelim calcs
 4.63 8.87312 12.7588 16.3172 19.5758 22.5599 25.2926 27.7951 30.0869 32.1855 34.1074 35.8674 37.4791 38.955 40.3066 41.5444 42.6779 43.7159 44.6665 45.5369 46.3341 47.0641 47.7326 48.3448 48.9054 49.4188 49.889 50.3195 50.7138 51.0749 51.4055 51.7083 51.9856 52.2395 52.4721 52.685 52.88 53.0586 53.2222 53.3719 53.5091 53.6347 53.7497 53.855 53.9515 54.0398 54.1207 54.1948 54.2626 54.3247 54.3816 54.4337 54.4814 54.5251 54.5651 54.6017 54.6353 54.666 54.6941 54.7199 54.7628
ready to do natmort 
Natmort seas:1 sex:1 Gpat:1 sex*Gpat:1 settlement:1 gpi:1 M:  0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09
 did natmort 
wtlen2 
 0.00998199 0.0132353 0.0171406 0.0217608 0.0271588 0.0333985 0.040544 0.0486598 0.0578107 0.0680622 0.07948 0.0921299 0.106078 0.121392 0.138138 0.156383 0.176195 0.197642 0.220792 0.245712 0.272473 0.301141 0.331787 0.364479 0.399288 0.436282 0.475531 0.517106 0.561077 0.607514 0.656488 0.70807 0.76233 0.81934 0.879171 0.941894 1.00758 1.07631 1.14814 1.22315 1.30141 1.383 1.46799 1.55645 1.64845 1.74406 1.84336 1.94643 2.05333 2.16414 2.27894 2.39779 2.52077 2.64795 2.77942 2.91523 3.05548 3.20022 3.34954 3.50351 3.66221 3.82571 3.99408 4.16741 4.34576 4.52921 4.71784 4.91172 5.11093 5.31554 5.52563 5.74128 5.96256
wtlen2^2  9.964e-05 0.000175172 0.000293801 0.00047353 0.000737602 0.00111546 0.00164382 0.00236777 0.00334208 0.00463247 0.00631706 0.00848792 0.0112526 0.014736 0.0190821 0.0244557 0.0310448 0.0390624 0.048749 0.0603746 0.0742413 0.0906859 0.110083 0.132845 0.159431 0.190342 0.22613 0.267399 0.314808 0.369074 0.430977 0.501363 0.581147 0.671318 0.772941 0.887165 1.01522 1.15843 1.31822 1.4961 1.69368 1.9127 2.15499 2.42252 2.71737 3.04175 3.39799 3.78859 4.21617 4.68352 5.19355 5.74938 6.35427 7.01165 7.72515 8.49858 9.33593 10.2414 11.2194 12.2746 13.4118 14.6361 15.9527 17.3673 18.8856 20.5137 22.258 24.125 26.1216 28.255 30.5326 32.9623 35.5521
wtlen2:firstdiff  0.00295059 0.00357152 0.00425487 0.00500117 0.00581091 0.00668454 0.00762251 0.00862522 0.00969306 0.0108264 0.0120256 0.0132909 0.0146227 0.0160214 0.0174871 0.0190202 0.020621 0.0222897 0.0240265 0.0258318 0.0277057 0.0296485 0.0316605 0.0337417 0.0358925 0.038113 0.0404035 0.0427642 0.0451952 0.0476967 0.0502689 0.052912 0.0556261 0.0584115 0.0612684 0.0641967 0.0671968 0.0702688 0.0734128 0.076629 0.0799176 0.0832786 0.0867123 0.0902187 0.0937981 0.0974504 0.101176 0.104975 0.108847 0.112793 0.116813 0.120906 0.125074 0.129315 0.133631 0.13802 0.142485 0.147024 0.151637 0.156325 0.161088 0.165927 0.17084 0.175828 0.180892 0.186031 0.191245 0.196535 0.201901 0.207343 0.21286 0.218454
process maturity fecundity using option: 1
gp: 1 matlen:  0.000807467 0.00106385 0.00140151 0.00184616 0.00243153 0.00320191 0.00421534 0.00554775 0.00729822 0.00959568 0.0126072 0.0165481 0.0216937 0.0283932 0.0370833 0.0483008 0.0626907 0.0810028 0.10407 0.132757 0.16787 0.210021 0.259456 0.315874 0.378293 0.445023 0.513796 0.582051 0.647302 0.707485 0.761187 0.80771 0.846992 0.879447 0.905783 0.926845 0.943492 0.956528 0.966664 0.974499 0.98053 0.985156 0.988696 0.991399 0.99346 0.995029 0.996224 0.997132 0.997822 0.998346 0.998745 0.999047 0.999277 0.999451 0.999583 0.999684 0.99976 0.999818 0.999862 0.999895 0.99992 0.99994 0.999954 0.999965 0.999974 0.99998 0.999985 0.999988 0.999991 0.999993 0.999995 0.999996 0.999997
gp: 1 matage:  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
mat_fec_len 
 8.06013e-06 1.40803e-05 2.40228e-05 4.01738e-05 6.60375e-05 0.000106939 0.000170907 0.000269952 0.000421915 0.000653104 0.00100202 0.00152457 0.00230123 0.00344671 0.00512261 0.00755344 0.0110458 0.0160096 0.0229778 0.03262 0.0457399 0.0632459 0.086084 0.115129 0.151048 0.194155 0.244326 0.300982 0.363186 0.429807 0.499711 0.571915 0.645687 0.720566 0.796338 0.87299 0.950646 1.02952 1.10986 1.19196 1.27608 1.36247 1.45139 1.54306 1.63766 1.73539 1.8364 1.94085 2.04886 2.16056 2.27608 2.3955 2.51894 2.6465 2.77826 2.91431 3.05474 3.19964 3.34908 3.50315 3.66192 3.82548 3.9939 4.16726 4.34564 4.52912 4.71777 4.91166 5.11088 5.3155 5.5256 5.74126 5.96254
 spawn 
 fecundity ok 
do recrdist: 
 femfrac  0.5
recruitment distribution in year: 1
GP Seas Area Use? female_recr_dist male
1 1 1 1 1
 made the age_age' key 

**********************
number of parameters with timevary:  0
yr 1, seas: 1, fleet:1
 sampled  size  257.291 69.817 61.4249 82.9462 137.566 180.54 210.542 266.152 351.797 442.734 539.445 660.091 806.689 971.292 1154.42 1360.58 1589.21 1837.05 2101.88 2381.35 2671.41 2966.97 3262.41 3551.6 3827.85 4084.24 4313.84 4509.89 4666.06 4776.51 4836.15 4840.76 4803.01 4750.61 4680.09 4586.79 4466 4313.42 4125.83 3901.66 3641.57 3348.83 3029.34 2691.4 2345.03 2001.14 1670.44 1362.48 1084.78 842.326 637.381 469.67 336.813 234.935 159.314 104.983 67.2 41.7696 25.2033 14.7584 8.38497 4.62111 2.46996 1.28012 0.643228 0.313302 0.147908 0.0676698 0.0300004 0.0128867 0.00536291 0.00216205 0.00134338
 sampled  age   170.367 193.648 494.896 1072.6 1936.77 3010.97 4145.08 5173.71 5970.42 6473.42 6683.71 6647.55 6432.41 6105.15 5719.24 5311.79 4905.93 4514.88 4145.43 3800.53 3480.93 3186.15 2915.07 2666.26 2438.18 2229.3 2038.1 1863.15 1703.13 1556.79 1422.98 1300.64 1188.8 1086.55 993.091 907.661 829.573 758.199 692.963 633.337 578.839 529.029 483.504 441.896 403.868 369.112 337.346 308.314 281.78 257.529 235.366 215.109 196.596 179.676 164.212 150.079 137.163 125.358 114.569 104.708 1111.86
yr 100, seas: 1, fleet:1
 sampled  size  212.959 57.5848 50.565 68.0963 112.83 147.912 172.116 217.023 286.22 359.277 436.349 532.133 648.177 777.728 920.597 1079.38 1251.95 1433.64 1620.73 1809.7 1995.97 2174.29 2339.31 2485.9 2609.5 2706.34 2773.4 2808.11 2808.37 2772.62 2700.16 2591.59 2457.12 2313.8 2162.08 2002.66 1836.78 1666.28 1493.42 1320.86 1151.47 988.195 833.884 691.072 561.811 447.531 348.951 266.064 198.195 144.118 102.221 70.6726 47.598 31.2112 19.916 12.3615 7.4601 4.37591 2.49405 1.38079 0.742383 0.387528 0.196364 0.096566 0.0460801 0.0213335 0.00958091 0.00417343 0.00176306 0.000722245 0.000286879 0.000110477 6.40416e-05
 sampled  age   141.234 159.797 406.172 875.168 1566.71 2405.32 3336.12 3987.69 4568.28 4677.92 4606.13 4336.94 3959.45 3748.84 3270.17 3032.4 2504.07 2311.15 2058.41 1693.05 1452.25 1251.85 1074.71 969.285 823.227 722.424 602.069 532.525 469.799 382.863 345.903 297.095 254.507 212.569 179.716 154.83 130.798 111.592 93.0044 80.7151 64.0079 55.4741 43.6434 37.2468 28.8404 24.2535 19.4737 16.32 13.0936 10.6379 8.38659 6.94422 5.48059 4.48608 3.55917 2.80208 2.37868 1.86691 1.5527 1.30467 7.50735
